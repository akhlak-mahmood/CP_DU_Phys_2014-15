(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    422513,       9256]
NotebookOptionsPosition[    401434,       8539]
NotebookOutlinePosition[    402766,       8581]
CellTagsIndexPosition[    402550,       8573]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Tutorial - 1"
}], "Title",
 CellChangeTimes->{{3.664113738929843*^9, 3.664113767671423*^9}}],

Cell["* Click Evaluation >> Evaluate Notebook", "Text",
 CellChangeTimes->{{3.6641550747973785`*^9, 3.6641551139600673`*^9}},
 FontWeight->"Bold",
 FontSlant->"Italic"],

Cell[CellGroupData[{

Cell["Different Modes", "Section",
 CellChangeTimes->{{3.6641141848205314`*^9, 3.664114190025031*^9}}],

Cell[TextData[{
 "Alt + 7 for text, Alt + 9 for math cell.\nWhile inside any cell, Ctrl + 9 \
toggles on ",
 StyleBox["inline",
  FontWeight->"Bold"],
 " text/math and Ctrl + 0 toggles off that.\nClicking the ",
 StyleBox["Format >> Style",
  FontSlant->"Italic"],
 " from the top menu bar lets you select different format for the current \
cell."
}], "Text",
 CellChangeTimes->{{3.6641141848205314`*^9, 3.6641142831250873`*^9}, {
  3.6641168076932325`*^9, 3.6641168164418354`*^9}, {3.664117031952896*^9, 
  3.664117109616767*^9}}],

Cell["\<\
To create a new cell below, type Ctrl + Shift + D.\[LineSeparator]Clicking \
anywhere, while the cursor is shown horizontal, you can enter to a new cell.\
\>", "Text",
 CellChangeTimes->{{3.6641141848205314`*^9, 3.6641142831250873`*^9}, {
  3.6641168076932325`*^9, 3.66411688742986*^9}, {3.6641171304321847`*^9, 
  3.664117206758934*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute Commands", "Section",
 CellChangeTimes->{{3.664113738929843*^9, 3.664113796837015*^9}}],

Cell[TextData[{
 "Restarting or clearing the variables.\n",
 StyleBox["Note ",
  FontWeight->"Bold"],
 "the ",
 StyleBox["back qoute",
  FontSlant->"Italic"],
 " ( ` ), NOT a single qoute ( \[OpenCurlyQuote] )!!"
}], "Text",
 CellChangeTimes->{{3.664113738929843*^9, 3.6641138230721555`*^9}, {
  3.6641140282572603`*^9, 3.664114044022447*^9}, {3.664158369564948*^9, 
  3.664158407398117*^9}, {3.6641614880537014`*^9, 3.664161559851172*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.664113738929843*^9, 3.664113838386401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "+", "7"}]], "Input",
 CellChangeTimes->{{3.6641138997809477`*^9, 3.664113901530427*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6641550518207083`*^9, 3.664167144350374*^9}]
}, Open  ]],

Cell["Adding a semi colon supresses the output.", "Text",
 CellChangeTimes->{{3.664118032802321*^9, 3.6641180519979544`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", "+", "7"}], ";"}]], "Input",
 CellChangeTimes->{{3.664118032802321*^9, 3.6641180590048647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Operations", "Section",
 CellChangeTimes->{{3.6641139090589623`*^9, 3.6641139165045843`*^9}}],

Cell["Power is only ^ not **", "Text",
 CellChangeTimes->{{3.6641139090589623`*^9, 3.6641139165045843`*^9}, {
  3.6641140619933624`*^9, 3.664114073958418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "/", "2"}], ")"}], "*", "3"}], "-", 
  RowBox[{"7", "^", "8"}], "+", 
  RowBox[{"7", "**", "8"}]}]], "Input",
 CellChangeTimes->{{3.6641139090589623`*^9, 3.6641139165045843`*^9}, {
  3.6641140619933624`*^9, 3.664114093799292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5764795"}], "+", 
  RowBox[{"7", "**", "8"}]}]], "Output",
 CellChangeTimes->{3.664155051851966*^9, 3.6641671443881354`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "/", "2"}], ")"}], "*", "3"}], "-", 
  RowBox[{"7", "^", "8"}], "+", 
  RowBox[{"7", "^", "8"}]}]], "Input",
 CellChangeTimes->{{3.6641139090589623`*^9, 3.6641139165045843`*^9}, {
  3.6641140619933624`*^9, 3.6641141105985823`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.664155051867592*^9, 3.664167144403767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2485", "/", "3479"}]], "Input",
 CellChangeTimes->{{3.6641143674297705`*^9, 3.6641143727678957`*^9}}],

Cell[BoxData[
 FractionBox["5", "7"]], "Output",
 CellChangeTimes->{3.664155051867592*^9, 3.664167144403767*^9}]
}, Open  ]],

Cell["Ctrl + L lets you input the last command entered.", "Text",
 CellChangeTimes->{{3.664114385197212*^9, 3.664114407189325*^9}, {
  3.664122089452677*^9, 3.6641220958716345`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2485.", "/", "3479"}]], "Input",
 CellChangeTimes->{{3.6641144492250757`*^9, 3.6641144580882564`*^9}}],

Cell[BoxData["0.7142857142857143`"], "Output",
 CellChangeTimes->{3.664155051914464*^9, 3.6641671444193916`*^9}]
}, Open  ]],

Cell["To show upto 40 decimal places", "Text",
 CellChangeTimes->{{3.6641144916362514`*^9, 3.6641145056878276`*^9}, {
  3.6641152780779595`*^9, 3.6641152873185997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{
   RowBox[{"2485", "/", "3479"}], ",", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.664115230462883*^9, 3.664115251712162*^9}}],

Cell[BoxData["0.\
71428571428571428571428571428571428571428571428571428571428571428571428571428`\
40."], "Output",
 CellChangeTimes->{3.6641550519457164`*^9, 3.664167144435018*^9}]
}, Open  ]],

Cell["Numerical value of a float", "Text",
 CellChangeTimes->{{3.664115340039505*^9, 3.6641153491781607`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"2485", "/", "3479"}], ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.664115340039505*^9, 3.6641153762326703`*^9}}],

Cell[BoxData["0.7142857142857142857142857142857142857142857142857142857143`20.\
"], "Output",
 CellChangeTimes->{3.664155051976968*^9, 3.664167144450646*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1.0", "*", 
  RowBox[{"10", "^", 
   RowBox[{"(", 
    RowBox[{"-", "6"}], 
    ")"}]}]}], "\[IndentingNewLine]", "1.0*^-6", "\[IndentingNewLine]", \
"1*^-6"}], "Input",
 CellChangeTimes->{{3.6641154135399714`*^9, 3.664115421645008*^9}, {
  3.664115453568087*^9, 3.664115454000021*^9}, {3.6641156137957196`*^9, 
  3.6641156563776474`*^9}}],

Cell[BoxData["1.`*^-6"], "Output",
 CellChangeTimes->{3.664155051976968*^9, 3.6641671444662695`*^9}],

Cell[BoxData["1.`*^-6"], "Output",
 CellChangeTimes->{3.664155051976968*^9, 3.6641671444662695`*^9}],

Cell[BoxData[
 FractionBox["1", "1000000"]], "Output",
 CellChangeTimes->{3.664155051976968*^9, 3.6641671444662695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["E"], "Input",
 CellChangeTimes->{3.664115686785928*^9}],

Cell[BoxData["\[ExponentialE]"], "Output",
 CellChangeTimes->{3.664155052008219*^9, 3.6641671444879055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "\[ExponentialE]", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["2.718281828459045`"], "Output",
 CellChangeTimes->{3.664155052008219*^9, 3.6641671444879055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1.", "*", "E"}], "-", "6"}]], "Input",
 CellChangeTimes->{{3.6641157062791634`*^9, 3.6641157124518566`*^9}}],

Cell[BoxData[
 RowBox[{"-", "3.281718171540955`"}]], "Output",
 CellChangeTimes->{3.6641550520238447`*^9, 3.6641671445039487`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "1.*^-6", "]"}]], "Input",
 CellChangeTimes->{{3.6641157367582693`*^9, 3.664115738274975*^9}, {
  3.6641158137533817`*^9, 3.664115820799077*^9}}],

Cell[BoxData[
 RowBox[{"-", "13.815510557964274`"}]], "Output",
 CellChangeTimes->{3.6641550520550966`*^9, 3.664167144519575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{"%", ",", " ", "40"}], "]"}]], "Input",
 CellChangeTimes->{{3.664115838241784*^9, 3.664115844477661*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  "13.81551055796427363020484335720539093017578125`40."}]], "Output",
 CellChangeTimes->{3.6641550520707226`*^9, 3.6641671445352*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "1.", "]"}]], "Input",
 CellChangeTimes->{{3.664115849014751*^9, 3.664115852873295*^9}}],

Cell[BoxData["2.718281828459045`"], "Output",
 CellChangeTimes->{3.6641550520707226`*^9, 3.664167144550825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.6641158588525043`*^9, 3.66411586184921*^9}}],

Cell[BoxData["\[ExponentialE]"], "Output",
 CellChangeTimes->{3.664155052086348*^9, 3.6641671445664525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Exp", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641159184179835`*^9, 3.6641159228886786`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6641550521019735`*^9, 3.6641671445885887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"10", "!"}], "]"}]], "Input",
 CellChangeTimes->{{3.664115951660294*^9, 3.664115966104289*^9}}],

Cell[BoxData[
 RowBox[{"720", " ", 
  SqrtBox["7"]}]], "Output",
 CellChangeTimes->{3.6641550521175995`*^9, 3.6641671445885887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.6641159754422703`*^9, 3.6641159756954546`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.6641550521332245`*^9, 3.6641671446198454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.6641159804258757`*^9, 3.6641159831442842`*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.6641550521644773`*^9, 3.6641671446198454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.664115989565858*^9, 3.664116001061486*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6641550521801033`*^9, 3.664167144635471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log10", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.664116003217821*^9, 3.664116009152155*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", "x", "]"}], 
  RowBox[{"Log", "[", "10", "]"}]]], "Output",
 CellChangeTimes->{3.6641550521957293`*^9, 3.664167144651097*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Abs", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6641160194795003`*^9, 3.664116023852148*^9}}],

Cell[BoxData[
 RowBox[{"Abs", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6641550522113543`*^9, 3.6641671446667233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6641160277373333`*^9, 3.6641160295213146`*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6641550522269807`*^9, 3.664167144688858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.664116044613344*^9, 3.6641160479363756`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6641550522426095`*^9, 3.6641671447044907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "pi", "]"}]], "Input",
 CellChangeTimes->{{3.6641160609677625`*^9, 3.6641160635711517`*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "pi", "]"}]], "Output",
 CellChangeTimes->{3.6641550522426095`*^9, 3.664167144720115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", 
    RowBox[{"3", "*", "I"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"5", "-", 
    RowBox[{"4", "*", "I"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6641160711393085`*^9, 3.6641161048244047`*^9}, {
  3.6641165150068803`*^9, 3.6641165388025227`*^9}, {3.664116590683185*^9, 
  3.6641165908839197`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", "41"]}], "+", 
  FractionBox[
   RowBox[{"23", " ", "\[ImaginaryI]"}], "41"]}]], "Output",
 CellChangeTimes->{3.664155052258232*^9, 3.664167144720115*^9}]
}, Open  ]],

Cell["Converting a complex no to polar form", "Text",
 CellChangeTimes->{{3.6641166871386786`*^9, 3.6641167060718346`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", "%", "]"}], "*", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{"I", " ", "*", " ", 
    RowBox[{"Arg", "[", "%", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641161108767657`*^9, 3.664116121040919*^9}, {
   3.6641161514740057`*^9, 3.6641161574923244`*^9}, {3.6641163747886195`*^9, 
   3.6641163757048607`*^9}, 3.6641164155726023`*^9, {3.664116594971966*^9, 
   3.6641166163938894`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["13", "41"]], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"ArcTan", "[", 
       FractionBox["23", "2"], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.664155052273858*^9, 3.6641671447513685`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox[
    FractionBox["13", "41"]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcTan", "[", 
        FractionBox["23", "2"], "]"}]}], ")"}]}]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.04878048780487797`"}], "+", 
  RowBox[{"0.5609756097560976`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.664155052320737*^9, 3.664167144804755*^9}]
}, Open  ]],

Cell["\<\
Getting help and extended help. Clicking the >> opens the detailed help \
window.\
\>", "Text",
 CellChangeTimes->{{3.66411671922429*^9, 3.6641167405782647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "N"}]], "Input",
 CellChangeTimes->{{3.6641166421882744`*^9, 3.6641166494935846`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"N\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\"]\\\"}]\) gives the numerical value of \!\(\*StyleBox[\\\"expr\
\\\", \\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"N\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) attempts to give a result with \!\(\*StyleBox[\\\"n\\\", \\\"TI\
\\\"]\)\[Hyphen]digit precision. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6641671450209208`*^9},
 CellTags->"Info3664188744-3324783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "N"}]], "Input",
 CellChangeTimes->{{3.664116653282448*^9, 3.6641166563021307`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"N\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\"]\\\"}]\) gives the numerical value of \!\(\*StyleBox[\\\"expr\
\\\", \\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"N\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) attempts to give a result with \!\(\*StyleBox[\\\"n\\\", \\\"TI\
\\\"]\)\[Hyphen]digit precision. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/N"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.664167145152438*^9},
 CellTags->"Info3664188745-3324783"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "N", "]"}], "=", 
      RowBox[{"{", "Protected", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{"N", "/:", 
         RowBox[{"Default", "[", 
          RowBox[{"N", ",", "2"}], "]"}], ":=", 
         RowBox[{"{", 
          RowBox[{"MachinePrecision", ",", "MachinePrecision"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[N],
  Editable->False]], "Print",
 CellChangeTimes->{3.664167145168064*^9},
 CellTags->"Info3664188745-3324783"]
}, Open  ]]
}, Open  ]],

Cell["Normal MachinePrecision is 16 digits. This can be checked.", "Text",
 CellChangeTimes->{{3.664116775040719*^9, 3.664116797304624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "MachinePrecision", "]"}]], "Input",
 CellChangeTimes->{{3.664116775040719*^9, 3.664116797304624*^9}, {
  3.6641172285020447`*^9, 3.664117255097534*^9}}],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{3.664155053055149*^9, 3.664167145205572*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sums and Products", "Section",
 CellChangeTimes->{{3.6641172932788415`*^9, 3.6641173011494436`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6641172932788415`*^9, 3.6641173446772327`*^9}, {
  3.6641584256849995`*^9, 3.6641584263004837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "10"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{"i", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "0", ",", "10", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", " ", "i"}], "]"}]}], "Input",
 CellChangeTimes->{{3.664117513942977*^9, 3.6641175795066147`*^9}, {
  3.6641176548776846`*^9, 3.6641176864127393`*^9}, {3.664118498908472*^9, 
  3.6641185310751877`*^9}}],

Cell[BoxData["385"], "Output",
 CellChangeTimes->{3.664155053086399*^9, 3.66416714525245*^9}],

Cell[BoxData["385"], "Output",
 CellChangeTimes->{3.664155053086399*^9, 3.66416714525245*^9}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{3.664155053086399*^9, 3.66416714525245*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155053086399*^9, 3.664167145368348*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", "i", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "i"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155053086399*^9, 3.664167145368348*^9}]
}, Open  ]],

Cell["Summing the cos series", "Text",
 CellChangeTimes->{{3.6641181059757133`*^9, 3.6641181110099325`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "i"}], "*", 
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}]}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}], "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664117836281379*^9, 3.664117893729184*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"]}]], "Output",
 CellChangeTimes->{3.664155054023947*^9, 3.664167145537645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "i"}], "*", 
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}]}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}], "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664117836281379*^9, 3.6641179182040987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "n"], " ", 
    SuperscriptBox["x", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "n"}]}]], " ", 
    RowBox[{"HypergeometricPFQ", "[", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["3", "2"], "+", "n"}], ",", 
        RowBox[{"2", "+", "n"}]}], "}"}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "4"]}]}], "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "n"}], ")"}]}], ")"}], "!"}]]}]], "Output",
 CellChangeTimes->{3.6641550562740607`*^9, 3.6641671462904286`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "i"}], "*", 
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}]}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}], "!"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664117836281379*^9, 3.66411793405834*^9}}],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.664155056492821*^9, 3.664167146292429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", "i"}], "*", 
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}]}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "i"}], ")"}], "!"}]}]}], ",", "i"}], "]"}]], "Input",
 CellChangeTimes->{{3.664117836281379*^9, 3.6641179478822927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"Cos", "[", "x", "]"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], ")"}], "i"], " ", 
    RowBox[{"HypergeometricPFQ", "[", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], "+", "i"}], ",", 
        RowBox[{"1", "+", "i"}]}], "}"}], ",", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "4"]}]}], "]"}]}], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "i"}]}], "]"}]]}]], "Output",
 CellChangeTimes->{3.664155057102229*^9, 3.6641671467249603`*^9}]
}, Open  ]],

Cell["The product works just like sum.", "Text",
 CellChangeTimes->{{3.6641181298816967`*^9, 3.664118147987183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "^", "2"}], "+", 
      RowBox[{"3", "*", "i"}], "-", "11"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"i", "+", "3"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664118153591359*^9, 3.664118219431327*^9}, 
   3.6641188487045636`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["7781706512657", "40435200"]}]], "Output",
 CellChangeTimes->{3.6641550571178536`*^9, 3.664167146941126*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell["Esc", "KeyEvent"],
 StyleBox["\[ThinSpace]prod\[ThinSpace]", "InlineCode"],
 Cell["Esc", "KeyEvent"],
 " to enter ",
 Cell[BoxData["\[Product]"], "InlineFormula"],
 " and ",
 Cell["Ctrl", "KeyEvent"],
 StyleBox["+", "KeyEventDelimiter"],
 Cell["_", "KeyEvent"],
 " to enter the lower limit, then ",
 Cell["Ctrl", "KeyEvent"],
 StyleBox["+", "KeyEventDelimiter"],
 Cell["%", "KeyEvent"],
 " for the upper limit. Use the Basic Math Assistant to enter symbolic inputs."
}], "Text",
 CellChangeTimes->{
  3.6641183174682035`*^9, {3.6641184464632*^9, 3.664118466570678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Product]", 
   RowBox[{"i", "=", "0"}], "10"], 
  FractionBox[
   RowBox[{
    SuperscriptBox["i", "2"], "+", 
    RowBox[{"3", "i"}], "-", "11"}], 
   RowBox[{"i", "+", "3"}]]}]], "Input",
 CellChangeTimes->{{3.664118327829996*^9, 3.6641184356753855`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["7781706512657", "40435200"]}]], "Output",
 CellChangeTimes->{3.6641550571178536`*^9, 3.664167146972377*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " NSum[] and NProduct[] give numerical approximations to sum and product \
respectively."
}], "Text",
 CellChangeTimes->{{3.664118562269692*^9, 3.664118590314638*^9}, {
  3.6641188927513514`*^9, 3.664118894221849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"i", "^", "2"}], "+", 
      RowBox[{"3", "*", "i"}], "-", "11"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"i", "+", "3"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "0", ",", " ", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664118153591359*^9, 3.664118219431327*^9}, {
  3.6641188487045636`*^9, 3.6641188709250793`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{
       SqrtBox["53"], " ", "\[Pi]"}], "2"], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["5", "2"], "-", 
      FractionBox[
       SqrtBox["53"], "2"], "+", "n"}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["5", "2"], "+", 
      FractionBox[
       SqrtBox["53"], "2"], "+", "n"}], "]"}]}], 
   RowBox[{"13", " ", "\[Pi]", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"4", "+", "n"}], "]"}]}]]}]], "Output",
 CellChangeTimes->{3.6641550573834934`*^9, 3.664167147210688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641551407329206`*^9, 3.664155143473518*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"0.02085838018693127`", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "1.140054944640259`"}], "+", "n"}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"6.140054944640259`", "\[VeryThinSpace]", "+", "n"}], "]"}]}], 
   RowBox[{"Gamma", "[", 
    RowBox[{"4.`", "\[VeryThinSpace]", "+", "n"}], "]"}]]}]], "Output",
 CellChangeTimes->{3.664155144520488*^9, 3.664167147226314*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Manipulations", "Section",
 CellChangeTimes->{{3.664155159479771*^9, 3.664155165607836*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global'*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6641551766168485`*^9, 3.6641551846527147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641552010352697`*^9, 3.6641552131433954`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.66415521559354*^9, 3.6641671472575655`*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell["Esc", "KeyEvent"],
 StyleBox["\[ThinSpace]sum\[ThinSpace]", "InlineCode"],
 Cell["Esc", "KeyEvent"],
 " to enter ",
 Cell[BoxData["\[Sum]"], "InlineFormula"],
 " and ",
 Cell["Ctrl", "KeyEvent"],
 StyleBox["+", "KeyEventDelimiter"],
 Cell["_", "KeyEvent"],
 " to enter the lower limit, then ",
 Cell["Ctrl", "KeyEvent"],
 StyleBox["+", "KeyEventDelimiter"],
 Cell["%", "KeyEvent"],
 " for the upper limit."
}], "Text",
 CellChangeTimes->{{3.6641553811427774`*^9, 3.6641554303482957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "n"], "i"}]], "Input",
 CellChangeTimes->{{3.6641553424691515`*^9, 3.664155365968831*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155371872894*^9, 3.6641671472731915`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641554429720683`*^9, 3.6641554450571146`*^9}}],

Cell[BoxData[
 RowBox[{"0.5`", " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155445936903*^9, 3.664167147295328*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641554632307096`*^9, 3.664155472574007*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.5`", " ", "n"}], "+", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox["n", "2"]}]}]], "Output",
 CellChangeTimes->{3.6641554733056*^9, 3.664167147310961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641554806557126`*^9, 3.6641554849447355`*^9}}],

Cell[BoxData[
 RowBox[{"0.5000000000000001`", " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
    RowBox[{"1.`", " ", "n"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6641554854982033`*^9, 3.6641671473265867`*^9}]
}, Open  ]],

Cell["Convert floating point no to fractions.", "Text",
 CellChangeTimes->{{3.6641555735538116`*^9, 3.664155585516231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.664155538407549*^9, 3.66415554786866*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.6641555483374853`*^9, 3.664167147342212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.66415555420504*^9, 3.664155559608746*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155560346527*^9, 3.6641671473734655`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}], "^", "15"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641554925666084`*^9, 3.664155501710101*^9}, {
  3.664155598906625*^9, 3.6641556069129953`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "15"], "+", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "14"], " ", "y"}], "+", 
  RowBox[{"105", " ", 
   SuperscriptBox["x", "13"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"455", " ", 
   SuperscriptBox["x", "12"], " ", 
   SuperscriptBox["y", "3"]}], "+", 
  RowBox[{"1365", " ", 
   SuperscriptBox["x", "11"], " ", 
   SuperscriptBox["y", "4"]}], "+", 
  RowBox[{"3003", " ", 
   SuperscriptBox["x", "10"], " ", 
   SuperscriptBox["y", "5"]}], "+", 
  RowBox[{"5005", " ", 
   SuperscriptBox["x", "9"], " ", 
   SuperscriptBox["y", "6"]}], "+", 
  RowBox[{"6435", " ", 
   SuperscriptBox["x", "8"], " ", 
   SuperscriptBox["y", "7"]}], "+", 
  RowBox[{"6435", " ", 
   SuperscriptBox["x", "7"], " ", 
   SuperscriptBox["y", "8"]}], "+", 
  RowBox[{"5005", " ", 
   SuperscriptBox["x", "6"], " ", 
   SuperscriptBox["y", "9"]}], "+", 
  RowBox[{"3003", " ", 
   SuperscriptBox["x", "5"], " ", 
   SuperscriptBox["y", "10"]}], "+", 
  RowBox[{"1365", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "11"]}], "+", 
  RowBox[{"455", " ", 
   SuperscriptBox["x", "3"], " ", 
   SuperscriptBox["y", "12"]}], "+", 
  RowBox[{"105", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "13"]}], "+", 
  RowBox[{"15", " ", "x", " ", 
   SuperscriptBox["y", "14"]}], "+", 
  SuperscriptBox["y", "15"]}]], "Output",
 CellChangeTimes->{3.6641556076132865`*^9, 3.6641671473956013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "^", "2"}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641556181069956`*^9, 3.6641556375184717`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6641556386996737`*^9, 3.6641671474146147`*^9}]
}, Open  ]],

Cell["Trogonometric to Exponential conversion", "Text",
 CellChangeTimes->{{3.66415591964383*^9, 3.664155930407954*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigToExp", "[", 
  RowBox[{"Sin", "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664155657037252*^9, 3.6641556604568863`*^9}, {
  3.664155768422985*^9, 3.6641557756844516`*^9}, {3.6641558417440853`*^9, 
  3.6641558461107187`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{3.6641557761518126`*^9, 3.6641558470336905`*^9, 
  3.664167147434128*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.664155854973056*^9, 3.6641558804602175`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6641558814605722`*^9, 3.6641671474626474`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641558862259083`*^9, 3.6641558922275147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "x"}], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664155892764883*^9, 3.6641671474821587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.664155896484096*^9, 3.664155900483652*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.664155900946648*^9, 3.6641671475001707`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Statements, Expressions, Functions & Procedures", "Section",
 CellChangeTimes->{{3.6641559413006525`*^9, 3.664155953542001*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global'*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.664155961180682*^9, 3.664155969902254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", "4"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", "x", "]"}], "-", "1"}]}], "Input",
 CellChangeTimes->{{3.664155974202435*^9, 3.664155987162207*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6641559911670494`*^9, 3.6641671475381966`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["\[ExponentialE]", "x"]}]], "Output",
 CellChangeTimes->{3.6641559911670494`*^9, 3.6641671475442004`*^9}]
}, Open  ]],

Cell[TextData[{
 "Normal assignment is done with ",
 StyleBox["=",
  FontWeight->"Bold"],
 " sign.\nDelayed assignment is doen with ",
 StyleBox[":=",
  FontWeight->"Bold"],
 " sign. "
}], "Text",
 CellChangeTimes->{{3.6641560800611196`*^9, 3.664156110874618*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "3"}]], "Input",
 CellChangeTimes->{{3.664156043237404*^9, 3.6641560438922105`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.664156044562831*^9, 3.664156375991662*^9, 
  3.6641671475617127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"z", "^", "2"}]}], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.664156045983164*^9, 3.6641560566791687`*^9}, {
  3.664156484518159*^9, 3.6641565278925695`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellChangeTimes->{3.664156528731263*^9, 3.664167147578723*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Explaining Delayed Assignment.",
  FontWeight->"Bold"],
 "\nIn the first case, y1 is calculated using the current value of x. So, \
once assigned, y1 is fixed.\nIn the second case, y2 is calculated each time \
using the then value of x. So value of y2 changes depending on x each time it \
is used."
}], "Text",
 CellChangeTimes->{{3.6641561534719944`*^9, 3.6641562732186337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y1", "=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"x", "^", "2"}]}], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.664156279905055*^9, 3.66415629853925*^9}}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.6641563015569596`*^9, 3.6641671475987363`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"y2", ":=", 
  RowBox[{
   RowBox[{"3", "*", 
    RowBox[{"x", "^", "2"}]}], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.6641563032756615`*^9, 3.664156316380379*^9}}],

Cell[CellGroupData[{

Cell[BoxData["y2"], "Input",
 CellChangeTimes->{{3.6641563702866945`*^9, 3.664156370402691*^9}}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{{3.6641563713357677`*^9, 3.664156378864169*^9}, 
   3.6641671476242533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "4"}]], "Input",
 CellChangeTimes->{{3.664156381500255*^9, 3.664156382871078*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6641563839884424`*^9, 3.6641671476402645`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y1"], "Input",
 CellChangeTimes->{{3.6641563850365086`*^9, 3.6641563853365383`*^9}}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.6641563860904384`*^9, 3.664167147655774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y2"], "Input",
 CellChangeTimes->{{3.6641563871767807`*^9, 3.664156387355209*^9}}],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{3.6641563878779736`*^9, 3.6641671476722856`*^9}]
}, Open  ]],

Cell[TextData[{
 "Evaluation/Replacing/Substitution\n/. is the ReplaceAll operator. The \
format is ",
 StyleBox["expr /. rule",
  FontSlant->"Italic"],
 " or ",
 StyleBox["expr /. {rule1, rule2, ..}",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellChangeTimes->{{3.6641564177243166`*^9, 3.6641564366517677`*^9}, {
  3.6641569209010525`*^9, 3.664156984356037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "/.", 
  RowBox[{"z", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.6641564433725557`*^9, 3.664156449633974*^9}, {
  3.6641564979287157`*^9, 3.664156499344268*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{{3.6641565000982046`*^9, 3.66415653203447*^9}, 
   3.6641671476912975`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "/."}]], "Input",
 CellChangeTimes->{{3.6641569956991267`*^9, 3.6641570275680046`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"/.\\\", \
StyleBox[\\\"rules\\\", \\\"TI\\\"]}]\) applies a rule or list of rules in an \
attempt to transform each subpart of an expression \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ReplaceAll"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.664167147790865*^9},
 CellTags->"Info3664188747-3324783"]
}, Open  ]],

Cell[TextData[StyleBox["Functions",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.664157039943244*^9, 3.664157041343854*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "*", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6641570566190257`*^9, 3.6641571022022486`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.664157083388193*^9, 3.6641570853892403`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Sin", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.664157085789241*^9, 3.6641571056061287`*^9}, 
   3.664167147877163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", "2", "]"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1.8185948536513634`"], "Output",
 CellChangeTimes->{3.6641571158999443`*^9, 3.664167147892788*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"x", "*", "x"}], "+", 
    RowBox[{"y", "*", "y"}], "+", 
    RowBox[{"z", "*", "z"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641571433034325`*^9, 3.664157182415806*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641571879508343`*^9, 3.6641571946580486`*^9}}],

Cell[BoxData[
 SqrtBox["14"]], "Output",
 CellChangeTimes->{3.6641571951263933`*^9, 3.66416714792404*^9}]
}, Open  ]],

Cell["Maple\[CloseCurlyQuote]s unapply( ) equivalent is Evaluate[ ]", "Text",
 CellChangeTimes->{{3.6641573115501156`*^9, 3.664157329935105*^9}, {
  3.6641574029077053`*^9, 3.664157403554985*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], "=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"3", "*", 
     RowBox[{"z", "^", "2"}]}], "+", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664157339576069*^9, 3.664157366492051*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["z", "2"]}]}]], "Output",
 CellChangeTimes->{3.664157367760784*^9, 3.6641671479461775`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.6641573723280373`*^9, 3.6641573736132355`*^9}}],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.6641573741973443`*^9, 3.66416714796181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Evaluate"}]], "Input",
 CellChangeTimes->{{3.6641573802661104`*^9, 3.664157394545365*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Evaluate\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\) causes \
\!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) to be evaluated even if it appears \
as the argument of a function whose attributes specify that it should be held \
unevaluated. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Evaluate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.664167148055456*^9},
 CellTags->"Info3664188747-3324783"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6641574390089912`*^9, 3.6641574395630074`*^9}, {
  3.6641574799825764`*^9, 3.664157483603218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{
   RowBox[{"x", "^", "2"}], "+", 
   RowBox[{"sin", 
    RowBox[{"(", "x", ")"}]}], "+", "1"}]}]], "Input",
 CellChangeTimes->{{3.6641574920846186`*^9, 3.6641575015709667`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"sin", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.6641575048256598`*^9, 3.664167148094482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], "=", 
  RowBox[{"Evaluate", "[", "p", "]"}]}]], "Input",
 CellChangeTimes->{{3.6641575058422594`*^9, 3.664157514245181*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"sin", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.6641575148449726`*^9, 3.664167148111493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"Pi", "/", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641575193082905`*^9, 3.6641575239401674`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "36"], "+", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "sin"}], "6"]}]], "Output",
 CellChangeTimes->{3.6641575246939926`*^9, 3.6641671481290045`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.664157536481141*^9, 3.664157539105076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"z", "=", 
  RowBox[{"x", "*", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.664157542026472*^9, 3.6641575469455566`*^9}}],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6641575475300684`*^9, 3.6641671481555214`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"zfun", "[", "x_", "]"}], "=", 
  RowBox[{"Evaluate", "[", "z", "]"}]}]], "Input",
 CellChangeTimes->{{3.6641575524132495`*^9, 3.664157561288854*^9}}],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6641575632420087`*^9, 3.6641671481725335`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control Structures", "Section",
 CellChangeTimes->{{3.664157662415761*^9, 3.6641576675069685`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "For"}]], "Input",
 CellChangeTimes->{{3.6641577172119303`*^9, 3.66415771839703*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"For\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"start\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"incr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) \
executes \!\(\*StyleBox[\\\"start\\\", \\\"TI\\\"]\), then repeatedly \
evaluates \!\(\*StyleBox[\\\"body\\\", \\\"TI\\\"]\) and \
\!\(\*StyleBox[\\\"incr\\\", \\\"TI\\\"]\) until \!\(\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\) fails to give True. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/For"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6641671482700987`*^9},
 CellTags->"Info3664188748-3324783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "i", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6641577322741165`*^9, 3.664157801966238*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6641578026668453`*^9, 3.6641671483036213`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.6641578026668453`*^9, 3.664167148307623*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6641578026668453`*^9, 3.6641671483131266`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.6641578026668453`*^9, 3.6641671483186307`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.6641578026668453`*^9, 3.6641671483236337`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", " ", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", " ", 
   RowBox[{"i", "+=", "2"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "i", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.664157805454836*^9, 3.6641578457106514`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6641578464433746`*^9, 3.664167148340145*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6641578464433746`*^9, 3.6641671483441477`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.6641578464433746`*^9, 3.664167148350151*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "While"}]], "Input",
 CellChangeTimes->{{3.664157856083413*^9, 3.6641578589848585`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"While\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) evaluates \!\(\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\), then \!\(\*StyleBox[\\\"body\\\", \\\"TI\\\"]\), repetitively, \
until \!\(\*StyleBox[\\\"test\\\", \\\"TI\\\"]\) first fails to give True. \"\
\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/While"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.664167148449218*^9},
 CellTags->"Info3664188748-3324783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "1"}]], "Input",
 CellChangeTimes->{{3.664157871011211*^9, 3.6641578735283823`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.6641578764008055`*^9, {3.6641579518042965`*^9, 3.664157971423275*^9}, 
   3.664167148476736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"x", "<", "5"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"x", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.664157879505282*^9, 3.664157964869049*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6641579735925865`*^9, 3.66416714849525*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.6641579735925865`*^9, 3.664167148499751*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6641579735925865`*^9, 3.6641671485047545`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.6641579735925865`*^9, 3.6641671485097575`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "7"}]], "Input",
 CellChangeTimes->{{3.664157986032058*^9, 3.664157987901698*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.6641579887870636`*^9, 3.664167148525268*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "If"}]], "Input",
 CellChangeTimes->{{3.6641579915897818`*^9, 3.664157993554589*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) gives \!\(\*StyleBox[\\\"t\\\", \\\"TI\\\"]\) if \
\!\(\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\) evaluates to True, and \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) if it evaluates to False. \
\\n\!\(\*RowBox[{\\\"If\\\", \\\"[\\\", RowBox[{StyleBox[\\\"condition\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"u\\\", \\\"TI\\\"]}], \\\"]\\\
\"}]\) gives \!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) if \
\!\(\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\) evaluates to neither True nor \
False. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/If"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6641671486208315`*^9},
 CellTags->"Info3664188748-3324783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"x", "<", "10"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<x<10\>\"", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<x>10\>\"", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.664158013405061*^9, 3.664158049402975*^9}}],

Cell[BoxData["\<\"x<10\"\>"], "Print",
 CellChangeTimes->{3.6641580527729797`*^9, 3.664167148651352*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Equations", "Section",
 CellChangeTimes->{{3.6641582595616045`*^9, 3.6641582640196085`*^9}}],

Cell[TextData[StyleBox["single Equation (subscripted variable)",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.664158272788094*^9, 3.664158288506632*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.664158293341072*^9, 3.664158302230362*^9}, {
  3.6641584349574246`*^9, 3.6641584353261347`*^9}, {3.664158535449961*^9, 
  3.6641585358518276`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"x", "^", "2"}]}], "+", 
    RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6641585548670173`*^9, 3.664158569223632*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "naqs"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(c + \\(\\(b\\\\ x\\)\\) + \\(\\(a\\\\ \
x\\^2\\)\\)\\)\[NoBreak] is not a quantified system of equations and \
inequalities. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \\\"Solve::naqs\\\"]\\)\"\
\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664158570293092*^9, 3.6641671488340316`*^9}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"c", "+", 
    RowBox[{"b", " ", "x"}], "+", 
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.664158570293092*^9, 3.6641671488814135`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " The expression to be solved must be an equation, e.g. == 0 needs to be \
specified."
}], "Text",
 CellChangeTimes->{{3.664158661305922*^9, 3.664158701940316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}], "\[Equal]", "0"}], ",", 
   " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641585548670173`*^9, 3.6641585789862633`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6641585809896655`*^9, 3.6641671490345697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", "\[VeryThinSpace]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "b"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["b", "2"], "-", 
          RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
       RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "b"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["b", "2"], "-", 
          RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
       RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "b"}], "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
    RowBox[{"2", " ", "a"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "b"}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
    RowBox[{"2", " ", "a"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6641586270932198`*^9, 3.6641671490501933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"x", "^", "2"}]}], "+", 
    RowBox[{"b", "*", "x"}], "+", "c"}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6641595956979017`*^9, 3.6641596100890164`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"b", " ", "x"}], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.6641596113715396`*^9, 3.66416714906582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"y", ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6641596194606895`*^9, 3.664167149087957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"a", "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.6641596303102875`*^9, 3.664159642704233*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], "4"], "+", 
   FractionBox[
    RowBox[{"a", " ", "b"}], "2"], "+", "c"}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.6641596431894407`*^9, 3.664167149103588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Roots", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "-", "1"}], "\[Equal]", "0"}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6641596486937823`*^9, 3.66415965652899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", "1"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "1"}]}]}]], "Output",
 CellChangeTimes->{3.664159656913724*^9, 3.6641671491192136`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Roots", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", "1"}], "\[Equal]", "0"}], ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.664159661601401*^9, 3.6641596708910627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "\[Equal]", "\[ImaginaryI]"}], "||", 
  RowBox[{"x", "\[Equal]", 
   RowBox[{"-", "\[ImaginaryI]"}]}]}]], "Output",
 CellChangeTimes->{3.6641596713382463`*^9, 3.66416714913484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"y", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641596878624287`*^9, 3.6641596995732617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.664159702159897*^9, 3.664167149150465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641598961312523`*^9, 3.664159898471115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "b"}], "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
    RowBox[{"2", " ", "a"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.664159937190175*^9, 3.6641671491837254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "/.", 
  RowBox[{"ans", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66415994748485*^9, 3.6641599525375433`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "b"}], "+", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["b", "2"], "-", 
     RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
  RowBox[{"2", " ", "a"}]]], "Output",
 CellChangeTimes->{3.6641599535914745`*^9, 3.664167149188227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"Sin", "[", "x", "]"}]}], "-", "1"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.66415994748485*^9, 3.6641599525375433`*^9}, {
  3.6641606226290336`*^9, 3.664160642111515*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
NSolve. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \
\\\"NSolve::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6641606440479245`*^9, 3.664167149435657*^9}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.6641606440479245`*^9, 3.6641671494512825`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "*", 
       RowBox[{"Sin", "[", "x", "]"}]}], "-", "1"}], "\[Equal]", "0"}], " ", "&&",
     " ", 
    RowBox[{"0", "<", "x", "<", "6"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641599842193975`*^9, 3.6641599955202117`*^9}, {
   3.664160042556753*^9, 3.6641600623123817`*^9}, {3.6641602915151806`*^9, 
   3.664160302024602*^9}, {3.6641603833058643`*^9, 3.6641603862102013`*^9}, {
   3.6641605662592754`*^9, 3.6641605758139763`*^9}, 3.6641606079494543`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.1141571408719302`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.772604708265991`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.664160003111288*^9, {3.6641600477137403`*^9, 3.664160063361812*^9}, {
   3.664160296073077*^9, 3.6641603027259645`*^9}, 3.6641603877362413`*^9, 
   3.664160578285596*^9, 3.6641606092496424`*^9, 3.6641671494890413`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Simultaneous Equations",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6641606656517043`*^9, 3.6641606710342546`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqn1", "=", 
   RowBox[{
    RowBox[{"a", "+", 
     RowBox[{"3", "*", "b"}], "+", 
     RowBox[{"4", "*", "c"}]}], "\[Equal]", "41"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqn2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"5", "*", "a"}], "+", 
     RowBox[{"6", "*", "b"}], "+", 
     RowBox[{"7", "*", "c"}]}], "\[Equal]", "20"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6641606762604284`*^9, 3.664160719279008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"eqn1", " ", "&&", " ", "eqn2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641607300899177`*^9, 3.664160743260908*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "62"}], "+", "c"}], ")"}]}]}], ",", 
    RowBox[{"b", "\[Rule]", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{"185", "-", 
        RowBox[{"13", " ", "c"}]}], ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.664160744376457*^9, 3.664167149520301*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Along", "Section",
 CellChangeTimes->{{3.6641607827621813`*^9, 3.664160785263935*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.66416079191794*^9, 3.6641608028496094`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "7"}], ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664160811085704*^9, 3.664160830928397*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
t42lhY3FQd6+cQR0Ga98oe6mhf8HXpem7Q==
     "]], LineBox[CompressedData["
1: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
Hn0wXvpEfpca8T/eB8AG
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwVjn081HcAx393x/3IIdTVldUhpsnTokby/UYaFSvqbFaIl6NXpKiTEtZk
0ZCHUVhuRmnpRk0kfL8ectmFK089rMmdjNjlbHG6p7U/Pq/3P+/X6/2xiIgP
jKISBBH1Yf+T+2/+5p+bleD3QTf/tPiV+GFgrfeNNiXoF9qvue27EveQCas+
FSlB7obOFvfBFfjRcbXQe1wJ3gam0YoXmLjPpvPqo1klyNOelb/PZWLxiwsn
96uVIKP3YsbMeiYe8FlmFc1UgRZm0wQ+vBw/Z9mlZvuqQLeV4cJzxjLMsHAd
seCoQD59qjCrwQxvtQVO9yJVgPb611DykBnmbwqS/JWqAkeqX7hPIlPMDTqz
w6dBBRpyis/PXzHBl0POV/zRoQLmX7h2de03wT2H8hSJ4g9+qq7qGzMTvOHY
z79UTqvAyCMDE17RUjz3vciIsFQD89uJBUn7jPG6oqHoEkc1kGbfWDo6YYT3
l41ih61q0JZ+4CYjxQg33fgn4eCXavBPzIruAIEhTu1ePdKcqwb7ksME3Y4M
XNdr7RRYrgbL13JzaocM8NigY9bUDTUIsy+W888a4O1S7y0rH6iBUpExGTuw
BOsTsRUnlWrA033weWeRPnYneQqGvga0LMwU+frp41ij9L1VTA2osCtTh2r1
cJ95EW3AWQMyt7LLGMf0cJFbS7RTjAasKtk1YB1B4m7YjYUnNSBb3l7/xoLE
C5+LWWHfakAO2581KaHjEM64KOeqBlwKiHeIiaFjdiLDaXrwQ6/VxbggXRcH
nmZmnZNoQHBgiKW9ny7+9hu2hDWrAW7bKEewqS6eyHMp8jXQgi29ose/1ejg
2toDiuptWlB07FaMzSgNfzZRi8MFWiAfl5pEHKfi6jczRib3tSBnMqW51I+K
Td9uONgu1IIEScCVCEsqnlmoXbQY0wKfDYf3FA5RsDiDc0WuT8D5kWBTay8K
zijmPLntQUB+Jm+xzpnAzZd5i0u8CRggOO2cY0JgeWkxO9KPgD238zhXpVoU
WjF81IxDwNDImesKrhZ9VsMxOBFPwHv+3sMXeRo0c4+z3bWSgDbhsbcs7qqQ
ZQvvSE4NAY8mtG8eS1ehr9qKC14LCFjtsYq7abcKdXcMv/rhPgH7UiL/Lh5X
Ir6Ic3Z+kIByc8bzydVKtO8l524jSYGFjLXn2isXUSsRbOseR4F6hmO5QbQF
tDSq6FBCIgWuV/s93PtyHkX0PC79JZkCz3B1V1Y1ziN6wW7D1ZkUuHnozDsQ
N4/2WHnNKa9S4Pvrd19++sc7JPGxb2kVU2Dl+rwm/Yf/Ir2LtD3bXKjQPYj5
ni+eQyFvYVayOxUWXL+mXHFnDtUGpXbUQyo06pw+1fXDHNprvuhi6U+FdIrH
qvtfz6HSWzIWjUuFy2ue0hlv5Mhe/EzaVUKFOnyOkcBYjgKX1yX5KqlwKBgP
qt/JUEul8RxJpUHPgprZ1+0yZOMUHyvUo8FM/m5omStDyp0Oh3YwabCfB+0L
P5ahqvTandudadBWf4exW+jf6N10zUcwmga3p/1W3/RsGl3u+Klz8wANuts3
F4TTptBofKHxxzd1YCs/aU3cohRNKHN0Eut14LMjL1xSh6VI9t2FxbZGHWjU
Nr23/o4UaSrOSjldOvDEkrWOKUelaI04ujHzpQ6svpZdUvpagkKdPMImjHXh
QuPqIMGzMfTn7Lig+oQu/EoSWksRjKI/j28KWOdJh+ctzb4Md3iKAslLLXY+
dDjd9iNro2wECcunPtm4mw5PmHIVjoIRVCcsJ71C6JC7K2m02mEEnfuI1h7G
o0Px4arAROdhZN3Tv7FMQIf5s3Gn2J6DKJZ9mGW6loSn7GRpnGNi9Kqh4zuW
DQnD2Qc7E1zEaP8u83m2PQk9kp39g+T9yJPX/8RxCwmtjo7Yiaj9aOkj1+/9
g0lonM9NX2bbi+4kUbUX8kgoa6xy23emB9kaHoi7VExCP1EkP4Xeg8orG16U
/EhCr8Xudb35D1FGb0zTtZsknIqri5LWCBHHqv94l5CE2aJYVv/TB+j3JttX
oj4SOi2ENFpGPUAg4FzAwBAJw6yddl6WdyHbZFc7iZSEmTu9d00s6ULlRnlX
pt58+O867dZa0olMqiZJuZyEg9h7zZ11nSjTzYunUJDwyV+n3YX1Heh9X9m4
VkvCrKy0xwrPDvQfmyIkkw==
     "]], 
    LineBox[{{-1.573824812159983, 
     6.0830602216999194`}, {-1.5738238828014732`, -6.108884054808366}}], 
    LineBox[{{-4.712144682333472, 
     6.0830602216999194`}, {-4.712116813014835, -6.108884054808366}}], 
    LineBox[{{1.5696252448989343`, 6.0830602216999194`}, {
     1.5696539684803044`, -6.108884054808366}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-7, 3}, {-6.108884054808366, 6.0830602216999194`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664160831798769*^9, 3.664167151224923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "7"}], ",", " ", "7"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", " ", "\"\<tan(x)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<y=tan(x)\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.664160811085704*^9, 3.664160830928397*^9}, {
  3.6641611972380066`*^9, 3.664161274873461*^9}, {3.6641614422516136`*^9, 
  3.664161456492982*^9}, {3.6641682542938485`*^9, 3.6641682757263393`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwdkHk41fkegGVfO/gt5zinxdgiW2VN8f1VSGMpu0aaqWiRNZGyjMxtEdEI
j7iPZSpcVzjWUvw+towWTc6g5tiXyBGyZY6l29z3ed7n/f/97mSwi5+oiIhI
wDf/qd0l3tTXrxy4H+3DGxsW0LIxap5ZKxywvPW81fKhgH4ZH9po/IUDfdfC
TsmeFdBOyYyMc9McsI0TmAunJ2nXh/aI18uBkUiJs6Kik/RxXvOvBU84cFzZ
q4jaM0GHG1aZOoZxYOJ4TNfB2VHa1EQsfzyIA8/Yg02GDaP0soWLXLw/B9Qd
4wePJ43SV2xnB2pOcCAvYy48WWeUjvPRS1A9woGiRfcI8swInZT4gD+vx4HG
snmZuU9D9G/jaXFZH9gwUqSxPftQP80Tc7DsHmLD4FJLZcRUHy2uKiZU6mPD
XavWjicpfbSfV2hYAo8NEcOFS8E9vbR2u+PpSGDDbit1iaDzfPpRsaSDRxYb
nqgSpS4P3tGPAyOZyk5suO98XablMI9+M+9dmlCtAgHPW5vp1CZaL9TUuDyT
Ba/LxfUnDjSii6SktmsaC3TxESOdzkZU/7SLs5TCgt7LZpfSf2pCTpLhYntv
sECU0ndZjGlGwdmVnW3hLCD3vcCFda2oonVH6IALC+4bcYhj6AUyZ+uWblRg
Qakb8ZjR8BbF0cJ8rjQL5tr7591kOlG774t0N3EWGPs0X/vdrRP9UHYuJmuF
CVnS7O1WU50oyrrIQWuSCQN7rx+N3vwnagjSFFi2MWE64sgd5VvdyKZ5q3bg
VSbEKT7bm5XKR6uxnkHcaCa0BU6cSJ3ioyqLlKrFS0xwHvLNGbftRRoV61Rs
EBMKSvpyy1Z7kWh+39EUbyZE3gxuHw7oRxCbncg1YYLDQmVGUfkgsrBgzix+
JOGvKSPrNt4Imlt0MrEYI8E5V9bMXXoUFXOvR8UOkhA83kzttBxFKjpLUlI9
JHTQfz96VziKlpldqqwWEgoGFhplro6h6sVUF4scEkQOqKcbWo+jHdyNNbEu
JOwxyZh9zxKgkrqC95gTCd+L7BwCdwHSabFaKzpEQltekhbnrgCp9QRZ8ygS
8sru7N7JmEL4WkfnNkMSXH956sdW+IS+2KXM/CFHQpZYZUrddzPooss27LQU
Cas7ak91nJ5Bs9606YooCaWaIncjS2bQRNBMjKaQgPlrW/e83jSL/ko7LH9l
ggBNbS+v8kezqGGQoaPeSkBYg+u9toHPyGKy0OExENBlLXmbKzWHaudRiOMz
AhZ5TPevhnOoXDKk9lIlAcdqDvS/vjqH8vX+sHmVT8Dt9I72wO3z6F+Rd06G
xxJw0kYLZf+6gETita/LXiGgkz95sB4WUEwi/Cc3nIDZh+HsM7MLKCJndrY9
gAAjwnCfj/MiOtty5Oct3gQMiPn3aLKXkL2i0r/bzAiwz+WXbHjxBZnuUFJe
30XA5vLNi5NSy0jtiNJNYwMCxAflfKtsl5EwRelivgYBzQmZk2vPl1ERQ9kh
SokA9bXIKCXe3yjNULmJK0+AVUV1TR5LiOIOK5tPSBHg4/w2c9+PQuSZoqzh
vo7D2+ote7pmhEiSga0aCHAoPuj/edPWVTRngF3w+4BDttpKu2LQKup3wiay
h3AY/dqGPBtWUXUy9qf0Oxz6kx/8JHpqDfluxEuGW3A4tM3p41z9OmpSII5l
5OBwe9AwwntYhCrVJzpf3cPBbD+fVmFuoLIcCTuxdBwe20tGTDhsoEJvE8Yh
iTgMV0oc5T/dQKkqkPLfR+KQ+7mjTLdIlJLXJ+PjwnBIudFV/PMHUWrZgVyu
CcKhnnVho7mWGPUmiRxV98PBxDp5RqZYjIqVZz5bc8bhgVG7elOLOOWvx9xl
7IjDYOpSVStDgvJwYBb52+Gw92LUcOExCUo/iZnWY4WDzCstdfdVCapXjhXA
1cUhtKKg4b/uUtTvuqzhcS0cMqfZT5a4UlSlPctri9q3XzZg/l5RmrqVyLJO
ZOGQVevxY2+3NLVbTmWTn8S3X2YXDifekKUiT78VcEVwEA/Yb8IQylI1jQlP
11cwELe93K0XIkcZRwp/yJzDQOvmG4/pM/LUBV7F9rFPGEScNby39FGe4hqc
F+78iAF7//OJEyEKlMEY/97LAQx88y7buCZupAKptHMsPga/lMqr+agyqJJs
h91+3RjMnw+M7qxjUDou9e/WX2FgY4el5sUpUhp0DnNXHQZSRHyC+YwSdZLt
OR5bjYGKHs6PdlOm8sMZtS/LMVA7YKLGaVCmtujFefgVYmC436whIxejbiW1
TP52HwOR/4NT/wPSUzwg
     "]], LineBox[CompressedData["
1:eJwtVnk01WsbPYNjPsf5HdOVBlc0IOMJDbw/kaKMlXBVUoQMFxlKZayupNKV
SjepaypDkuZu71MpXBocKRmTsQ4y1sEZPt+3vmetvZ61/9t7r72e9fzqF+7u
T6NQKIVz+O+er6K53VOJA5T/jQokrMrVGWFxwG1hG1d6ShmOp789ulyaAz7l
YcUOmspwkjuoX0PlQEvK5sSfVRzI6KB82isi4ER+0d0b7hzIMjI1y5skYIk+
q87wEgEXWhw/W40SoD9on55tQ0BO0p6MNj4BXrbR1/SH2XCtKWtArYeAfwtL
1Yyd2JB/uCyrqpOAmEsxZq5UNhTrvrJxbyWA67+NKwpXgvLYn5czGglIC/on
V8aLBU80vV2lgICx+2ZvtXYqglFbq4vtYwLKb8R1L+tSgOs5v7kk3yNg8FxX
2Zq9CnBCY4czpYwAnRn1gScH5cFd3XezcE5n4SXXhxGvZaH6w+dNa84TEKrl
nzwTJAsW2bs3HTpLgImj52NHOVmYr7rHUXCcgM/uYfF1LjIwwAnYOBk1p/9e
RILbNAO8ef0bzMIJkLuy/q7GDQY0ZO7bEBlMQNQou6bLmwGV7CD7UV8CNhdk
a/9SLQWHWSF2Q04ErFiiQ7qW0OH76yFbfYc5/7OJpmpBdPDLCLUNtiPguEfy
h23L6LBBMXzd4Oq5PI6WzmeV0IAjH0n2LiXg6hZpgSpQ4VjdOFq8mIB9Bbxl
nn9QQfBHFPJbSMCsx6eGh25U6JCJtv6sQkBIHaF6f4ACxYy4te3UOf9W9Du3
FlFg3kvBGk0RG35fV2ZM/SzBGakH13gL2HBgMjzSL1mCI+nxq1tG2NAoXKhm
1CDGVtSjlu/b2CDWibPKjRThChBbKH9kQ3DMsHXfIhHWTkywcOexIbr5usGZ
N0IsK0k0f1fLhunWUbLPSIh5whRuw1023LOrNLhKncWBgjTj6jNs6CqwU/Nv
FeA8xn7m1nQ2PL5zm7DIFeCPnM3feo6zwfZ027JmPwG2X8HKpx9lg0oPGbFn
5CfW8TunbhvCBni9ZYEr6yfuqs8RP9vIhp/eObmyYVNY7VN8m5sdG+Tkqpoe
rJ3Czv0+D7oRG+7wxiKmFabwE8qiSKoFG760xjhqlU7inJV/95G6bLBLbefe
H5/AHldLGvBcL6srtrq0ZI9jTS+NLVdnlMA1MumlR+g4PhnVpojHlCBedqjG
2m4cBxbvShR3KUGeM6fUdmIML+YE7jvyRAna+rUUh7eN4Zy+uJXx0Uqg69+l
b2MwitNO5TTGDLBAWJTZUqA7hHMXvLZ+0cmC+HTtZJ1BPq4sl5QofWDBJ5fV
IeolfNz+bu/x4moWfDv4s8zdlI+NVI3WtF5jgQ319bHh9d9w85UX+VY+LMg+
v0zRLnEQ/3prKFaqkQk3H4+7+1r0YXNyUZ9rLRMqqI6GQYw+7Njo5n4FM6G5
8IbVw6ZefGDinoF5OROcQmzr9SJ6cY1FUve+dCZI1Vx2srjVg0NBdVP9eiY8
SPpA07L4gh82Wi8890gRIictagM+d+LSMzbGv95WhPcVZjcSUjpxnpPduooi
RbgQG9VGWdqJj9c5BLzJUgSPi1mHV4Z34K3PtpbLhytCs4z/1CqpdjxSEWyd
slgRcg5nVm5Bn7DO2eydB04pAHd5uWHP9yZ82nkk12OnPMiXPzngPfICvyir
fpumJwsxbnJa4yoYLeR62oi0ZEHw46vTJV1Ahx7xK39XlwVu21LHQQBkXMPJ
3i4lC+p72p9pCJ6h3M++PrqdMnAi/rSiOLAaHVIWDUKmDPSOT6eGe9Qh44Mr
aQKBNCh/o2W032tEpyS1Ufu/S8MvE9YXzOV4aOCYT19nnzT0r/DXrP2Nh3LP
pdS+5ElD6O0S3WxqE1IobTz9Z6k0RJ8ix8Uu71F/Z6imka80OLvXcJWnP6Ar
doXcgBoGfBFd2plyrB3l2tz0kn7KgMQ/zX2yu9pRnnX50cIqBgy8n6mVXd2B
rlveq+2/xgCBvp4VZ7QDFRu88tl3mAFJuv59vb5dqFKlPzXQhAHNCe51Kfrd
6FWvbnPwZSnQOqmwzdWtF9V0L5+RPycFjzfWjKgc70W1nSsWlfwhBbttg1SX
P+5F9S0rg/jRUpDdNG2wfkkfetewXrR/7uLKn3rxPILSj1qr/HVDGVKgG6Aj
bn05gEZSC6LDw+kg9TXjxu48Pjq4IHjb7QA6vI07VJrfwUdS9wxXTuygw5u7
Xg98NIeQxsD9yZjNdLBetSfd7OIQsnP4N+rocjpsTmcX37kwjHKY3yMyemjA
O0uqdtz6jnQL77i9baXBs9NyBvunvqMK6zgTgkeD6KAHnbULRtHLcOpYFtCA
Jjcc8WnvKBptVP79rys0WJOj5lD3YxRtyLYMK9lOA8cTRyhc/XHEMxQ5DTvT
oOGl0DJsyzjyqXm2wsieBhd+ac9nHh5HkQLH4UouDQI3bihJeTOOcr13hDwi
aGCsUbAgNW4CTS5MDq6rp4LztMZ8/GUSJdy3d1R4QQVeHO8vR84UkndV0HN6
RAW8fvjprnVTaFFS1td3xVTYHnrXxDR/Cjn2FAa2HKPCbpMgw/qwHyivqD5g
AFGhxlOHX6EtQPKhvvz95lR4JzxjiXYLUJTpVPioARWeGNxRv50nQPb/LDw4
rTHHiwTzPbSnEZ8Xka4wSYHMuz+6nUxm0NaL0uyz3yjw2rfTNC92Bj3dcTlL
pZsCljzdQFk8g84OVl9Z8IYCOV7R/RZus8hcrF5hVEyBAKsTnd9ThOjqi1Ju
VS4FnFI99zY0CZFsms1Dy/MUYPK1v1B0RahNef9zm2QK3LUZf3OxXoQSlz99
v8WHAtWDYzM39SSofuve6Vg2BdItjd2TFlBJ7rzpI0JpCmyyV1Tlu1PJtViT
QZuV4DTXTY1BaVSy+32YukqzBPcFmavVT1NJA4rqWss0CV65uLXR/CuNlJy0
Xm8TI8FyyWu+7VpGJ3mqgc6OeyTY5+8D2ROBdDJW/7Gvj5UEVxvvzDwzQief
e+w+ljgmxn5LIrRMmQzyfPfJ02mdYjxlpaJh58UgA0OqLpyrF+OeugR3qyIG
yUyWuZlfIMaxbU1mXAdp0rOs7E2tlxhrSeT4F4tkSD3Ljx8b7cV4VTxTyo4h
S4qeU7pbzcS461vQ2j/9ZcnrLVsmhphivCup3uGioRw5TJ9RJ56L8MCud3q0
fnmS9zI/e0eFCN/q0qk/tlWBfHDCRfVmrgib3Nd093qlQKYqFHBs40WYtj98
MrNKkQx+7ZJ5JkiEL3fdSHM2YZIuZ2aU2reLsLON6T75SiY5T9mVGc0VYXW/
nixXYJGU5pn0Z9oinCAoN9vsrET2ZxfIswgRrg7U99brViJvz5uVKRoW4hNh
R9pc0tnkRu1C2qfCOX5u7ejJXoI07HVN0j0vxHRPnouXLYdUKZyVRKQIcfjS
Q08FBRyya7mbSN5XiPeiPR35scpkNX82fruzEHNCllqsHVAmHRRCDbIchfj/
/yT5H5Q1HV8=
     "]], LineBox[CompressedData["
1:eJwtlmk41Qkbxg/JdsixppJsJTSayVIpPX8OSiqcGTGWISSliEJiEilbpUyk
IiKlVYiI5vkjhYmyy072YzlrlizvvO/13td1X78P98ffl1vV3Y9xVJBCoTz6
t/+l7GKim/scHyn/ixy56NAzQ/vOR1Ma9fiacVky46wWOTDAxxKTQSbdX5Yc
foY2V8r4+DWjYL9bggwZ+1F8jcMTPsYm/0xmbZQht3yz69dK5qODkYX3QVKa
DFg74V/nx8fIHDxQLiBNyhtuN0p35uOnvhvqtBwaWWwbKehvyUezrwxGnS2N
XIxR/EtOnY+O1QbUuy5SZMZDD6dhKT6GUUP+8qlcRZqSL9WLF3i4zHAKydNd
RcbMmL12auWhtmzoXKCcJCnn5d+SGcvDchXb5Ul5KinolyZUH8TDlpdhe49k
ipPs4Bq9OQ8eNj3bGWSzTZysj1VNtN7Dw/CIc0cFnMXI2BcNhxY4XLRT2P6w
qlGEPFe0+KdmHxf9xTy7lYJFSC/UesGo42K0mceVwfUipFlDBPXJYy5u8k/2
cQsQJpd4v1TbOXMxIPPSrpv6K8mJRZeZi5ZclHITWxoZEyI7heM2PTfkYvVO
lzKhB0JkseJAlKA0F/Wzf6EckhMiz+xONMmt4uBFj3tmoZIrSHfzv0935HPQ
rqAZ7D8LkjaHxtNXZnCw6tHw+ehEQVLXzXTJ6TwHlYWP+r9REiRHL3Heim7l
YKlbZYAeCJCtV5XH9ZQ4qNNzID1eXICsStq/xlWMg7aPtOljrRQy83FmcOE3
Nu5gVfFvBVBIl38Y+u4pbCykbtiNx5fxQPMFj2uX2dh3y9xoo9QyGnU/TSwO
YONamYfXNxYtoeK0IHvVQTb+ecnr3QfRJWyUKXhRKsBGTn2JrQsuILmut2t4
ioW969bXep5ewFwNqoRMFwuzPhovFagt4FVDjxPeRSzsZG2niMT/QAtHWU15
HxaqVErFpR2fxyD6CNGdM40+7pohvzrMYkilSdzby9Oo03z/XpDyLIbRU5tu
u09jY8jhVQ5DM3iJbuvFUJrGPdU9DPPAGbxBL43/mDCFk0Imn5zSvuNTekJr
XtAkKoaFBLpT+fiicmxDwq+TGNOk8Tivk4ev6GbHT/48iSYyoWkxz3n4hj73
Y9P4BAYSGpsrrXn4nu6hmuoygWqssPvqqVzsoW8/ecWMiZLndDri93Owv/Jm
oYcqE42KF323q3FwkD6xRCyNo3E4jFjMs5FJf3Dzx5txfDvZaBX3jI2zdOqb
0zrjKCRhnBsgw0YZs14BJ5kxrDnx0636vmm0MIu+vbVvGHUNXM/2fGDi+2C1
s6vfDmNvm7eAfRQTTZ69s1n+axi51wR32psycbcMT+zz3mHMfXHJaQjHcVuf
W5hv7hD26l6ZmSPHUDnM6MiLC4OomyQubfB1BGcKJrV11g8gNaxW08tuEM+O
xIjIzvRjeP/oSzmVQeSs1Ric/9KPp+slGmSY33AqwjGtNqof1y7IN8xGfMNB
649SJyb68HWDnL1lwQBmtJmM2Qb3Iuv5hag5tX603ZsTdvB1B+amGwdW/tGF
KXHfqDqnOrCe7u76RawL++qU74lu6kDjw65dWws70fe3pJLK21/R4XJSQL9E
J8Ydify+M7QdL2w9umkCv+L7UOfTm0xbkeIxFXxLrw0NX9E8lz834BdGamqE
ZSMabuMku7eVY++udMVt/HIkE2+KiYqUQ7thhd+kSjkwm2jH7O+XQ26N9Rpq
aTkoyN94/8igAjqERcyc7CrA5/b1cHPPSlhttoF+N64SFFLj+ZHlVfCbaGNo
1UwV+GRf7l8MrYUP8tWevj21QO0q6wqZbYAxYWsZRmAjZISFxauaNYLDvfIh
t4+NYLh+t1FNQiPUuT0pyVnTBG5/lN5W1GyCrlmj6ZG/m6Cor4Txxq4ZagTV
JM0lWsBtqKial98KyeKirjEFbVA09eq136lOWKdMS/Iy7oblfJ9rYq87IevY
n6ajid2wL3iTV9Z8J6yg6FqWj3ZD5/K91W3RXRBKk6++kNQDFOno83syu8Fg
tdFvh7i9YKXnQki29UL+ZuUfFW79wCoV8rJTGYCwa931bb8PgpyyOyOTPgCl
vnmF1+MHYedF3DPtNQCksr/R1XeDEGl2fnXsiwE42nDS21VtCOTrpqvLjL4B
T3LW9fL0EBj1dOho2A2C0qTQ6vaUEYii5LE5scNwvfVYh9AvTNDNrdtv8GoY
zEWTIrXPMKHdZTwruHUYXlJ7PdsLmfBTqfrhBbURqJ/ui2zdPQGtgclvV5aN
gPRW7epM20nQYoZeUpwahRWPxXb0p0xD852ULke5MbCiq2bXDk7DhX2FBmlG
YxA8tDT+WpEFjdlTI6rRY2BqKJHj48WCMLcjB3RUxkE/Qm/+uDAb6lss5Pcw
mFBR0LzZy5ED56I8fC+eY4J9tpUk6woH1PQufqy4z4QbT6gsfgEHgm+UhOxl
MmGDb8h0uBQXVKy29NhETcCKwENB7Z+4cIaUfuxRNAkxD+yXdnrwQdlPl/Ko
axLERo7596bwoXq91e+jglPgftZ1o95nPiiFRlFPWU9BZ+pGE77xd/hgMOMX
NDoF8h2tJY4aM3DVzjfVTJIF51PLrzUqzkEyrnOXUGEBhZI0ttdxDtK1ajSb
t7EgwpqMz0+dg/xF9QIPBxY8SOkJuqgxD+3ZX2sis1jQpHbyaTHxAwakohP2
F7HA9aX5yxtxP4AZom8nU8MCKanrwUktP2DpYELfgykWZLUeGDT3WwD172Yz
5E426DzbXWOYvwhb3DhlMQfYcPfViX+OCS+BYW16pI0rGxZ+1x5f5bwE++7P
S/ZFscFiv/7SOHUZfC1eaSx/ZkOH0kj+TaAQb5PXMYy9OIAK4R3vewWI95Sa
1StDOBDueYebpihI1J0I6v4UzwEqY0ohhyFI9O1p8HbO40CcasvBkFpBQnjk
SnjoAgeevZLaaFO7gqDZ6pvT//VwSLrIeVpSiFhT2i9OVeOC0z4rTdVfhYgt
CbuT7+7lQmGKqUrIgBBhu53zvCSRCz09r5W+KAgTjg/SAyKyufCgjDXR7C1M
eFIP7rAs5kLqkcZ1C2XCRFDv48r2bi68uXdKTPKkCHHR0i42g8UFs2N5ZZof
RYjYAkFr7xU8ONtOG/mgIUqkRrt0zGzmgQ3zWKvQqCjxiC2egbt4YOn300Lf
QTEi16n4aPQhHqw9ty2trEiMqNgqy1Y4ywP7O5cbBRPFidG2ahFD5IG2y9Mx
8zMSRI843/7tFx6MFz8isyckiBZj1Zw9Azx4Qz690XJckqjICtm3dyUfBPKs
5L1PryKKW7NT/lHgw7T6xGX9+VVErljjqPVmPnhtnZ19GCNFpPppxzpY/bt/
OE3b4UgjEjMPf+1y5sOuqsl32k9oRGxLpNYRXz5Mxo2Gz8/TiKBdnTXHb/LB
4fMGrY7H0oS1yFXx0DY++O7LlFjUkSUsjIodl0f5kKZ15472bVmidAct9dQc
H/7/J4n/AHZAZoU=
     "]], LineBox[CompressedData["
1:eJwtlnk01PsfxmcjZszyJaKyVtZLy01J8nm3WIukRZYkJVIqKdTlWookl27U
lBSKSClka+H7vVlvXGTLfpEiIybLNJgZv36/83vOec5zXuc55/n70fQ84+hF
IZFIj3/6v6mJnJ58sRUh0v+0mHDl9a1TPyZCC8bzN7nuCkRSpe8mtSARurHr
dL7MN3mi4b4AqcaK0Imn+eASLk+AA8tuWZ4IJfXPTnoVYsRFveS9Syt+7j1+
XZC4DyMKKNouKu0ilKXV1HpVyCFWFW3xXiISofz3c/WfbDmEe/zffkpsMZrI
cuPXf2cTd7z3n1fUEqOGps6G2r1sgr7UL0LBWoxK7oCXmy6L2D4lvCrvKkaO
xqqP3JOZREj9lXjstBhhNd6BBhiTmPg95R47SYzkdV3lV8vJEa2f6ooY/WKE
qJmjorV0Yi6q3bLmuxid7h5sjKyTJTR0Bz5GUiWo2D6e3u0tS/idEszOaktQ
ayT+PjZbhpCe0TAf8ZOgzljQmbVcRPzCNWh8FCZBiaLsfUrT0oTjpg0eh/+U
INP+ACOzR9JEaujOyPZCCVLcKtDdt0iaMJEOrK6cl6Amndy42iEa4Z4d7hTO
XEAWb/m9G9JoxBXb6yOb1RfQZi2vV7qHaMSH+DT6y20LyLBE0cuzm0r4Lqmz
T7+2gGYSm+p6himE/eIbvHIGCSzKBW9mN5KJI16KhSmLSaB9140VJk0mzhcn
h1xSJcGDk61ZvDYSkXwwk7lhNQnePW6U8ggiEcMpr1fnOpKg1syNhcUs4HPf
kDDWlQRnu2in161bwFmoivA5RgIz2ajGil4Jvn6gcc/KQBJMbWNosjdJ8PBV
nwPu3SXBGl3nF5YLIjwx0Nfs4kMSdPWsWzH0UoQ/rpmgOT0lwVtbD/rTEyK8
/sTcLfkyEizSSj/E7ZjHVZ6zS6/1k2DsW022dsUcXrDBVBSkQwb7qLjZwioh
ro7txvTWkKHoWV2F7HUhHsc7qt1lQoZTI/yPGnuEuHfaHw5mtmTgNv/69cq/
P/Dl9IEMkh8ZDMe1kgtpP/Do3qt21wrIoNKQrRPrN4NPlaR4mr4hw1d7txDY
MoN73MwP4lWQof+Gs2MEcwbfbNWdbtdGhu7C07e5L6Zxfp6RABOSoaKqvfef
2Snc5Urbg+QtFHAQyK90yJjEa9xHX+60pECAWlhgzG+T+PpNC7Uiewqs+ZGX
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
A2ab2CY=
     "]], LineBox[CompressedData["
1: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
HP0JZAhH+A==
     "]], LineBox[{{1.5745989745164932`, 5.}, {1.5746164297547105`, -5.}}], 
    LineBox[{{-1.5724110910887976`, 5.}, {-1.5723625950130178`, -5.}}], 
    LineBox[{{4.714702366948689, 5.}, {4.714741493475293, -5.}}], 
    LineBox[{{-4.715259571944752, 5.}, {-4.715227275819801, -5.}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"tan(x)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"y=tan(x)\"", TraditionalForm],
  PlotRange->{{-6.999999714285714, 6.999999714285714}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6641612386918783`*^9, 3.664161243712302*^9}, 
   3.6641612764048977`*^9, 3.664161460725961*^9, 3.6641671519166083`*^9, 
   3.6641682770903683`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "Pi"}], ",", " ", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664161588338938*^9, 3.6641616082528167`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Dx0Q02M=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999999999999918, 
     0.9999998831351824}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999999999999918, 0.9999998831351824}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6641616091920633`*^9, 3.664167152001248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641622954645233`*^9, 3.66416234317502*^9}, {
  3.6641624143936377`*^9, 3.664162435690977*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
X7Fw34m6D/YRgv/zfwGZgyiU
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/S/9pN/Gy0IHGKDAt93cJfU8gv/qqLD+2WMIvsXT
RpXGQwh+O8sHSdN9CL6K8xmWuVsR/PgDLbdyliD4V3Z9beVpQvCVbiVXH6hF
8At/XiwoqUTw+SzWRd8pQPA9t6YZrolH8Petv37H2xbBX7Fkp3H3D0E4f2bl
V4vgLwh+l5+hnfQHBD/nxwqP1c8RfAOfGbGnryH4Oz+XtXNvRfBPOZnc7i5E
8N8+WNfU80oAzhcOPZ2Sdpcfzl+udvir6W5eOP+lkJ1HwF5uOD/zwuTGopOc
cL7LmeI3YqvZ4fyzj65JsG1khfM3mh8pK+9hhvMvxfbs/lDICOc72a5vzvz+
bz+Mb/0yd2vyMwTfZKrO89irCL7625VeQZsRfJ65SwSt8xH8639mzud5/hfO
z9nTsnv9tT9wfmqG89uVRxH8OBEm+SVbEPzAnPqmGZMQfDOZKs9GPwSfsSb/
etCx33D+NOuoz1+3/kKYz6BaLbQMwTc5+p5JfxqCf9GvVSijDMHnSdpgeMsM
wW/qYCvYt/0nwj2+F7/fWo7gKwjNqf8+HcHfO9uw36ACwf+xLmbdIgsk/TN+
yKQaIfgAoi/ipw==
      "]], LineBox[CompressedData["
1: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
gSgl9vqZNBcctggz7w1f/3/8PyXjAQQ=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQva49eM1S85/2DFCg5/Rt2yYPBH/tnxkH90ci+GsK
7127WY3gr4rOZOQ7gOBrifHwSF9E8FdeWCem8QjBX+H6RduJ5Recv0y/PqzM
A8FfxDx19b0LCL7PUu2Ekw8Q/G9uh0S2fEDwvbre13YK/IbzPwl4BZgEIPjO
cv+/dJ5H8J9YZNqZnvsD56vl2V7sPv0PzpeQnjFFJJLRAcY/5MDO/7CMGc7f
5/35eFIBK5wfLxHqnzSFHc4POmUsKj6FE85nX23+5XAnN5yf5Ltx4buVvHA+
39XlveeW8sP5+vxcKmLPBOB8y9OXeB2/CML5X55/Uzb8geCvY5G2UvyD4KvY
JacxsgjB+QIbP+87KIzgP5smUuBkjOBPSgq75FyE4PvWV70wLkPwOebM+6dc
heDXXn2mxdKE4Gd4lDcfmYjg2+nNMHHdiOD/9NrjZboVwd+S/iBBdSeCr7lQ
o5f1IIIvIrLz6dELCP55g7u/t15B8FnY2XiTriL4ADu0m/A=
      "]], LineBox[CompressedData["
1:eJwVjn001Pkexz10jS1HDL/5fUciWxFt3bnqnqvYPh9buQkbQ8qVQiK7RCrd
43GbPB0Pie1WiihCtjxG7dCWSh7WVYb1kIcV0yAz803FqRFd933O67zP65/3
eZv5hwmPaKipqR1Z5P9dYOc7fXGIiweKoruagsNBLdlxW9IIF2fzZBKFeQzU
F4Z6REq5GP1SPnHufSJEPsr6IXCCi4ItFjeyujJg6lP/RYe3XPRJcfPJbb0I
VhpXS9M+cLFRkMnx1r0KR5ceEL/4yMV/2mYPqYT5IDUaHvqXugFOd2U4v1YU
wqDt6JowrgGaTg/zsk7dhvbYN9WXNhsgVDUFGj+sg3L1uY6Jfxug9k3B2Q99
TyD8K2NOmrohXvEbmBSABPLTcnllagyGfvd9XlbQCGj16ZzNXsJgbHh5nJ9o
BELWxNIobQbrd+leM8sbAZsHPi1OegzaxIgFEZIReKE0iVKYMjh9+vKwm90r
0BBeHxIAg0PHFvbO6IxCICkuuhfL4C/hff81vT4G7QE8/YIzDK5X7rFs/nUM
rKuSYlMSGUx2Hqz0lozBF8cgT68MBvuEoTInTSlcjl6nPZfLYNjWzwcdAqTQ
Nlz247YGBjm1eQczv34NG29WWDepGBw3323fnSkDMtRwReMLg77rnJ3+KJGB
OtOmgZo8rD2k9arhoQy6E6QS8TIeqjjCHUBlEBXAP1FpzMMoQ291XZdxaF59
tubqNh4+U5SHNmhOgO8Nz80RIh6KJ7xnfjkwCbtfHs6tSOJhUXLSLefjk7CJ
e3yJIpWHHY3Pm18kToKWKK076GcecvLLZKLySbjt9+ikTxEP65XLBOkLk/Bx
lVXtrmc8tOePhpvmvIGs/Pm/my5lcSmvLLLm3hQ4dCZrG+qyuPduG3u6eQpU
GtwBbS6L3hrDaaa9U+AfaP7TOz6LPSVVFSazU2C9YU9bkyWLnjvvQbe1HLrF
BQdDHFlcdeVp8fISOaTIrf7m58KiztpLZ/m1crAzqdX0dGNRe3h0N+eJHIrO
tJaCF4t3ZuP9zw3L4dSud++4wSyKXy8HR0MF8Hq2J/+awuIWfqIwMEoBbZwO
r/J0FlU67pWlSQqI27L/m8LzLFoNXVrfka2A8dyQzvTLLHYkGDk9LlPA/cP/
WeFbuvg/1WHCpV8BXtOyCq0WFqv3tbRNCJSgu/q4aO53Fs1WCG/vs1XCY485
j7fPWRxhz6tKdyrB6v5yVX8vizPS13ffeSlBFWez4844i/2hsRlmZ5SQq5Pa
584huKnNMFvaqoTMlZsjf1tGUDSo/yqiSwmijcMGlnoEYwXPrw4MKiHI1XrP
AiG4urPH3I4qwfrCy6ZSK4I5w1t9bLgU1t5MOGzwV4KDWUZdl40okLqN6nGb
CGYFLfh0fU1hvldk525HkCkcSe2xptCyYn3NvAtBbY8LmwzdKNR/84frUSFB
/Y6e73bsp1D+bbxS4kkw2Z+u+P4QhZ8PdVmWHiL4bE38VzSEwsHC6ALhcYKW
//BQBCRRcL27dtuDUwQn+uyO+KdT2N70fMAiiuDOjIigLdkU1o2vZudFBKPU
opQn8ii8t2rPKLlAMM5U4GRUTUFmG7mem0Ow7Uj4/rE6Cn3Oq1pj8giWGWxo
SKyn8Nuxk0uExQRrCqrCPZ9SqIw3udFQRvB0sLguoYVC4fkWsKggaBHV+G16
O4WUauPoz/cI2pW7z5l3U4h+8owENRB8kZOzTtxL4Vh3eF3nI4Kqo+4J5gMU
3GefThe3EjS4VVCX+oqCAycsU7+D4IVTwYkiKQUbwt8QIyHoJNM74T5OwWRr
6FG3AYKht8LyfpJT0HditRr+JPhE1Ns1qKSw5EBjobmUYD8Tb8ydpjAb8qN9
1gTBiO21J1e9pzAZy/w5J1/cD/jYz5mhMHjuYUzgNMGLLrOOLbMUOvKDjTpn
CL51TX/s95FCY6XBfVsVwQH7ZvvuTxTuNj7YW7xA8E7kWJPpHIUSSdB7PU0+
av7u7LLjM4UrY/pZ0Rw+3r5+rcd+nkL6h/qNsmV89JYV+pIFCvF/CWx31ePj
muX73jQvegRP74d6Qz7WrByNcP1CIcBCzDHn89Gr4NqnqkXfZxNw8/xKPkqq
mTj5ou921N0+Z8bHvoUvi6HwP6j0/XM=
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{(-2) Pi, 2 Pi}, {0., 0.9999999999999671}}, {{-6.283185307179586, 
    6.283185307179586}, {0., 0.9999999999999671}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664162436845437*^9, 3.664167152085393*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641628428594666`*^9, 3.6641628791042366`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
YmeR
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999998592812047, 0.9999998782744886}, {-0.9999998831351729,
    1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664162880305464*^9, 3.664167152185867*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", 
     RowBox[{"y", "\[Equal]", 
      RowBox[{"Exp", "[", "x", "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6641629078974237`*^9, 3.664162910518154*^9}, {
  3.6641629712848406`*^9, 3.6641630497284393`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Pa3uXt7H6yBa839PcRtG
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142}]},
      RowBox[{
        RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"]}], "\[Equal]", "1"}]],
     Annotation[#, $CellContext`x^2 + $CellContext`y^2 == 1, "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[{143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 
        155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 
        169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
        183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 
        197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
        211, 212, 213, 214, 215}]},
      RowBox[{"y", "\[Equal]", 
        SuperscriptBox["\[ExponentialE]", "x"]}]],
     Annotation[#, $CellContext`y == E^$CellContext`x, "Tooltip"]& ]}],
  AspectRatio->1,
  Axes->True,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664163015551692*^9, 3.6641630517598825`*^9, 
  3.664167152486672*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"3", "*", 
       RowBox[{"y", "^", "2"}]}]}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", " ", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Saddle\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6641630648267236`*^9, 3.664163120005898*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFXXmcz1X3lxZSJJWkkiSplJKtwtHyWEOL0qKeRKkeSpIUoZJdMbZB2Xey
TIxtcjV2Y2swlrGOfRu7UPJ7ns897/fn9Tn6vH79833N2+1+zj333HPPOffc
c+9+5+MX382ZI0eO47lz5Ljyv793b6vzy6VLxxx+ew46eNulS5fkvVbTBiU3
P0x8e4NPJt1/4yWZeN1NHZtn7iP+4LqXJjRv9Zdkj/zsveI1s4ifPvz11598
ck7eDfrJJD73myMjMuud0vbpxP88lvvE6CmHFE8lfnHaoZUnKmdKDv0POP7W
9mLaO+1fTP9O6RFDj7bPEkO/0/GKGa9T/ojhD+gWw0+OB3wdnTToh0PPnCKf
8VupuDu8usRp8hn4mhdlxso3TpHPwLcXua5B9wdOkM/A038v0anhzMPkM/C9
xRKW/Np0N/kMfN/uT0fm+WMd+Qzc8tm0J59N/+SzoYd8NvSTz2a85LPhD/ls
+Ek+g3/dtru8Sy7sZDvgTzdt0mHm+r3kM35PfDB/+cYX95PPwBPHTV32xVX7
yGfgFXbd9uqBNlnkM/CxU38dt7P9FvIZ+PhHv/73lz+lkc/ALZ9Ne/LZ9E8+
G3rIZ0M/+WzGSz4b/pDPhp/kM/g0+d4j+Xfu7Ud5Al7nkfpPfLB9Bf9/4P32
rTpS6rMN5DN+TzwwfEzxrI3kM/CnAno2kM/AO9+5/dEv/rOWfAbebdiIgwW6
/yZRvmZdxmfTnnw2/ZPPhh7y2dBPPpvxks+GP+Sz4Sf1CPgx+Zdnb705ZSv5
DFyCdbGIcgZ8VLnca37e8hP7Bd4lGNcC8hm/lX0/5DNwv05/I5+B+/X+C/kM
3PLZtCefTf/ks6GHfDb0k89mvOSz4Q/4KYafEpXndPfpdX1uSrv/gJHndPdi
MF9bXFSe093wSeUr/vzUMheV53SVh3EuKs/p7vmgn8FGntneyHO6yuFwI8/p
MfLM9kaeL6NHDD1GnkN6ovLM8UpUnskficoz+Wn4nOqubv1SoZZ5sg2fU11F
1WNRPqe6g6Nfbt+g83rD51S3J5CrhYbPqTquiS7K51Qd1+cuymfihs+pMXy2
/aRbXKJ8Jj0S5TPpN3zmeA2fyR/DZ/JTrJ3UI7BDQvsDuF9fe5zdh/y+sJF8
Jh6Ma6mz69zvyzPI52j7gc7y0eNN+bf9D3w27SFPBh9IPht6yGdDP/lsxks+
G/6Qz4afVp4lRp4lRp4lRp4lRp4lRp4lRp4lRp4v+/uf+0m3uJVniZFniZFn
iZFniZFnsfIMumL0s8ToZ4nRzxKjnyVGP0uMfpYY/RzDZ7a3+tnSI4Yeq58l
Rj9LjH6WGP0sVj/j+zH2hsTYGxJjb0iMvSEx9obE2BsSY29cxmfT3tobEmNv
SIy9ITH2hsTYGxJjb8g/2xtZEmM/S4z9LDH2s8TYzxJjP0uM/Swx9nOMPLO9
tZ8lxn6WGPtZYuxnibGfJcZ+Fms/o78Yf1Bi/EGJ8Qclxh+UGH9QYvxBifEH
L+OzaU8+m/6tPygx/qDE+IMS4w9KjD8o1h/E/xcT35CY+IbExDckJr4hMfEN
iYlvSEx84zI+m/bks+nfxjckJr4hMfENiYlvSEx8Q2x8A/8eE6+TmHidxMTr
JCZeJzHxOomJ10lMvO4yPpv25LPp38brJCZeJzHxOomJ10lMvA78dEWDv3e4
RSU7lMhMPup+qnzPxyOmn1R+ZhDvPnffsG2Fjyjf0oi/PDD9yYrNdil/koi3
rDW1QvvBS4GLwfnd3At2XZ9Q/KArNPa39adHHOR3gbf8z+RfG87cze8C7/Hj
4iuuXbyJ3wX+ZpXCB3dnLeB3Dc7vPtfg2VM1Eva40wfGDGo6eQe/C3z2xedy
Vmy2md8F/kmdHnd1/fdafhd44vt9Ri/pm8zvGlznN01MP6QHv12DeVlDeoDf
H8zvStIDfHYgJwtJD/A/A3mbRHoMTnpMPypXGWK+i37F0In2/PV6dRbpBO71
cxLpBO71/BDSaXDSafohnea7pBN4j0BvTyNf8P8pLoZ+iaFfYuiXGPolhn6J
oV8M/RxHjDxIjDxIjDxIjDxIjDxIjDxIjDyATmfWi8SsF4lZLxKzXtAP6QGu
65T0ANd17Yx+kBj9AJzfBa56ht8FrnqJ3wWueswZfSgx+hA4vwtc9Sq/C1z1
ML8LXPU29S9+bzpZqve5oedpHwIfv+v7ss80Pk/9CLzzgUd+vT71HOUN++3k
a2564OV5+ylvwB//teqhS4nbOL/AS9Rvtnlb4UUcr8HtuFzMuLAfUW6Al72+
a6+8b5zlvBr6iWPc20qfuyXf6YucD8Mf4mh/Z+krfkxLDfdNwzej9/a5jANJ
r5/OvdPojX3up5WPze/RcL3RG/vc/QVariq6d57RG8StHLoYOXQxcoj9lHwD
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
mX/WPw56CfyBPbzB++nWj3YDgnP/HeQP7OF83t+3/rX7MND/W8iffmrHfuvj
Btbvdq8P7zFy2Vvh+TXsN8RDTDzHIZ5j7A2XYOwQtU9ce2OHIL/lQX8+y3kB
vsKf5xq/bMdl9iraT/bnwpwvtC8YnI/Moh4DXj84B1nMeSReNnPCj7ev4nzZ
um2YF9jtzTx/QjlXu32uj4dzXmC3/+jjTiGudvvI4LxmOudlk9rbL/r4lY0L
ufJfHF99rGWqmLicQ1zOxBWdjStqvM4hXmfijS4m3ugQb8T8fqB532O0jgHw
RorPVxzzvlj7edbHFSkPV2tcuomPS9MOwW8vH5+knIzV+PbmMkF825z/Zlxm
t/+mfJji459sfyQS/2/G9jU0rj7Sx9Uleo6c4bL1nlr0HDnDvRecC88w58gZ
mgeYbM6RM1xPtechP+DHVTuD9UUc/s5YpR/yk0fncayfR+K1oucgzHN4XOVk
jpcT4oXVr8nrz1NsXN3FxNVdTFzdIa4OeTir91Ou0XoswPcpnkdxjH+K9rPI
x8mJv6Hx/3Qf/6d8NFN6hvl4O/Gdeo5QoEJwjuBMPNzFxMNdTDzcIR6OeWyK
e5RahwR4Y9wbUhzzCPkXv46IQ/5r+3MfziPGkeDXI3HIfzF/fsR5TNVxfe/X
O/FqKs8D/DmUPfeRmHMfiTn3EZz7mHmUPGZ+dd7lGjO/Oo+CeTTzLph3c57i
Ys5THM5TwP+TKld/f+br6gA/pHgOrbdjzpUE50qYF8jhTi/PxN9UOdzj+WD7
F/Rv6BHQY/oR9GO+K/gu5r258mGCX3fEt6ucP+zny+Jice1H0A/kpJSu9/J+
vROfr+eDbb2cWFwsrv0I+onmRyVJ0yLLDj1cdbXJi0uSa42cAK9batWKciPG
23UtWNdGDwj0gDlPFJwnmnNSiTknFZyTmnXNukNGD8hQs951XQvWtdEDAj1g
1rVgXRs9INADZl0L1rXRAwI9YM6jJeY8WmLOowXn0WZ/l/lm31d7QMaYfR98
wP5u7AGBPWD2d8H+buwBgT1g9mvBfo39/UTk3LaZtQcE9oA5Txecp5v4m3Qz
cTmN10lvs48jzob92uzvgv3d7NeC/drs74L93ezXgv3a7O+C/d3kS0hMvoTE
5EsI8iWi+XsZMkP5E83fy5Auxs4H7vMAk43fmiEfeHvJ+K0Zclbv7xu77rL4
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
mRfeGzTzwvoghv8cr/EjGHc18oD8OtJ5p6df853CPOcTmud83OQ5X1C/Cecp
6Kf/izcWG7YvfEfe5PnzPMXk8/N9KdCv/VCPGXuP8QGMS++PSIaec6F9fT3n
wjtqvIft8zo0z2ok8YZ6TtdE44HAc+p5HN5dw3hzlg/yRvjOGfDePs9Emuk5
Js8v9BxzjJ5XmvwNraO0Sky+B/Ub8x98fgvf1eD99SCOMV/wbhP4vzrY9yvw
nTkTH3N4dwp4/uCd2QpuAN4LicapENdyJq6l+Rgjw3oVGq/G+08m7kR+mngO
4kLOxIUQRyI+WuvutlI+A6+peRF4Xwp4Ls1/0DwE4i9qngPqvMO/K+jzNh3q
SMKvGaz3OPhOj+JNfL4r35kw+aWCurQmH1VQlxZ4zqpZjbceyBLN23Qmb1NQ
r9bkefKdCd4P9efUgrr/kJOe0XclqFf1vQPW/TfnU6yDbPK7dJ1sZByjsNaf
Rz/AO/l4giuBOKbyubDmr+IdBeD1NX9V/XTio/T9ndIq3+D/01rv/UGVY+Ci
ecKoAwhc+exQJ4752Jon3FvrnQG/1/vFfM/A5DOzXhjwMq9PLD6p9UnW1WLe
ss+XZt00zCPeFUJ9MeAflGmzOWX1QdZTw/x2VX6iLjbm63pfT491mU1+DuuJ
w//qq+sX9bKBt9b8Rtz/N+cafF8E+K1a5wTjNPF55o2zTqHmkSJvHPgOjdNi
HZlzBBd9r4X5rny/BO3b+LxQ18TYjZo3yzrIpMfnl7poHWTm37LeoqnDTLk1
fOB7GMBTtN4m9IzhM9+VMfmrDu+pmHxX1m009AveETF8EMitOUeT94xfqfnM
yOcXMy9yzPiVmhfN9zlA5yjtH+9YmDxhwbow8iDRdyaYj833JEweskTfdWBe
N+sao31NnV+8F2Lydfmuhsnv5bs+Jv/W4T0bk6/Ld0dMPi3XKfSh1rHnOgX+
ieptrFPoPa3/z7r2fAfY6wfW6TD5P6yLbfQq31cw9eL4fgDraOr9DtTHB/6I
12+sz27yf1hf2+hVvvdm+ud+Bv3xQdJ/LqasPk19B7zx0yNevbXoKe5nwF98
umz/N+se574FvPm+64vM+f0g1xvw46u/O3Z9aphXDfyLb3ffXuTr8L1d4M8M
n377y/PC8wPgz/vvcv6AP9z0j3l/5jxFvptxcZ9mnSpZ3CLvG4c4LuBVy/U9
+eLx8N478Mrvd+txb9vQnwRe0LyrArzk4je6n/o4vPcIvIrvPzwnUHxGnsGD
up4L7UvQeynHtj9KttnGuADwvz3O9liP3/9jfbPElIFa3yx67/2/7YN4UQL1
MvDu+g5p9B5vYop9LxV4V9+PqW+WmPLdP9Y3S0z55/pmiSn/XN8sMQX1zTBe
vtekcQOMl/Z2UAdpBMcLfGhAZ0uOF3in4N5xC9IP/GaNq4B+4O36ZD6R+F14
vgJ8xJJ3yrdJ38R5Ap92BfUAF5j3odZIP93XQD/wBwL6+5Ae4Lk0fgV6qCcb
fSkjay0gfyCPzwf1WmeyH+CP6bkh6Me/z9C4AfjP+fR1C8P7fvr9iu2LLXmu
5Ha2B/7Glw3v7fX9xvBdCf3/SnzbqH35J8J8RMj/Ax7nugX/3vb9cJ0Ar+S/
y/YYd8d7vNyiPfAUjTNgPCYPn/1iHs6pv8N3fBQfaN5NY/zE8znMU1S5G2De
s6Bd5+eL8816Eab+P/NkvDyE57KKt9F8A757qvgmL2+X2Yf2PQXgo7zchu9/
K/6Vl3PqhaieCN9TBt7VryOOK3wnKlh35Cfwh/065TqP6puqKeVi9nHMH/A/
VU+if1PXl3wDfkH1J/09lc/tpu4uz0O9fg7z+RSvYvYL4Pd5/R/eC1L8ZrNf
AH/C7y/hfXjFK5n9Angjv39xHWGd/Wzq6wJvavZ34Lpvclx878js77z36vfl
8F02xb/0+3ioHxUvb97zAn7E2wPkA/APvP1APgCvZ/Z9nrd6+yR8nyg6Xspt
tL7WtEo8n1M+3aH3idA+Wp8qfH8N+LDq/YocaLOC42U9Y49Tj5j37sk34AvH
tRh4dFz4blq0TlT4bh1wfQcnfP8RdsKmWhPzvhGefwAfGvgFv5MezPOvQT3D
sL438Mxbx196ruQSrk/ge4J79LPC/Dnt7/Mg7jeL7YF3Wnv+rdpnJ3Jc0Tyc
8N1t4K18e9IPvJnvn3TYeyX4HvD6pm458JdN3XLuq1q3HPQA3+DHS3qAr/P8
Cd8vUzzJ85P6HXI63POffIjaQeH8Ar9qczCPpAd4ZX3/CPQAT/HyQzmP2lOh
3AL/0cgt80NUbtFP1P4K32vmu0+6riFnmJ81hxckXVy1kuON2qfhO+bAC+s7
WeAn8Nf1PSyME3g9U4eZ5x2mDjPrp2kdZtb1wzn+Vx/NfndXWKcP83akwPM/
NC7IPH+2rxucU88lf6L29TeVgEft6/DdB+CjD9Vv+HbSwPAcS/v5MnjPNJR/
4N4fn8XxAv9W73mxvqLiU1Y3eHPHc+G9EXz3kB8X+YDvwx5Ae9Br32FB+wqK
s36E0tvfvA8C/LD5LuPVhs/AB6m9BH5G/YxmlB/az56flB/g3o7tS77h3+v7
eSSdfA/TywPpBD7L85N0Ah+ldiDkH/g0tRsxH8B7mvdtWffUz2/4brLiKg9c
59AzS/z64neBP6PvO4BvUT8sfH8B466s8Vv8be/jsA6IjjvLvIfIezH9+ky4
JTvMh7P3PtAP8LRzeWvVfX0b+2FdgocWPdsmPbwPA/5V0bwa4Mx70XwY1qdT
fJGfd7bHuAsbPxF4BeMnAr8miFN9xHWCf//p/k873nTPQBe1JxJTkrx/6qJ2
Q2IK8pGi+3piin+3IpQD4D28n045xvf9edNHlFfgj6n9DPrw/31r3qkBnujp
53xDTkqautN8Z8bUncY85/LzRTngewV+ftke8z/Uy0mYz6p05Tf+NfAvjX8N
fJj61/gu+DDG+C/AO6r/gv7Bv4WaFw2+QF70fRP3f+km6d8=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHkcF9P3xmf9zFiSlKyp7KH8rGUrkSJU2siSJK1IQilpsZT2LCVrFLJV
tElaLKGFEGWJJKWUNoSQ3/Pumdfr+8e87pkz996Zz8y99zznOed+qrbt2vTm
KAiCJ9IgiFVeofIuKVqqnFAKgnLSzc6C4FIdn0neS7oaurYkDIIvkiCoLnmx
5M8lt9K1o1Wns3Qnq7Mqkseqr1MkV5X8mOQfVO841S+rckweBN/p2t1qN0Ll
O6pTVuWD0n+o8mbpH5K8SPItkhvqGT5UnVDyJZI/lbyn5Gd1LJWcqxyvY1/J
V+oZnpQ8X/JOya/quEVyDemGq7+3Je+j8kTpl+p5lut51qrPedL/Jd1o3beb
rn8u3cs67yp9dbV9RPpbpF8m/UodR0jfQdeHS19b+gXSPaOyovTXSv+1zveX
3FryCNV5U9faqJ+WOg6Qvo30w6Q/R/r3VPdF6Q+Svq30Y6X/QfoB0jVO+OH6
zTofIv3ZKt9V/e+lP1b6vVSOlP4t6duq/ijJcyW3k/yo5O8l95P8sOSukj9T
25d4V2r3iXSrVVZTP2VUDtL56aozX3Xul3ya5HmSv9RRXo9xtZ7tK8kVJF8j
+RvJh0tuL/lPtW+tfi5T+bP0H0uf6T4bJH8kuST5TtU7SfIb6ren5P+T/Lb0
32bW3yLdWbHlFzRmTtP5TskfSHef5NqSl6n+qZIv0L1q6F5XqdwlfXMdrST/
q7KZjjNj9/+8+nlTbc7WtWm6zxl8e+mfk76u5DqSX5d8h47WOvqp3jzVP1Z9
f653cG7s+76ma/OlP076L6S/RvJp0t+mZ5kquZL0n0n/k8rT1cdBKl+X/hCV
n0p/tXT/qX4LHW/SXv0u1PMMTP0M76ru7zpu5V7Srde1JZJT6Wapfkf1s1Xy
FB3HSN9FdaZJf5H0X0u3RkcX6cdLP1P6ptJ/K90bkptLXiX5YvW5UHUiyWt1
3Mj7Uf3X+L2Sm+r6GzrvIflU6dap3Wl67gNU/qqjieSzVV6ocofq1NMxQ/Xv
UHmK6nfVO2qoa3/wLSVfIvlPyaerzV8qF+g3b5fcWPozVc7Ws/VT+Y/ablPZ
SPpaKu9Xn+eo/lLpN+m8jvRH0oeOayU3U1lPdQZJHkF9HbdJvkXlPurzXsaV
rtfV0Uv6O2mrvgZIP1+6XyX3lvyW5Ck6rpf8m3R/6OjOs+s95LwHtb1NbbdL
34vvljKog6C/inmS28aWv9NvvU/1uqv+zSpr6lpLyedLfkRyI9VZrj4eSz02
N0iuJfly1blAdR6VfJn09SWfI7m99FfzWyTfI3mQ5HL6XfepzjvSvaLjOtZs
3X8PyXeqTg/VaauyqY6rdG269B1YV9XuRz3zXMl/StdJ935H7bZK30Hy25Jf
knyD5HmSX5R8PXNM9e9S/S6S35X+ZekbJR7DS3XeXfqPVE6X/j/pO+m+bVir
1Kaz5Osk36g6Z0jVX7prJZ8suRfPLvkUyb0lvye5ruQHJJ+io57anqC2S6Q/
S/p7pLtJ8nmSB7MeSz5f8hDJ3SQv1jO8rme4XfLHkmdgNySfqToDVOdj5r7k
eyVfWszvrjr20zsZI/1i6R/mmuQvVPfv0L+FMRGqzkjWH11/TP2uUf/3qs6e
0o+Q/n3p95D8tJ73R13vpWtfq85iyXdJflp1lqjOUzrfKP0w6b5KrR8kOVXb
QcwL6XLJT6ifNapbUecj9QyP6TySfpTqfIgt03ko/TL1VUH6sbw31mYdj9Kn
yp7q9wvWFvVzp+QVkhdJPl/tB6rtMPWRqd5g1e+LjcI+Sf+o9L1V/ynpD5L+
Nen21vGqzl9SnTYq/5P+MsmTpX9L9b+R/AzjWff4J/R3b8f6Iv2Nkm9QnZjv
J7mD5J062khuofJifYtbGCc6nlOda9TuR2y65Ksl/yA5ZPzxLVT/Bcmtpf9b
z1DS8YDk96Q7Uv28ojoTdX6E5JclvyB5jtrsJXmtnm2Cfv/vKseoz3GSf5E8
QvJs1dlDdVbrvA/X1O4j9bmP+p+ga1tU97PU4+Ro6d6ULlf9VapfH73kZ1l/
U7cdrD7mgoWkW6a2uyTfJX1Nlf/p6CO5lsrX1Ne1etZzJfdU2Ybn1rWGKtvr
qKF+L1J5g47qki9UeWW0GwYEt6m8WkdNbIbu0UXPcoH6GRy6z76h+7lKR9nA
bdvpWI5tVnm9jtXST9UztMXGYhf0/E15Bh2AQuTTVeemyG2o30rlFbxrycPB
D+rvZfWxj3SNivs2Vj8vBX6fTaS7TscynZeJfK+7VecVlbUCrymnFP1/znzM
bXewP4yLayKPjVG6x83Sn8CcZm0MPK7GSH+P5LOlf5H1RfK/0v2gftrF1n+P
3QVPSF7Nuib5LPCG5BaSq0leJflyycdL/jLyOv+w+i/ltifn554fdSN/v87F
7+0ZeC0BM7CehAV+6Cx9kBs3gh8vka5j5HfwVWS784j6TXPbivNU7pvbhmJL
v448Zkbr2pTM72Gyyu9Up6We8zjW3dDvF/w9Eqyq+ofFxk9gJzDU8Mh4soL6
eSLzfHtS5VOZn+lp7Jj66iZ5embcSf39pBsp3cGS91fbG1JjeLD8COn3kryH
9EMk7yH5WekfiHb/5GCc5CN1fMVaERuXg89XqP+/U2NvMPjTkfHGzNiYEmxZ
RnWr6fxbyYn6H5d5vX4mM14BtywHb6rOCslfq05Vycslf5kYg4JFD1Td4/Uw
J+laeWwXPk1g/Hy29FeC/6RvlHrONcFnkb6m9IdKP6fkOTaT8QUekzwjMyas
q/d9jMoTVf/U2Peaoev1A9ueGyN/F8Y8c6pZZFtLH5fz/sFCmef8m/w+1Xki
8BoNdmqu44ICO7Uo+l2V2d5erXu2Lnl+gmNP0Xkt6SvhE6mfxwOv+3zPlpH7
PUp1TpBub9YkydVjv+dzJF8FPsbGFjiB9flsyR0ld5K8WXWujb12MU5YJyeC
DzPjC8YkWBPMWa14b7WxF5mfnd8A9uN98F4+1rVZ4N3A6x7Y8JbiNzZW2SXy
uAaPgksZ5xOxHYHnJmtPdx17qs6UyNgALD45sq0Hr/+TuT7teuiogY2W7o7U
mP8Dyb9k9nWq57Zl9MkY4FvT90uZ5zfzfHCxZrIOfiF5W2YcWrP4FtsY/9K9
oPMT9a7KSTdJ8lmq85Hkvql/54TM/nUfxgH4jfGmOgtVpzkYVfpmKlvo+D6w
zP16FWvj4aF9c/x1fHJ88+N1v1fVzxnqZ7H6WQbOjdwe3xgf+dvEfnGV0PVb
F34OaxRjjTEHVm+Vum+eDV/vMdU9Jrc/u1b6F0oet2+qn9cz2xJ+C/2+lXkt
xI6A/bsWY3hSZOyHLbxa17awtuOPSN8gsC/wpe5RT9f/yDzf7+T3sQYyPhOv
56xXnaSfJf0K6c+Tfod0VQu7yDMsZ2zjo4CJdDyk+vXxfyU/GNg+sgbyuyeo
nwux8ZLHqP1Stf1Xz/KTrm9kHQY3qNwEhkuMn3/he6vO6ernZ8ndwQ25Mdp5
2DX19Q0+XWKMhA1vWNjf6oU9PkHlV6rTKjGGwSZfWNj0xzLjqFt1j8clPyv5
0pLX7A4FTsLXnsCcxY6lHgOsye1S8x5zM/vRk3hO3p/ab8am4ENl5glOkH42
zxbYj5vFMwT2ud6UfFFgv+xytdkg+VWVv+i4XPJTus/mzPxNDdZRrkk/jW+b
2Uc8VfqtmX3f03Kv350i28nxKo8P7A9P4H0E9plvVr+VJb/NHOH9MnbwJQu7
gy27KTWn9A44V20rBeYvPivZ32kt/WbWCOmfVt1tkq+U/Ay8RMmYYZrkDF9V
9W+Fo5C+Y2hfrGlsvL9Efe8seT3Ef+qa2ReD/zlX5z0l357Yt+Zd8c6axca8
H0kuqc7tqtON36W2N4TGLX+XvK7OBL9If31ofIuPiq96Tsk2uUyBkVZzjs0q
2cfD11sUGQ/8Dq5Wub5kPb4g/j3flG/bgbEVGks3Sfx9+c74umAPxjB+Jv7m
jsT+JH5lbfxTtRsSeo2+DD5J5WK1HZra179VdYalnt+3SW4cG7d/qDqHSf8k
66f6rIRdk/yi5Nsz+6fwAz3x01mfdH2RjkckXyj98NR24I6S/Rz8nc7qe6fa
XRH6d44L7fsMlfxnaP8azNcGexPav24S20dYqOdZiF8nuYH0I1KvOd9n5kua
Sv5D5QWRfSK+wV+h/fE2vFNdewp8q/IotZ0l+b3EfNjRuv5kZB4O/ufFyBwe
ePklySer7tbA9epL/jWw7wo/h89bWf3Uj/08MyNzdfjaVXie2O8BTDEps/3s
rOcvG5nfAFPCNYL9wepvFFzZRMn3qv2tqnOjyuPwqyV/LPl4yQskfyK5GnhE
8gJsp+R3Jb8v+TndY43Ksip/km57YJ8czhKf/TC1fV7XfmTeqRyf2W50BFeo
/sbAnGa92GNjuvo+P/aYmRZ5jWCtOAKsXnCkOT5dbI40S7xOsV4dqXJybH61
nPSvxsZ1T0TmbgYExvCvFmvUISVzlnBiT6lOjdjPMhiMG++ma4JBkl9RvfWS
D1Y5VfqjJJdX/09KlioYyBwpmddqj48GlpW8n+o8F5vzLEmeo2foyzpZMv/T
TfIXatsmNs+8TPL42Jj2Pmyd3s9vgTmLE9T2fZ1/Bu6XfD/zDb87M0/FOsDY
YuxMi+3DYTuqF/4gJXaE38nvnRH7N/BbXo79rDzzxNjv8v9CX4Pvpd0BxXc4
MXS9PRPj+VGMC107PzQfC09/fGgbyXhl3L6uPs/Tca7kqZE5z1qqU5XvFpqP
bULficfObGxV4rE/B/yamduB59xb+r2lf0j97CO5jORHJL+sa4cFfs6L1KYx
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
YmuJLRFjIq+VuCbPMEfyd4l9E+7FWGV9ejw3j/279CdJ3ygzF0ReATFNOLah
qtMkM8ewf8mcPPz5LJWXZeYhKpbsgzAX5iaOFa8LnDtBziW5EOQewIviy5CT
C6cCp1EZnzhyfPf7wDFdxkMlsGTJduD53P4muZHkfBLPPCR0DsajOt+hcrzq
/K3yYOn/ie0jYOP/iu1HgCEYi4+p/p/Me9X/VeX+0v8W2zdh/DGXwDzgHPAE
8whb8SQ2seSx/0xu/APmwS6CqcBLYA7i6cS2iWuPLHnsPK36vSPHu7nGvMbm
PCH9wyXPrWdz49iyuv6zyjWJffuLUnNKL4XO0eoeO/9rB3YwMbd0cGr/GF+b
d90ysy8Lv3dFZt4VjrZFZj+4svS/Z+afR6ttlBuHP5nat8fHJ7b2e2Jegvzk
MDf2Jp/+t8RtyU/Gnq8P3WZ75tzGq8AVmTlkOGfypn8NzavyDX8LjVO3Jubb
GUutirHNGCeHnPEzEWyYmX8+qmT+fl3ofOKrMvPb5KsQ5wODL4wd98JvWBIb
x4PnGyaOP+wZmZPdM3fea+3ccdP2gWPi8CHnSt86N+YGCyzQ+ZbU6/85mWNl
x0b2Vdrp/MrQ+cnbUq/btTPzmpvC/3H0lLUT8/cbQ8c+dz+Dym6ZvwUcz7W5
MdT20DHpPDfPPDX1OtZO8uup84g3hOZc9s79m7pnjj/8EprTIQf559AczaeR
+VViZ10y89jkSpFTTaz2xsz50sRVbypwCBiJuD25BMRmGIfEGYjPkh9DngQ+
L+9nV2YOlVy2vxPzWuQGj8wc7yX/GV52R2guCU6ppa63Y/1PzEmSJ8zYYoxt
KnksMiZj8hcS+9QNEufoYOfI+SeXBTvEPoLHU/t0G0vO28M3Jx+V/BU4IvYv
kL9ZK/J7JI+HOcO8IMcMv6JhaowBx0/u+vWZ47PEk+FRL1d5Q27u7grJ7XPH
4xnXxA3gkpPI7wKuPY2MS/g2fCM4f+ISOHfEJpZG5qE7J87tuVJlLbjEyFx1
l8R5+PBRs1WuiDxmiNEzJhgb5GkwhtCTB0gc47/QsQxyGhhHSe44xq7QY33/
3OsGuSQVcuM6ckkYW7wb4iN8U3K0z8idL46tJJ+qTG7cS34i3OQfofll1mrW
5PMYV6mx68G547QnRN7fQvy8SoEtOuTmWYn/gz0rRsaf+xWxknsSY/ZKkePc
cNfkG3TMzLGQt9CpeH5yfi/J/bvIl79U5SGp240CZ2T20Yh9wLUSW78ucyxl
78hxF2Ise0WO5ZCv2Ie1KXf8iFgMOUB9I+d5ksdAPmd/1ambO1ehg9p3zsxz
Emdvm5lTZfwwjsaCqSPnBByaunxI7R8H30k/WufPJX5mnr1s0QaOHe4WPAmu
hLsFQ4Il983cDmxcLnNf8M8vJP+7D/7K+NAYBV4ZDAmWPDCz7wCfc0BmHh5O
pmJmfrthyf7rAZF92H6ZcWPdkv2qQyOPoXsycyz4sP0z8zznSR6Qmf85X3Kz
zHE9cvnuzR3DBpM0z8zRHlYyxicWNjBwvAM7eETm+MKLkocUPk2FyOMDDLlA
5a7UPvppkW3Vyak5sZWJcen7kv9LnX9fN7DPis3DfpFnNaTon/gOucPYb/J2
GSM1I69NYFqwK4H0QaltFrlY2DtkdAflHvOM/WWpvxe+3qep3zn+3SG5bQS2
4vvUdhzMvz01dq2UOy+jaoHLD82t5zq8GDbnsNz7xJhPR8DbpMbDp2bOg6ge
OZe0fO4xz9gnR4iY47DM+T/kqwzPnLdDvHJE5rWauCl5s6si+0yDE+836a2y
QW6fbL/IvjH7NfrC8eT2j8tH9oG76Pw6veNF6uf7yGsFOQCsG+xTqa+yYu6x
xJji+/EdG2TmrU+KnP/KN+PbXZT5vfP+D8+NF8GN5K9vK7ANGAc7yB6ROioP
yD0OGY9wdvA/8EDEa94OHderlhgjkasF1/pD4LxAeCLqw+s2yR3nw3cjXllH
bV7LnYfD2kd85rLc8SR8kFLsbwQPzL6JB0PHGvgW7HGppzIt/BTybdirgr9J
vgn7UOBzyIthX998yV+Ax2Pzt2Ba3mu/wP4KuWFgiim597aA4WepbJo7ptVM
8jclY5+puTkRuBH20M1NHefCl5le+Ozs3Ztd2Br26xGrJc64PnFeI/mN7MuD
S2W+sydkVnFf9uKR58i6x76f5rn3PeKvYTtZA7Hd5FOBA8BY5DnunmPM39z5
JYyZD0rmjtgXeZH0HWKvOX1yxx7IkSYX4hz8IeneTYzJyGOqqWsVQ++D2O1H
s4akhW8YmpusEHvukC8EdgHDwN/vH3vekLtSvvBVyS/qn9tngz+H24Xjna7z
Owp/A96evXzkKR0PJyT9N4n5eWKH1IcbHhd5DSSGdZeufZV4/rJvCH8Kv4r9
SvB75OmwxwecRw7t/bHH7THqb2DsWCQxyd5qvyLxvEgy25O5ufcWgf/ImyXH
Gb6F/Cn2CrHHjdzdHrnjIowx5gZ5O+TvLE28jpBXNaCIMZDf/lFiW07uFXsF
2TPIN8CvJxZATGBz4Sfu9hcT589sSIyxwFrE8dgXAP/J3hF4G/Z/sQ+MvQtw
Qfjj7GmACyKfkTxucg7JPYSPgkdiXSI3AIzF3jj2iMDzkHMEd8d6xP458AXj
/HM975W5+UfyT8g1vA57l3gfBHwv+1fizHhhTm5+j/WOfUXkw7J+smeOvF2w
B/vYyHUFk4DbJqXOJ/wwc74luZe7EudPst+KPWTkjYBBCc7cVOBF9tWRawKG
ZN8f+Sv4RuwhAlOSo8IeI3JvwRitE+/nAKuDQdkzAYYHm7ZLjP/Yn9Q2MeZj
jxF7QdhrAuZ+LzImZB8r6yR7sC7OnReMXWC/HftL4NDICSVvinE9MXd+DnFV
9iyyRwn+kHgleUTETzeDV3NzwbtzEWP7JOx7Y70ll2lL4vjUmsDxD2wBe7Ma
5s5fIlb7S2KeHb6dvdLNcsfym5fMre8s7HiL3PuxyQ0mPxocwN7Zs3LjSr4/
e9DAl8Rq2+Z+L/gUPQufkD2UV+TeB0su/eW599aSi/tvyTj0LbBq7v205Ni3
zL3Plpxe9i80CJyDSawLzMM+N/J/wJTYzutzfxtwOH41/jD7idlUwvc8M3ce
EXgUm0peNnYZDMozkLtEjhB5zvAz8DR7x44bwl2QxzBB8kRsWuaYJvu/thX+
BvtqiQ0xlhhT5KyMV/3nE/uY5At3zp1/AIYiXx2OGl66qnRdC66E2CX8A1xE
FekPzhx3YM81HCj8D/sHiavhi5FDQEyX2C4cDfvOwPTw8XDoYFP2m8N1w43P
wt8o/Br2xBGLIXeI/YLETcjzYT8f+xC5L/fHxuGD44uPL3yGBqm5ctYK1gxi
NMRZDmDeFTYD3+TW3OsauAveHP6cvIK/ImM59sERd8COH8g6kHt9BIPtiop4
meqszozJ98/Mm8Ofs78e/AqOhdeB54HTJNaKzdmd/xOYUyIOTjx8U+r4MvYC
7ojvyPfETsFFsP+MeDacKBwWHBAYkhge/2MA5wR/trLgXBhr2A7w1b6xbQeY
qlzsPbNwY7flxq7E627MHaMivkOchz2nxKGInf6S+n8MwBXsyyFmRk4QGJU4
cLfcuWTkurCvmvg9cXxi6+SSkafE3nEwMHk0t6jcrD7fDTyv8dfJNaINPDt8
C7k18HXEh8g1YE8usTBis/B+2HpsPjlL2C/sGO9ybugxx/5Q4kfErtnfsDvv
K3Fsi5wH/iOBvaX4peTGYEN354dn3n8KFidPhj01xM6IofGt2Z/aKPf+XLAK
mAUOjT3B1+VFvEBtD09t58nBIBeDb8M3Ir5PfJN4JP850TH3vi1sB/t2yS0n
/wfbDiYmpwNMAUeKX7O18Jvwn/ifihoFdwFWwmcjVy4u/CViQfiGrA0LcvN4
7GNuk9vHZA14L/e+WuKGxOe3FP4afhtxH/w99oPyPwJwb+Dg/wcfbGsd
          "]], Polygon3DBox[CompressedData["
1:eJxFnAn4FmP/xWeemblnCCktlkKWFksiJbK0vpE9WpCtUPYlIZUWLXYl0aYS
sm/Z25M9lBRtEsoWsmf3Px9nrut/Xe+8v/vMfc88T/PMfJdzzqjX49JOl1Si
KBqfRpH+FzVIomi1/taNo+gujV/Louh24d4aLyii6Bst+lRzjbRvd433DFF0
sMaP6yQHab53HkW/af5M7ftccxcLJ5q7SHiD8C/a+mr+NJ3vMK3vqPM31vwy
zY/Svvs03kfj1lrTQOffVfuWCy8WvkPjZ7VtEt5f+B6trS+8SriO8FiNB+rz
amh/NZ33SJ3/C51jreZ20prtNb5K+w/XuJXWdtP8HcIdhU/W3IvC3XX851r/
jM5xmnBzzTfX+AytOUHHfKd16zW/d+Tvd43mj+D7au4Urb9Xa/cSPiL29flL
8y8L3675kzV/tf79keaWCJ8ufL4+73fhs7T7C83dKnywznGe8G/CCzQ+WeN/
tB2jY/7lnFp/jvBJwpnwbsIfalur8SZtG2Jfw0Ya36bzHaJz9BL+Q+drqGPW
aLyz1tyt8Y2aHy98scav6/v8o2P+1FxP7eukfbdrvqWO7y38p44/U/gbzc/h
mmj9tIqvRSvt21PH3i+8r3Cb2J//snBn4X+1Havzfat9n8W+RqzvoK2b8B/a
/tZ4jbb3NT5Axx2gazddn9dZ4xe0ddfnjdRf7YrWa7tH59tPa5po3weR74/2
Or5r7Gv6l8YjNMcl/0zbRM231b4use/RPzW+UydrpTX9Nf+TFjbW+far+J4b
rfWR8N9aey73iPCwyn+7ok95ZoSHChyi8cE61+P8/jrf4VrTT/umavyI1nzN
v1XnuEn7+2pfFf2twn2j9Q30t5Hwq1ozQmvv0riuxgdp/Y465x6ab6B9L2rf
dZrvqeO/11wn4ZX8nprfS/OvCY/U/JWa31J4S+5znf8V/b1Rc+dqbp7wVZrf
SvNbaX8r4Ub6u7fw61pzg9Y8pvlThB/j+dXcHRU/O830mbW4XsJ1hJvHfp7G
Ce8s3EK4jvCl/B7Ch+hcXXX++3W+k4gN2jdIc6/qO/9Pa9twz2n8mNZt1Li+
9t2idZuFa2n8urb3db7rdUxLzbfU+Amd72J+H6631nURvkvnb6PjjtD+tsKv
6+8ozZ+v+Zd53jS/jea31v7WwmcLf6dzn6A1H+rzX9PWQbit8KUaj9V8a60/
XOvbaP1orpXmGmrNlvoOw4Vr8Kxqu4/7WcdcqLkemuuh9RcJ/665VzR3ahnf
jtcxi7RmX40v0vkrwhdyT2rtVzpuXezfnOvXU2t21fgAHd9Zx3fNfe0OF75N
+HThL7S+NZ+h47/UMR/H/k24X/prvrrOX1Xn+Z/WjxE+Qvhazf+o9VcIF8J9
hDcLnyX8rY6fq31nav3z+pzv+Xztm6x9TXWeA/X3eO07ivinYy4i/vBdtX5I
5vh/kPBjwrsJ76n1z2vfAK3fVXh34QeF+wj/xPOm8fda/4HWT9Lc7sLfkEM0
f4/mY+27QHiSxgO0bSe8rc7TQetz4dv0+b209ijhm4V30/x9PGMa76519YkX
wgO15g3t66Hx28Qwrgf3ArFR59hK3+Fczf/C/ab952i+h/Am4RO1ZoX+rfV0
vj0095DwlTrfaOGjiI069gWtn699v3BtiFna15r7UOuv1L5rhF/T+Rpr/EDF
+eZazR8gPJPYKjxX89sKD6749/5Ex6yMfc/x/TZoXRXhGdrmCffLfP3aaP9D
Wv+u9r2iuTe0bzvtu4B/P8+rxiM0f1PmZ+0N4Tu4Xpnv9beExwjfKdxd+Djh
p4RX6HzvkU+0rx65VXip8Arh3YQnZL6eJ2r8DL934djBZ/fXeAD3i/BcrpVw
f+GmwrOFRwmv0/lW6HxVIj9Pn2pbFfs32Ubjo7R+tfA2wkdqfHnm++NJcpWO
v4LfQ/hp4ZuE+3C/CT8jfIvwAl3PXYjNFceHbzQ/Q3iY5jsJH5U7VlYXvlZ4
iT7zVX3em9pXg5iR+/mbUHH8el74KZ59bdcTK3LH6mpa20/z/xN+RXhb4WuE
nxN+Umu30DZE61/PHa+mV1wfDNfnDdHcxcQ/jZ/V/KHCPwifofXf6vs+o/Fw
ne+kwufl/Ati54ezNF9buDG5SPMv6PhPNHc4OZlYRL4gPmv+Bs1fKdxM+FDh
mwt/b77/y7HzxVLuUY3f0r6aia8L12dh7HwwXOevq+++o85zrI7fvfC9xrUa
oPEeXENil/D1Gm+t77Cd8PXUZsIbdNyjwhs1P1n4A+FJ5E/h8cKdtP5Z4Vj4
ROEdtT0s/LuOv1jjxVo/VvhBfifud+E7eZ6476mfhGsJP6zjRwofmPtZ/Y2a
k3pU8zU5nn+L8InB1zcSPkH4Q83fQyzm3hY+LHfsSoQvE35L8yOoLfR5c4Xf
FB4uPEp4jvAa4WnCzwq/LXx47tiT6vjLyb/a/5Ku5UuUElxfff4OGt9Gncjz
r/mnNf+49l3FtReeKTxTOAiv1Pmf0PhqjSdq/ULhq4WHat1s4anCpwj35nOE
fxVeJHwjtbTwZuG3hW8SfoD7JXMtN1jrZxFvEt+rZxHjNTdS23E8e9r/dOHr
yPV8TGv6cg25D4Q7aPwkzz/Xm3pZ5zteOA2ux+/U/PTCNQS1xLfCU/k+ZS54
NHY8/VV4uvAjsfND3cK1DtfqCo3HZ651juJZEd5e599NeKKO24/fT5+/WHgn
ajHhOVp/mfBZ1ILCOxe+9lzLPhov1/r5wlsLX839mPvZ594fKLxJWwedYxwx
SHOrNH6SWK75SZpbLfyUcD9yFecTnii8Tnic8BP6nlOpZbRvGddI+F7hW4U/
KOur2cLbartN/5aZwrNi/+bNye0632ytHaS1U3S+mto3QfgScpnwozrfZGpJ
7lldgy+1fg6/p+bv1fzjmp+i+Zu1bym/oT7jQOEWGjfV/A4632TNXSp8p/C5
Or668IGJr2djHd8+do30s8ava/8fkXPiL8JvCv8ZuQb9lXpP58uoiakDdPxT
2jeNfxv5U2sfFp5ELBH+ROu+0rq5Gg/R3DStf0Tz98SuUT+l7tT33U+4mvbv
r/m3te4vzf2gfZu173NtH1EbR65Ha+l8O+i4gZF72JmZa53TddzMwvXE0Zo/
W8dcSC2o+arCl2rNSK6V9h0jfJ3mR2ncj3wsPIQYkbtuIN/1jt0P9Uxd79Gj
HZy53j+W89GfanyttmrCQ4lh+rfU1podOT/3bJnfjqLH1frPhNsJtxceRkwQ
HpT7tz1PnzWf66lzNNXag4QP4H7Q+u21foDW3K31bYXbCV8vfIvw9sI7CQ8S
vkd4vsYnafy3tqPJCTr/OI0vItaQv6gTteYO7bs39b3fQXiM8H3l9TlU+Hzh
yRq/RJ8TO0YTD+Zo+zlyDd0kddwkfr4Qu/6aqn1jNB6sfWvpqbP/Qm+0b+L8
sEl/q5G7yMFau7U+4y6NR2tNhV5F29jYNX2cO64SX1+M3Q+drfNtIdwkcTy9
P7gf3kd4z8LP1zUV5yBy0QOa313zQZ/VUPPThfcQzoUbCbcNflY36JijhT/K
XFteW+aLZZmfx7XCdwu3Dn7WeBapR9/R/FThyzV/l3Cb4FiwXvMduZ81P0X4
Ms2PFV4rfL9w/zL/VfT3OeHnY9fPz+l7PRy7hvmXvlH/njtjczJb5q4fIHCa
C8/UZ+0q/GDs7zBQ+CWd48fIPQM198Pa10Dj/bV/77K+uaLiHEgu3Fl4euzv
OEBrZ1GzR+7Z9tPxl/AbaH2qtS2oB8r4Tw68RevrCD8QO8b0Fx4mXEfrd9D6
Y8r66PKKawBqgXcq5hrOj81nHBJ8767W/nZaf6M+c5jmrmC99rUMfrY+1vgT
8j/fKfY9eqjO10v44ticRUuereB7e6PwQq0fofmhmr+EGJi6frqy7E/ptc5N
3d/AmRxCrxn82cs5v47vpTWbuVeFzyP/pa69GmrN1Irv51mRY/wbmisS39vc
48T0Njp+J7gOjRdTnybO9eSA13l+hd+ktyaGa1ybuK9x7dg5vApxQeMa2oZq
/LbOd6vG22WOF1tq3zxw7BhbK3EvTU9NTbCFtrkaV4+dM/7Wd36OXBc7p52Y
u/4mNi3R+WqkrlfWaN96eoPc+eex9P/zEff/lHIfz+8IYm3i670kd3zfOTO/
tDh3PqibOf78pc9/lvo/do7dRdsSjd+Ozb/UTB3rifkbNF6k42/R+M7UfEbn
3P0vffB75Dcd85bwDuRg/r2pew16jo81fke/5wka/1TyCYuEjxf+seRv3hQ+
jnq87GffzB3bL0idT6i/9Sf6XFsXrf2YHlrzf6TmD78Pvh/PL+uxbnwf+n9t
vfh+wdwBHEIvYjUcQOQallqWHpRelJ7sN332R3BuOt/vZb8J5wb3Ro32c26O
Eq6ylfCPuTkyuLIOPCPCtXPXH9Qhb2nuotS9Bz3IMK6Zvl8X8qXw8cKDqe80
bqbxozyvxEFyvda0o3dIfG7WNNea67S+o8ZNNX5E628VPk34GOHnhFfp+58q
fHRZv91CvSp8pPAM4Wcr7p3poduS64Nz8ZCyPoWPoJ+hR6qnfbfRr2p8rMbP
a36g8JHEM2Kb8NlsGl+gfd/oXO/o338H8Sg1f10rd31GnfYm30e4hb7Du3AO
hX9nfm84iMXwNMKXx+ZslmibmzmXna3vdWF5Pa+IzXG/p+0m4eGxawhi1F2p
+Qo4xlUV37fcv3CEK7T1Fb4mNifzobaxqZ9nOJuVFcdB4uHo2PXD0orr2+tj
1y83p37eqDnWaftI3yuPnUOJecOC+YM5qfubsdq3t/Besftt6izqrW8j99i3
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
Qudn353BHjB0fT7zDuERwdoTmhba1qna6sXuWahXeX7ROuCAqG/xGKJTccxI
7sXg2hlObnRufv7F1PUaWttXwdx7j8jeYDQctBx6VK4//ji0LWqEQcGaBNoE
7+ScnJuzhLtE/4DvvCLYq4RGjFbM88O1w7PQIremS2/LOzCTMnP2vSN7PsiX
e+XWDuip6a0PC6790CcWCB8RXMvB38F/w4fDK8Av/B2sD6xP7F/hesHhw+XT
E+Ofr59bW5iufUsz8/PU8dTzVXNr0u8m5vDQqsdwzSN7BNYF+6/xM1KT8L4B
/my85njseB8CPpB3fdDQ0dLhR4lVaOxo7XsEc7PEALzPeFrh6eDrugZ7pNFx
0XNPDfZft4lcM54d7D9vHdkTRH+BP7h+5Brw9GD/ML0NnjP6STzV8ITUmN2D
PdfwwnyH04I9t9SZ1JvdgjkqdHP0c7grNDO0M2reUzS/e/B3I6bh5YbvpDdB
0+d6nRfsNUDjQ9uHP6Z3p2fn/RH4U7QNPA14G/Bb4RVD88bvhL8Krxg1IP4l
/OhtI9fQPYP5WLQSNFu0WzhvuG88AXgD0NzQ3tDr8J7DsaHro+/DvcHpodOj
18P1dcrtjcFjSb93fPC9gN6FnnJscK8GxwLXgh4GrwW/lebuCekN0XjJ1wcE
36twVPQvRwnfFZkjGJlbg4Erw4NTI3f+mBrZ81WP/idYe4CzG1Aez2dN0LZt
bv0N3g/+LxE+Mng8IrI+h2aHdocHIdCfBWtPvGNxU27O6vnUHkK4rJ8yc11o
3tQfVbS+acWcB/k+Dubi0OypV/8XXFvjeRwP9xTKXi+yHsjnUZuhD75bPr/D
InOO9G9wjPgc8DvAPcIx4rPAbwH3yPPNvwWOk34NT9BOqd9RwytEzV839ftx
Xcp8hdcNz9sucFG6l3+q+HripVuU2buKZ6l6bn1teWLPL/cLflq8BfRE+N3Q
0+Bx4HOq0Y8Hj/kNl+hcr2qrVbEHJMvNMb6V2jO5qaypJ6X2RAwtrxdaDxwB
/QgaHlwtnqrtcusB10TmSNEnDgyObXCe9MfoMyMjc6roI+iHqxJrEtz/aLxw
s3hU8vL34NpTIw8v7w/uZTiLEbnzCbERj1/d3DX+lNQeEGp/8h1edjwP++bm
NF9I/Y4h8RiOdEFqTzncacvcWusrxKDMGiFaIe+E/iNcCX73BA8I/Qzvg6FF
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
          "]], Polygon3DBox[CompressedData["
1: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
LTlLcg1z1pnjHeXK/Dex/wPJYQPM
          "]], 
         Polygon3DBox[{{1578, 854, 1111, 2041, 1445, 1446}, {1577, 853, 1110, 
          2040, 1442, 1443}, {1997, 872, 744, 743, 1183, 1801}, {1579, 855, 
          1112, 2042, 1447, 1448}, {1451, 1450, 2047, 1117, 1118, 2048}, {
          1448, 1447, 2043, 1113, 1114, 2044}, {1462, 1461, 2063, 1148, 1149, 
          2064}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVlEUBuD1lZqplSOH2qd2FR3oVOdCjoIGfY7yUmlqTrwRVIh4JSLC
hMCBUE2aFig1U0eihOWlvOUfiP5A4LNzsHjetdh7n30OJ9v2+HZfJiLmVceZ
iJRzzAq5/IjSNGcF+1jHITZxnC08Lohos75VXjwXMWB/v/4B31nTbT4oPzfr
4hezEbMyeVWelNc4x01+SGfyM/9yhc3O3bC/x57v+ntc1z9i+dmIH2bf9BXy
lnyZ28xyh5XcZRV/sppX1C/5Kvd4jfu8zgPe4CFv8oj17lLveb/lO/ITecsz
e3ls1s4GVex7bOr/WbPMP/zEI75P9+Qblnqnt/ZPyEvykL3T+m4Om301eyZf
UA/Vkn1d5iEvyDnxNW9xjI0cYC17WM6P7lLnzPv2XNK3slbfyTl10axGP5ue
k85jCV+l9+BLFvEFz3OGhZzipHLFmGBB+h+Yn+7CPI7Sp4tDzU7m/7XjrgVP
he3M6f92Ah1rSxE=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1370, 1699, 811, 1979, 1700, 2085, 1548, 1371, 2086, 1549, 
       1372, 2008, 2087, 1550, 1373, 2009, 2088, 1701, 1551, 1374, 2010, 2089,
        1702, 1552, 1375, 929, 1703, 1981, 2180, 1376, 1622, 1704, 2215, 1553,
        1377, 2090, 1554, 1378, 1705, 2091, 1555, 1870, 2028, 2092, 1556, 
       1871, 2029, 2093, 1557, 1872, 2030, 2094, 1558, 1873, 2256, 1706, 1559,
        1707}], 
      Line3DBox[{1380, 1982, 2133, 1379, 819, 1381, 2095, 1560, 1382, 2011, 
       2096, 1561, 1383, 2012, 2097, 1708, 1562, 1384, 2181, 1623, 1709, 1563,
        1385, 2183, 1624, 1710, 1983, 2182, 1386, 1625, 1711, 1984, 2184, 
       1387, 1712, 2098, 1564, 1874, 1713, 2099, 1565, 1875, 2031, 2100, 1566,
        1876, 2032, 2101, 1567, 1877, 2257, 1714, 1568, 1878, 2258, 1715, 
       1569, 1388}], 
      Line3DBox[{1390, 1985, 2134, 1389, 1986, 2135, 1391, 827, 1392, 2013, 
       2102, 1570, 1393, 2185, 1626, 1716, 1571, 1394, 2186, 1627, 1718, 1572,
        1395, 2188, 1628, 1720, 1987, 2187, 1396, 1629, 1723, 1988, 2189, 
       1722, 1972, 1630, 1954, 1989, 2190, 1879, 1975, 1725, 1965, 831, 1880, 
       2033, 2103, 1573, 1881, 2259, 1726, 1574, 1882, 2260, 1727, 1575, 1883,
        2261, 1728, 1576, 1397}], 
      Line3DBox[{1399, 1990, 2136, 1398, 1991, 2137, 1400, 1729, 1730, 2216, 
       1401, 952, 1631, 1402, 2191, 1632, 1717, 1633, 1403, 2192, 1634, 1719, 
       1635, 1404, 2193, 1636, 1721, 1637, 2217, 1405, 1638, 1724, 1639, 2218,
        1406, 1640, 1955, 1641, 2288, 1956, 1407, 1642, 1966, 1643, 2219, 
       1408, 2014, 2138, 1644, 1409, 2220, 1737, 1738, 1410, 2221, 1739, 1740,
        1411, 2222, 1741, 1742, 1412}], 
      Line3DBox[{1414, 1743, 1744, 2223, 1413, 1747, 1748, 2225, 1415, 1731, 
       1884, 2139, 2034, 1416, 2035, 2262, 1885, 1732, 1417, 966, 1733, 1645, 
       1418, 2194, 1646, 1734, 1647, 1419, 2195, 1648, 1735, 1649, 2226, 1420,
        1650, 1736, 1651, 2229, 1421, 1652, 1957, 1653, 2230, 1422, 1654, 
       1958, 2140, 2015, 1423, 2016, 2141, 1655, 1424, 1104, 1756, 1425, 2231,
        1757, 1758, 1426, 2232, 1759, 1760, 1427}], 
      Line3DBox[{1441, 1777, 1776, 2233, 1440, 1775, 1126, 1439, 1774, 2147, 
       2052, 1438, 1773, 2146, 2051, 1437, 2050, 2145, 1772, 1436, 2049, 2144,
        1771, 1435, 2268, 1770, 1769, 1434, 2227, 1755, 1892, 1754, 2228, 
       1433, 1753, 1891, 1094, 1432, 1752, 1890, 2264, 2039, 1431, 1751, 1889,
        2263, 2038, 1430, 2037, 2143, 1888, 1750, 1429, 2036, 2142, 1887, 
       1749, 1428, 2224, 1746, 1886, 1745, 1761}], 
      Line3DBox[{1444, 1948, 1949, 1899, 2269, 1577, 1443, 1763, 1900, 2270, 
       1578, 1446, 1765, 1901, 2271, 1579, 1448, 2044, 2104, 1902, 1580, 1937,
        2046, 2105, 1903, 1581, 1451, 2048, 2106, 1582, 1453, 2107, 857, 1455,
        2108, 1583, 1457, 1781, 2109, 1584, 1904, 1783, 1906, 2272, 1585, 
       1905, 2058, 2110, 1908, 1586, 1907, 2060, 2111, 1909, 1587, 1462, 2064,
        2112, 1910, 1588, 1464, 2066, 2113, 1911, 1971, 1589, 1980}], 
      Line3DBox[{1465, 1950, 1951, 1936, 1788, 2235, 1463, 1787, 1935, 2284, 
       2063, 1461, 1786, 1934, 2283, 2059, 1460, 1784, 1933, 2282, 2057, 1459,
        2056, 2154, 1932, 1782, 1458, 2055, 2153, 1780, 1456, 2152, 1992, 
       1454, 2151, 856, 1452, 1768, 1898, 2267, 2047, 1450, 1767, 1897, 2266, 
       2045, 1449, 1766, 1896, 2265, 2043, 1447, 2042, 2150, 1895, 1764, 1445,
        2041, 2149, 1894, 1762, 1442, 2040, 2148, 1893, 1968, 1967, 1976}], 
      Line3DBox[{1467, 1952, 1953, 1938, 1993, 2234, 1466, 1778, 1939, 2285, 
       1590, 1468, 1779, 1940, 2286, 1591, 1790, 2053, 2114, 1941, 1592, 1791,
        2054, 2115, 1942, 1593, 1912, 2067, 2116, 1594, 1469, 2117, 1994, 
       2155, 1470, 866, 1471, 1792, 1913, 2273, 1595, 1472, 1785, 1914, 2274, 
       1596, 1943, 2061, 2118, 1915, 1597, 1473, 2062, 2119, 1916, 1598, 1474,
        2065, 2120, 1917, 1599, 1475, 2236, 1789, 1918, 1969, 1600, 1977}], 
      Line3DBox[{1477, 1797, 1995, 2239, 1476, 1798, 1996, 2240, 1919, 1799, 
       2121, 1601, 1920, 2070, 2122, 1602, 1921, 2071, 2123, 1603, 1922, 2275,
        1800, 1604, 1923, 2276, 1801, 1997, 2241, 1478, 1802, 1803, 1998, 
       2242, 1479, 1793, 1804, 874, 1480, 1794, 1805, 2243, 1605, 1944, 2068, 
       2124, 1924, 1606, 1945, 2069, 2125, 1925, 1607, 1481, 2237, 1795, 1926,
        1608, 1482, 2238, 1796, 1927, 1609, 1808}], 
      Line3DBox[{1483, 1810, 1999, 2246, 1928, 1811, 2000, 2247, 1929, 1812, 
       2001, 2248, 1813, 2017, 2126, 1610, 1814, 2249, 1656, 1959, 1611, 1815,
        2250, 1657, 1961, 1612, 1816, 2251, 1658, 1818, 2002, 2196, 1817, 
       1659, 1820, 2003, 2197, 1484, 1660, 1822, 2004, 2198, 1485, 1661, 1824,
        882, 1946, 2072, 2127, 1826, 1613, 1947, 2287, 1806, 1930, 1614, 1486,
        2244, 1807, 1615, 1487, 2245, 1809, 1616, 1488}], 
      Line3DBox[{1490, 1830, 1831, 2277, 1489, 1832, 1833, 2278, 1491, 1834, 
       1835, 2253, 1492, 2199, 1662, 1663, 1493, 2200, 1664, 1960, 1665, 1973,
        1494, 2201, 1666, 1962, 1667, 1974, 1495, 2202, 1668, 1819, 1669, 
       2254, 1496, 1670, 1821, 1671, 2203, 1497, 1672, 1823, 1673, 2204, 1498,
        1674, 1825, 1675, 2205, 1499, 1001, 1827, 1676, 1500, 2252, 1828, 
       1931, 1829, 1501, 2128, 1617, 1502, 2129, 1618, 1503}], 
      Line3DBox[{1505, 1840, 1841, 2279, 1504, 1842, 1843, 2280, 1506, 1844, 
       2156, 2073, 1507, 2074, 2157, 1845, 1508, 1221, 1970, 1846, 1978, 1509,
        2206, 1677, 1963, 1678, 1964, 1510, 2208, 1679, 1836, 1680, 2207, 
       1511, 1681, 1837, 1682, 2209, 1512, 1683, 1838, 1684, 2210, 1513, 1685,
        1839, 2158, 2018, 1514, 2019, 2159, 1686, 1515, 899, 1516, 2130, 1619,
        1517, 2131, 1620, 1518}], 
      Line3DBox[{1520, 1851, 1852, 2281, 1519, 1853, 2160, 2075, 1521, 1854, 
       2161, 2076, 1522, 2077, 2162, 1855, 1523, 2078, 2163, 1856, 1524, 1233,
        1857, 1525, 2212, 1687, 1847, 1688, 2211, 1526, 1689, 1848, 1690, 
       2213, 1527, 1691, 1849, 2164, 2020, 1528, 1692, 1850, 2165, 2021, 1529,
        2022, 2166, 1693, 1530, 2005, 2167, 1531, 910, 1532, 2132, 1621, 
       1533}], Line3DBox[{1547, 1869, 1245, 1546, 1868, 2179, 2084, 1545, 
       2178, 2007, 1544, 1698, 2177, 2027, 1543, 2026, 2176, 1861, 1697, 1542,
        2025, 2175, 1860, 1696, 1541, 2024, 2174, 1859, 1695, 1540, 2214, 
       1694, 1858, 2255, 2023, 1539, 2173, 2006, 1538, 1867, 2172, 2083, 1537,
        1866, 2171, 2082, 1536, 2081, 2170, 1865, 1535, 2080, 2169, 1863, 
       1534, 2079, 2168, 1862, 1864}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{642, 813, 2086, 643, 820, 2095, 667, 827, 679, 1067, 2216, 
       834, 691, 2139, 1068, 1331, 841, 702, 2143, 1089, 1334, 848, 713, 2150,
        1112, 855, 2271, 721, 1132, 1156, 863, 2286, 730, 1174, 1300, 871, 
       2121, 739, 1195, 1196, 2248, 878, 750, 1208, 2253, 1209, 885, 760, 
       2156, 1218, 1316, 894, 772, 2161, 1228, 1321, 904, 786, 2170, 1238, 
       1327, 914, 800}], 
      Line3DBox[{644, 921, 922, 2087, 645, 931, 932, 2096, 668, 941, 942, 
       2102, 680, 952, 953, 1264, 2262, 1069, 1332, 1070, 1268, 2263, 1090, 
       1335, 1091, 1275, 2265, 1113, 1114, 2104, 1284, 1133, 1157, 1134, 2114,
        1342, 1175, 1301, 1176, 2122, 740, 978, 1197, 979, 2126, 751, 990, 
       2199, 1210, 991, 761, 2157, 1219, 1317, 1220, 773, 2162, 1229, 1322, 
       1230, 787, 2171, 1239, 1328, 1240, 801}], 
      Line3DBox[{646, 923, 924, 2088, 1030, 933, 934, 2097, 1041, 943, 2185, 
       944, 1054, 954, 2191, 955, 1071, 966, 1333, 967, 1269, 2264, 1092, 
       1336, 1093, 1276, 2266, 1115, 1341, 1116, 2105, 1285, 1135, 1158, 1136,
        2115, 1343, 1177, 1302, 1178, 2123, 741, 980, 1198, 2249, 981, 1356, 
       992, 2200, 1211, 993, 1359, 1221, 1318, 1222, 774, 2163, 1231, 1323, 
       1232, 788, 2172, 1241, 1329, 1242, 802}], 
      Line3DBox[{647, 925, 926, 2089, 1031, 935, 2181, 936, 1042, 945, 2186, 
       946, 1055, 956, 2192, 957, 1072, 968, 2194, 969, 1270, 1094, 1095, 
       1277, 2267, 1117, 1118, 2106, 722, 1159, 1294, 1160, 2116, 731, 1179, 
       1303, 2275, 1180, 742, 982, 1199, 2250, 983, 1357, 994, 2201, 1212, 
       1361, 1360, 1358, 1003, 2206, 1223, 1004, 775, 1233, 1324, 1234, 789, 
       2173, 915, 803}], 
      Line3DBox[{648, 927, 929, 1032, 937, 2183, 939, 1043, 947, 2188, 949, 
       1056, 958, 2193, 960, 1074, 970, 2195, 972, 1271, 1097, 2228, 1099, 
       714, 856, 2107, 723, 864, 2117, 732, 1181, 1304, 2276, 1183, 743, 984, 
       1200, 2251, 986, 1202, 995, 2202, 1213, 997, 1215, 1005, 2208, 1224, 
       1007, 1225, 1013, 2212, 1015, 1235, 2255, 1021, 1023, 804}], 
      Line3DBox[{651, 930, 815, 2215, 652, 940, 2184, 822, 670, 950, 1057, 
       2189, 829, 682, 961, 2218, 1075, 836, 693, 973, 2229, 1100, 843, 704, 
       1119, 2268, 1278, 850, 716, 2152, 858, 2108, 725, 866, 734, 1184, 2242,
        873, 745, 987, 2197, 880, 753, 998, 2203, 887, 763, 1008, 2209, 896, 
       777, 1016, 2213, 906, 791, 2174, 1024, 917, 806}], 
      Line3DBox[{653, 816, 2090, 654, 1044, 1252, 823, 2098, 671, 951, 1258, 
       2190, 830, 683, 1355, 962, 2288, 1076, 837, 694, 974, 2230, 1101, 844, 
       705, 2144, 1120, 1279, 851, 717, 2153, 1137, 1286, 859, 2109, 726, 
       1161, 867, 2273, 735, 1162, 874, 746, 988, 2198, 881, 754, 999, 2204, 
       888, 764, 1009, 2210, 897, 778, 2164, 1017, 907, 792, 2175, 1025, 918, 
       807}], Line3DBox[{655, 1033, 1247, 817, 2091, 656, 1045, 1253, 824, 
       2099, 672, 1058, 1259, 831, 684, 963, 2219, 1077, 838, 695, 2140, 975, 
       1102, 845, 706, 2145, 1121, 1280, 852, 718, 2154, 1138, 1287, 860, 
       2272, 727, 1141, 1344, 868, 2274, 736, 1163, 1346, 875, 2243, 747, 989,
        1349, 882, 755, 1000, 2205, 889, 765, 2158, 1010, 898, 779, 2165, 
       1018, 908, 793, 2176, 1026, 919, 808}], 
      Line3DBox[{657, 1034, 1248, 1035, 2092, 658, 1046, 1254, 1047, 2100, 
       673, 1059, 1260, 1060, 2103, 685, 2138, 964, 1078, 965, 696, 2141, 976,
        1103, 977, 707, 2146, 1122, 1281, 1123, 1337, 2282, 1139, 1288, 1140, 
       2110, 1290, 1144, 1345, 1145, 2118, 1295, 1164, 1347, 1165, 2124, 1305,
        1185, 1350, 1186, 2127, 1203, 1001, 1002, 766, 2159, 1011, 1012, 780, 
       2166, 1019, 1020, 794, 2177, 1027, 1028, 809}], 
      Line3DBox[{659, 1036, 1249, 1037, 2093, 660, 1048, 1255, 1049, 2101, 
       674, 1061, 1261, 2259, 1062, 686, 1079, 2220, 1265, 1080, 697, 1104, 
       1272, 1105, 708, 2147, 1124, 1282, 1125, 1338, 2283, 1142, 1289, 1143, 
       2111, 1291, 1146, 1147, 2119, 1296, 1166, 1348, 1167, 2125, 1306, 1187,
        1351, 2287, 1188, 1311, 1204, 2252, 1205, 767, 899, 781, 2167, 909, 
       795, 2178, 920, 810}], 
      Line3DBox[{661, 1038, 1250, 1039, 2094, 662, 1050, 1256, 2257, 1051, 
       675, 1063, 1262, 2260, 1064, 687, 1081, 2221, 1266, 1082, 698, 1106, 
       2231, 1273, 1107, 709, 1126, 1283, 1127, 1339, 2284, 1148, 1149, 2112, 
       1292, 1150, 1151, 2120, 1297, 1168, 2237, 1169, 1307, 1189, 2244, 1190,
        756, 890, 2128, 768, 900, 2130, 782, 910, 796, 2179, 1243, 1244, 
       1330}], Line3DBox[{663, 1352, 1353, 1251, 2256, 1040, 664, 1052, 1257, 
       2258, 1053, 676, 1065, 1263, 2261, 1066, 688, 1083, 2222, 1267, 1084, 
       699, 1108, 2232, 1274, 1109, 710, 1128, 2233, 1129, 1340, 1152, 2235, 
       1153, 2113, 1293, 1154, 2236, 1155, 1298, 1170, 2238, 1171, 1308, 1191,
        2245, 1192, 757, 891, 2129, 769, 901, 2131, 783, 911, 2132, 797, 1245,
        1362, 1364, 1363, 1365}], 
      Line3DBox[{798, 912, 1354, 1325, 1236, 2168, 784, 902, 1319, 2281, 1226,
        770, 892, 1314, 2279, 1216, 758, 883, 1312, 2277, 1206, 748, 876, 
       2246, 1309, 1193, 737, 869, 2239, 1172, 728, 861, 2234, 1130, 719, 
       2269, 853, 1110, 2148, 711, 846, 2224, 1086, 700, 839, 2223, 1085, 689,
        832, 2136, 677, 825, 2134, 665, 818, 2133, 640, 811, 1366, 1368, 1367,
        1369}], 
      Line3DBox[{799, 913, 1326, 1237, 2169, 785, 903, 1320, 1227, 2160, 771, 
       893, 1315, 2280, 1217, 759, 884, 1313, 2278, 1207, 749, 877, 2247, 
       1310, 1194, 738, 870, 2240, 1299, 1173, 729, 2285, 862, 1131, 720, 
       2270, 854, 1111, 2149, 712, 847, 1088, 2142, 701, 840, 2225, 1087, 690,
        833, 2137, 678, 826, 2135, 666, 819, 641, 2085, 812, 1029, 1246}], 
      Line3DBox[{805, 916, 2214, 1022, 790, 905, 2211, 1014, 776, 895, 2207, 
       1006, 762, 886, 1214, 2254, 996, 752, 879, 2196, 1201, 985, 744, 872, 
       2241, 1182, 733, 865, 2155, 724, 857, 2151, 715, 849, 2227, 1098, 703, 
       842, 1096, 2226, 971, 692, 835, 1073, 2217, 959, 681, 828, 2187, 948, 
       669, 821, 2182, 938, 650, 814, 2180, 928, 649}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
sexRE16L1O4yasFys8WKj1tIT/HBZbBjr11si2DZsRTHE5EI2LHpDL9KBMOv
0s/wqySzyQcYeYrPuLoMlp/uvnFEA366HLV4Pfz0tLgOq9EjqzOsh1YsTLXq
o+aXPNCs1XxPHtxLi4W/P8X9hSX8/Y7wtlT4+51zo2Z0zy2grutlqgz+1UdF
u3jOF02oJLoxr80QN7A8XU0hbmC3r4AfcYMbfkHONVOrqcvLIg/km/dSd5fW
hV9g2cs6Hcv1EQ9ZvtvZ8efEXsLdm6OBeMhyw+e7Ec+5Hu1nB33L7+8uDX2b
wPC32DL8LeoMfwvFxuuiwch7J7VXIj+rpNf6BflZ/4VzXyI/m5/eOwP53IcV
pq+Qz11z4WkO8rn/t/43RuNP/W+f65PJyAsX8upeR154Fd8zfeSFay8btN+7
2kTyN/I/6aPKKC0fPb8dgl3k2M+JEprKH8glmXPvTjs1Ued1DUTOm3cQH0Fd
vsDVhcRMTTjDcWcHlfwj4xp3MW2vPvpf9urD2oaTmB85En4C8SI/uffqmJ9i
hcJqxMP3V2cLPCc9lIAKRwLi4bmdGqOIOxWczOxE3OnJ7f5IxJ2I56U3w1of
qPbG3dMT1nRT1e+u/15l9p5oFGc4IX7leZiHA/Gr94MeyYhfad4e3tKc3UQV
D79U+nKik3rFLX42fLSC5O8J3Ie43LsnpbmByh3Esse1CnE5r/4daYgresgE
fNgd00i6D9w8j7iiu8TpN4jX1bwRWxtY20G2No9bj3jd4V8yyGtQZlUnaP/x
dnGvPe6po5Nnz0a80SeoST36eSOxqt+4DfHGAIYfJpfhh5nM8MM8YOTpbLwx
TyU58xBXtLntIIS4os9M2YuIK76OPtCEuPTpwPpqw9gakqvg7om4dEiFVOvF
qwaaKU8F3BGflKh+tBzxSbtlV78J+SZR1XUtiG+Tn3PX2XP/fzwzkRp/6u5L
KGVnxD8bRWzjEf9sWj41D/FPtnjp3/H/nY6/JadNCCJjHqaIq5OB2HYzxNXD
nApjZO6WkwVDr1KdnUqo16fuzgq17SMrZ5drXbXLJZLd0iMTU+op7q6JokYV
LH939cev2b5BVHDjPe6OsRZKceMr7aHBTkL+xc7/0nXUEeer17DhMOKlPybN
l8L5Klm7bjvyF/fzujR6TNqpu2vmliB/sSZcshLrKGLvpYu4a0/vY32s4831
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
N+DvsPlNaX/8puav8rSf+6hyTgTqPiJ8+kvh56bMf7Ef/mDtA/VD8Ae5DheG
wB/kLihr6WL5lZFVIWrwK89dyJgDv7Ivtn4vyz/VHHwoJA//tGnDqAr8U9V/
4TvSYeT3Gfk7Rr5TLRLngsTZiNJ4pNOXxebiXGjHeWnDv/5YfY72rw/uaHwI
//r8OMcYx80thFtu5sYtT5qoHTyCltUWzURMOyMafvqdpacOwU8fd2W+Ivz0
KjkZOh6ydMYmjglGZZRYNQcdD4m78yoKcQNn/xFtxA18vi44grjBpC8Zki57
9DS1nycdQvwhS5OjHPGHHWpJ/YhjeAfspuMYkdHn2xDH4GB4jVaw8RqNY5Mb
MHLf+VdkEPcT2hu6ATgxcZX1XxH3M8u+HIs4zLCBDh2HSaxY24M4zD4zSeh/
snncYxpvNhpVZQH9f99Xmo7nWGwfNEQ8Jzdx8STEc3wu3opBHCwnpfYx6tRC
8n3WIg52qn6/JXB9CR12vYgvLZmVtxnxpfDC4mjEo3g/t9HxqP3jnH9sDy4m
lQV7NBDXOnO37hTiWlxr1boQ1/rG8BEtYuMjYucpamLkF+9vG484oWy9cgnw
e3xJu00QJ/zYOTaKuFyT7z4FxOUC605qIi6Xbcl/Df3R2SfhCpxh94+0EfRn
h+TtPsTTHlq2I55G1kac9kY8jXei4jnEzZhxEWVmXD3LN0kA5ymySQ84TxKX
NOMacJ7f71QPSde1kXWZH7juTGujFlYLVEqpVPxrPDAhuU191+ZqYnXSTfFz
aC/1ImDXwyVOpaTIh2eJ9+Y3JHVKkYOkQz8ldGXb53DlIjLqujDk2aRYMry2
SS/FcIC6vjv6rHJCAXFQkTW1Od5BlsVFCL/wa6TOchRtG1tRRxzTE50s7ZrJ
xk6ua3NftVMnHlyL0nn77/G3j1YGXQ6HC8nMiBPx3P59VOhzOQXzuRVk0pU1
pf67Ishq8YNKh171U0l8VwZ8j74jHcPr5t/2eEkJlKacHerrp9rm1S2t5y0m
aVP3ReMcGYoHGuIc6fdePYxzpLekZUckdy050nlr8p3qDuqrfd29SPdG8vJf
4lfU/YnzflvcIzfkuEdLLvdRP85Ky9ldqyGzD0oMfrPIopS8j61a0NtH+Vtn
Nm1OqyBnX276WmBWRtm4BMksN++jCnnblF7+9Y4YsfEajTK8RlfVDLyhPwd1
PkVDfzoE8ZtDfw7Fj1V/Tqiilt7acb1yWw8lpfphgpZpDXkgoFszWPGR+pYf
Yz5BuZuScObvufK7nDiz8RFZM3xEwiU7Y1DvcLxRoJSudwhSXoF6hwtancvG
YqOI1px9s1AfUaKSGI/6CCc+zXWop7j/2GMz6inaxs+n6ynitpu9x/3o8cO+
FPfjnQOeIbgfdVf5qs2e10xllmRkpO1pp0ocBi1+9dSSjLt3C7Qt26hfqpbK
k3+2UhsFODRvH6kiSWw8QoMMj1Ba/bfrqE9RXLGwHvUpTy6pPkF9yrwDk7lQ
z2I8yGGBepYc2zJ51LNsExutKlNIIlPPRlzNVs2h3ul9Ext2GiCXdywI6IiO
on5+vf9VwK2csp4ScqjuaD/5VvzljlFJCZV1UkT6Vf0HKmfvnN5ZAz3k+b/w
wYap3hWfOLmV6hCRexqi1ECVbRNdcv1EC6mexPWxrLCD0hKWW/DzUT11M2i8
3pX3LH3F8P8MsfH/9KQIB6Ke6PerYGGpy5szJjVGW6Oe6NyiTbK+Y7nU6RKL
t7fKX1LjzpZXbjUeIK0uW83hF+iu6hKHXxCRz9cDv+CPfyfF5vf5h8kdgt/R
5SmY9ZLld3S+jImA38HxL/w/8aL+r1BvdXq25nrHtG2aVbU8mai3slK0X476
rPf6kZfPbdmiee+9oRbqs9qzr91APdeiOzHCjpybNfWMV6ehniu4sebHDVb/
7+ZFLrzN6v+xi3er0P8/vD3PGd6e/Qxvj5fvLQ5t03bqkOMpB9SpKa0du4B6
qA8XhiRRP3X15P5R1LW1dnzSR/0U14rPdB3cQX6xR6iDM5ovYY16qwyJk6WY
f45Tp9Zh/s/0ja3B/Ps3XhHAelXxfa3AegV5uSzFesmz8ZH+sdsNd0kbYT+c
a3ysg/0QW1bbhf2wYfrNhnbW/rEfmjJhMmv/vF44ZIn9s9d1xfhy1n7jHz4d
iv32pvTaTOy3M2y8PcMMb8+yMa0W1CeaVT0cRX2iVoDSVtQnCvnM5EU949aT
kRKoZ5x5f84x1DOurF8Zg/pH4VtTc+n6x1/TxqP+UeSn5kuco6hjXLo4R4py
S+hzdD9MQQ7nznEk9C3OncVczoM4d2tmT49EfajEQBVdH/rrpeRW1Ieqcd1I
gd4w0D1jC70xfb17J/TGBM6GFOgZg/O8d6Bnnh7cyQ09YzWgWg09Ju15XR56
bPG3pfLQY1df+WZB79n/Za4FvSd5aagWek8q8rDjGEtPRtRe/wk9qZynLAE9
qcFmF5UxdtFkAZmD0MNrHynSenj1pPu3oYeDPvK8vsXS50FFFuehz4cHp8hD
n8t+mG8WwNL/tfciaP0/s/5lN/T/LO7nvCdY98Vjhaw43BeXDPukcV9wsdkn
qxn7ZNPp8+dwH+1TGfbGffTU7XAI7qOnydr0/dW2IFUU91fmujsbcX8tXDZv
0XPWfeek3UDfdzHJ7+xx380ycDDA/Wgua0Xfj5ZJEa24H/tPHdXBfRqS1KqA
+7S5ZvI93KeD/2JXvODy/I77WijDmwf3dXTZmRLc1zkNclNwv7+elYy6deJc
4+aN+12nUZqCHpbisKpk6WFiNW7FI+jhF0w+4ggbz/xO9dIV8FPOHGpHnJZI
PJ+qAz9FsPHbNJyXl1KtL1jnhdx3yFbFebnHxov+J+79MCneDOcl/cJ+OdZ5
IT09pwZwXu6w8f9YM/w/PhFSPDjvM+1UtqL+0Wz6LA+c930Nm2Rw3vdsHa5j
nXdK38R0Hc57eiHvL5z3CrMqT9RXXgkussF5f7zEaDX04VMXz3ksfUgKCgI+
QR/OZHh7BNl4e5pn13jjHrn/6fcI6lKlJcfoutSQqS770Y5kn+getCMkW9OJ
dv7wVJ9ji2v52lvcwHhdK/YSjPeygWs7xqvJxEO+scVJlFYsnoH55BxTfYP5
fH+4YhHmkz9Pphtx8iGrxfATib9tqzrm/wKbf/3H717Ca1yC9V0xuqgG6ztW
JxOI9TXZ1m8N/GSIs8Jq4Cd5f9f8An4y7L6WoWNUPPk5b1lMh8EA5af2Y6Ru
WQHL/lO6CHnd3am0vOCo9xfIV7Dhmv7w54iWF5Yib/WuZ/Mw6r5jhX8lIG+V
3hslgrzV0GP+PNSJO7fav0Le6tYDG0vkGdXnc21FHf3+dfM0kGdU3DfhDvKS
EQ4Tf6GO/vbs0x+Ql/zDWxLP8JZIM7wlGYw8jpHLMfJq5Zg7sDNvj1jqs84d
ee6hexzn7mdSgDnmIaLAGfNA2q1KaByp06VpehjvAsHHGC955zbhK8bbqy9n
hTqp6et00tYtHCCCx0roOqlLF4JUcK7rfUxwromXtxptx5LcoAdo/3qDLXCq
RERKj55nj/dml9F+3JN70Wj/quQ5ep6nmC9yRfuJtzVQh0XaLw+1of2dm9Xi
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
3Lq4djJeaK1bcMG5dJDID9nTvJYYIlbs3W/1Jek/i17rb4DvClwaMr2A00+k
BzAPwXftxf+lV+P/0hX4vzS1zzOZ0ueZiPs8i3Cf5xSl3zIL91vKD8Yy4b1r
NYPmgDyrQ5p84b3eZpOrYV2DX6RPrhNh8w2CFHKm/N8exf+3d2B5Vr6Xp0gp
T5Z96NgsUp7XoheagjyDyhcp5Pmm94WZMEBC6EWM72vN70No5pJNKCm3zAPs
QtDj3JUDj0CPwoS+FNCjVumYDPCwpV2qwIP1Ppt0wMOJbfdPgjx9zvY/A3ny
DGMU8qzQrnmXTcp/QEN0DeR/+2JSLMhf9RP/yWk0TzWYyxvAc3mVeC4v+3rw
n6BfSzXhItDvonO7S0C/y06N6wIeTCZc6wAPTW4COeDBcGa0DexrtQMjFuyL
6yuig31FU+53iMX3O1yh3L+g5MOh3tep/H9L5p8nP5zHUcPzOGTe2/axOZed
rEeOGur1ROQD7++7rv9G3Ji/4+eRv7eQ+wx4fTj3YYjnPgLLzyDThgaCK//u
zuWScaLZxiqIu7ED1UkOcoYm2sgKi58RSx8ntoyF5NEkj5GE0lcjxH01+bgf
hkHphzGn73ydR+qdX5jlAHqXNu92Ar0nU/pSLHFfyvAfx/dB/nk3bReDzD/R
S92tayD/dM29UOGVJCbcXTW4s6ruIXtN3oiNoRy91PCn9SWJEYNpnztSdY/Y
cF8SwyTXM7kRCe/r0+OLyPq09msz3yaoT7O23F0P9SxZXyeQ9WxtkY+xA9Sz
R06n3cb17w6y/q29aeMpgfp32blNVe/r9M3zyDrdOtWtyhv8icuuZimcZyY9
MgHOc8S2aRDO4/d8Hh/O/1pHlQnnj++4YgjnJ9/3BPqQt1P6kH1pAgacf/rd
r9Vw/ub6mRNw/o2f4J3W/ATvdJRXvg3o68bvY9mgL4HP5FXQl3Z4sxbo98ig
rAH06/PtoQDQ7+eOWosAJz0D5WcBJ7KH+2sBJwJK38IS3LewmN88AnWH2hqP
HLLuIMLy3UKh7hjeZxEJdUp86+lQsk4h2kL31kCd8rgyKxDWjcvuZsJ6OnFT
DOs7HNp7YJ8T0eIW2KeSPh2hqF8ofdES3BcdQrmf8Si+n/E/dSIt0A==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{359.1035457795789, 151.13275663197135`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox["\"Saddle\"", TraditionalForm],
  PlotRange->{{-1, 1}, {-1, 1}, {-1.9999991428572654`, 1.9999991428572654`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.2439664457135477, -3.3682433856826703`, 0.21311233697482737`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6641631232769794`*^9, 
  3.664167153188378*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
jmUE3/h/+8cEGg==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting of Data", "Section",
 CellChangeTimes->{{3.6641632248419275`*^9, 3.6641632276654525`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Xdata", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", "2", ",", " ", "3", ",", " ", "6", ",", " ", "10"}],
    "}"}]}]], "Input",
 CellChangeTimes->{{3.6641633074595356`*^9, 3.6641633093933425`*^9}, {
  3.6641633675270014`*^9, 3.6641633753576307`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "6", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6641633771061487`*^9, 3.6641671532040052`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ydata", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", " ", "4", ",", " ", "9", ",", " ", "36", ",", " ", "100"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.664163379058989*^9, 3.664163389839038*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "36", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6641633905398645`*^9, 3.664167153219633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"Xdata", ",", " ", "Ydata"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641633952264843`*^9, 3.664163407889245*^9}, {
  3.6641634463749704`*^9, 3.6641634486762896`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 2.}, {3., 3.}, {4., 6.}, {5., 10.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 36.}, {5., 100.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664163450039049*^9, 3.6641671533511577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculus", "Section",
 CellChangeTimes->{{3.6641636119878716`*^9, 3.664163614274544*^9}}],

Cell[TextData[StyleBox["Differentiation",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6641636197128596`*^9, 3.664163623260338*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.664163630797104*^9, 3.664163639056651*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "x"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6641636480412364`*^9, 3.664163691233939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641636997570004`*^9, 3.664163707325883*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], " ", "x"}]], "+", 
  FractionBox[
   RowBox[{"Log", "[", "x", "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.66416370774811*^9, 3.6641671534045467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641636997570004`*^9, 3.664163707325883*^9}, {
  3.6641637702667494`*^9, 3.6641637758524733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], " ", 
     SuperscriptBox["x", "2"]}]]}], "+", 
  FractionBox["2", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "2"], " ", "x"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "3"]]}]], "Output",
 CellChangeTimes->{3.664163776884926*^9, 3.6641671534201736`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.664163943049304*^9, 3.664163946854866*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], " ", "x"}]], "+", 
  FractionBox[
   RowBox[{"Log", "[", "x", "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.6641639474397163`*^9, 3.6641671534357977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "''"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.6641639485874643`*^9, 3.6641639508736835`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], " ", 
     SuperscriptBox["x", "2"]}]]}], "+", 
  FractionBox["2", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}], "2"], " ", "x"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "3"]]}]], "Output",
 CellChangeTimes->{3.6641639513421693`*^9, 3.6641671534514256`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "y"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.664163962937478*^9, 3.664163975447043*^9}}],

Cell[BoxData[
 RowBox[{"y", " ", 
  RowBox[{"Cos", "[", "x", "]"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "y"}]]}]], "Output",
 CellChangeTimes->{3.664163976995938*^9, 3.6641671534670515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "y"}], ",", "x", ",", " ", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.664163962937478*^9, 3.6641639980101967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "y"}]]}], "+", 
  RowBox[{"y", " ", 
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Sin", "[", "x", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "y"}]]}]}]], "Output",
 CellChangeTimes->{3.6641639988803635`*^9, 3.6641671534891844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "x"}], "]"}], ",", "x", ",", "x", ",", "y", 
   ",", "z", ",", "z", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641641228677187`*^9, 3.6641641547401175`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.664164155240275*^9, 3.6641671537678547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664164179030201*^9, 3.6641641963121367`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], " ", "x"}]], "+", 
  FractionBox[
   RowBox[{"Log", "[", "x", "]"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.664164200730624*^9, 3.664167153788994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{"Sin", "[", 
   RowBox[{"x", "*", "y", "*", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641644081096563`*^9, 3.664164437221056*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"x", " ", "y", " ", "z"}], "]"}]], "Output",
 CellChangeTimes->{3.6641644387747927`*^9, 3.6641671537899947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641645486486063`*^9, 3.6641645673393726`*^9}, {
  3.664164675799694*^9, 3.664164688205799*^9}}],

Cell[BoxData[
 RowBox[{"y", " ", "z", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"x", " ", "y", " ", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6641645537736397`*^9, 3.6641645685247016`*^9}, {
   3.6641646772850065`*^9, 3.664164689203987*^9}, 3.664167153805626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"x", "/", "n"}]}], ")"}], "^", "n"}], ",", " ", 
   RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664164733337699*^9, 3.6641647657821765`*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.6641647671131954`*^9, 3.664167153936942*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Integration",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6641671770667706`*^9, 3.6641671789533143`*^9}}],

Cell["\<\
Esc int Esc for Integration sign.
Esc dd Esc for differentiation sign.\
\>", "Text",
 CellChangeTimes->{{3.6641671997083993`*^9, 3.664167234208787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"fprime", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6641672367332587`*^9, 3.6641672487211657`*^9}}],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"fprime", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.664167250338347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641672567246857`*^9, 3.664167260575502*^9}}],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"fprime", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.664167261730134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.664167266150234*^9, 3.664167269998938*^9}}],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"fprime", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.664167270452736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.664167276626873*^9, 3.664167291589557*^9}, {
  3.664167337683879*^9, 3.664167338869768*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
  SqrtBox[
   RowBox[{"1", "+", "x"}]]}]], "Output",
 CellChangeTimes->{3.6641672927907963`*^9, 3.664167340303631*^9, 
  3.6641673770766973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"%", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641673102731085`*^9, 3.6641673148473377`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], 
   RowBox[{"3", " ", 
    SqrtBox[
     RowBox[{"1", "+", "x"}]]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"1", "+", "x"}]]}], "3"]}]], "Output",
 CellChangeTimes->{{3.6641673160096684`*^9, 3.6641673420594387`*^9}, 
   3.6641673789627924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6641673831342974`*^9, 3.66416738628538*^9}}],

Cell[BoxData[
 FractionBox["x", 
  SqrtBox[
   RowBox[{"1", "+", "x"}]]]], "Output",
 CellChangeTimes->{3.664167386669305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "+", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641673976155987`*^9, 3.664167419000349*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", "3"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", 
    SqrtBox["2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664167419801215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["2", "3"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     SqrtBox["2"]}], ")"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.3905242917512699`"], "Output",
 CellChangeTimes->{3.664167425308982*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_", "]"}], "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664167434215948*^9, 3.6641674553472853`*^9}}],

Cell[BoxData[
 RowBox[{"PolyLog", "[", 
  RowBox[{"2", ",", 
   RowBox[{"1", "-", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6641674596873827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "y_", "]"}], "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "a", ",", "b"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664167471111726*^9, 3.664167497171548*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.6641674997407255`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series Expansion", "Section",
 CellChangeTimes->{{3.6641675157466125`*^9, 3.6641675195720944`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans", " ", "=", " ", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], "/", "x"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641675281272*^9, 3.664167544422761*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "x"], "+", "1", "+", 
   FractionBox["x", "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "24"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "4"],
    SeriesData[$CellContext`x, 0, {}, -1, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24]}, -1, 4, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.664167545894498*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trancate", " ", "=", " ", 
  RowBox[{"Normal", "[", "ans", "]"}]}]], "Input",
 CellChangeTimes->{{3.66416754866661*^9, 3.664167558035068*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", "x"], "+", 
  FractionBox["x", "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "24"]}]], "Output",
 CellChangeTimes->{3.664167558620573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", "x", "]"}], "/", "x"}], ",", " ", "trancate"}], 
    "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.664167561525793*^9, 3.664167601004278*^9}, {
  3.664167663804547*^9, 3.66416769753496*^9}, {3.6641677432966776`*^9, 
  3.6641677965124226`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c01o8fxW0yCs9jZjwelShZPakkUkbKplJGJGWVpEJEErKJtM2SShmJ
pM/7XWSXvfdWRvYev+/vr3vuuefcv17nnnMlbK8aX2Sgo6P7Sk9H93/1Gdab
3tiQxBt6aFLGXk+4JwvOta9K4qnHEWfKd9UTzpb9C3lLkijmfIyDSa+esKj3
WLs6I4lBs0q8O6PqiUOQwtYzJIm5W3CWJtRALD9aEsNfkmjjd3D4575GwkPr
1Qm/Z5LI0Krv8jO5mXCld9W3eCyJWxQOtlRXNhOXCw8a7Y+TxFTFCknqXDNx
RrHm1GSEJDrn6Z1N1GkhlMVWbM77S+KX1v0XeWZaiPk5Qw91B0ncm3J5/sCp
NsL91WoqnbIkirNN2Nwy7yR6TuxjfaIkifMrXwcbozqJk9NXHRTkJfHriszv
F2WdxDa1fllbaUlsZjyy5Hygi2hoKf9ctPW/PsmnmuKUbkKJM74skE4SBcgW
GVp3e4iX2TUy4mtUXJEtMHRL7CHYzdnD85aouOVK77lW6CH6XvkYjUxTUeqS
gPu5jR4iRs2u7fggFf8Gbrt06G4vMe2mMMZZQcX8s6Lb2qL6CCshJ/1XJf/l
gp1tMzl9RAWkZqoWUbEyPDzMsLmPSOYUvHGlkIoyeaFDDWL9hNHr9bXqD1Rk
UNnTKJDVT2S2Vm55+JCKP/LE5lf7Boir6vZKQpZUDH7xUlbOb5gIu2R8ZtSc
ig0s3oDpw8TbiMM+305R8eSPW5HP64eJgQ7+UhtDKqa0STHSdo4QZzxLz749
SkXe3s0Siw0jhHr2Tn8VGSo6WdpnH1H9S3BvG62xXJDAX5UrxmMnxwnZE81z
crMSeGcgkNTpN07ouhUJM0xJ4J4q10aZ3HEiAJ/Zvf4rgSN1T+l6xCaIRYuT
ixOdEtjkyv2xaH6C6InLEPcrlkBaFL3sfYtJIovV9UpytAReVex2MNWaJtBH
LyQgQgJVQ8U6d9pPEzUzMq/tQyWwTtD0FC1wmpjoHuyUuS+BeeMv/y6UTBMy
+ef0cjwkcDr4fPaeEzNEymXt3cXWEtjtKdf1zWqWiCsX+zsoK4GDhGfghdx5
IlVtlblMRgJZdZ3us3XOE59yWyXeSkngcEem9wzTAlGXFGt+RUICtxe5HH9h
tkBs9mIvnydLYOkjaQ395QUiSGY+jXWVgtd6Dw/EGy0RnqG/LkpXUJBo4/4S
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
DbGTePe6Jr5ukX63JyUafLWpFhLfT+L/AFsrfGs=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{-0.0034117833165737913`, -57.5088305632953}, \
{-0.0023631695504827003`, 92.52415831215005}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
lGQOHg==
        "]], 
       LineBox[CompressedData["
1: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
7gqZsXg9MLu6ysBjzTWJbyTN8H+Ebf9B
        "]], 
       LineBox[{{-0.0034117833165737714`, -57.5088305632953}, \
{-0.0023631695504826846`, 92.52415831215005}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-10, 10}, {-57.5088305632953, 92.52415831215005}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"exp", "(", "x", ")"}], "x"], "trancate"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6641675816610384`*^9, {3.6641676839042096`*^9, 3.664167698351716*^9}, {
   3.664167744998495*^9, 3.66416779738311*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ans2", " ", "=", " ", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], "/", "x"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6641678131115294`*^9, 3.6641678166688824`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", "x"], "+", "1", "+", 
   FractionBox["x", "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "362880"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "3628800"], "+", 
   FractionBox[
    SuperscriptBox["x", "10"], "39916800"], "+", 
   FractionBox[
    SuperscriptBox["x", "11"], "479001600"], "+", 
   FractionBox[
    SuperscriptBox["x", "12"], "6227020800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, -1, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880], 
    Rational[1, 3628800], 
    Rational[1, 39916800], 
    Rational[1, 479001600], 
    Rational[1, 6227020800]}, -1, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.6641678182021656`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trancate2", " ", "=", " ", 
  RowBox[{"Normal", "[", "ans2", "]"}]}]], "Input",
 CellChangeTimes->{{3.6641678287127457`*^9, 3.66416783039802*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", "x"], "+", 
  FractionBox["x", "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "24"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "120"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "7"], "40320"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "362880"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "3628800"], "+", 
  FractionBox[
   SuperscriptBox["x", "10"], "39916800"], "+", 
  FractionBox[
   SuperscriptBox["x", "11"], "479001600"], "+", 
  FractionBox[
   SuperscriptBox["x", "12"], "6227020800"]}]], "Output",
 CellChangeTimes->{3.664167831766639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", "x", "]"}], "/", "x"}], ",", " ", "trancate2"}], 
    "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{3.664167841994286*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c014//xW0yCu+3mfH2VomS1TsVImUWmZUKkZFV8lEhShKyiZSGWVrK
SCS9ns8iu+y9tzKy9/h9f3/dc8895/71OPecK2F71cSegY6OjqCno/t/9Rsx
mNnclMTrBmhazt5AeKYKznesSeLpx5FnK/Y0EK6WA4v5y5Io5nqcg8mggbjQ
4LV+dVYSg+eUeHdHNxCqkMbWOyyJedtwjibUSKw8WhbDX5Jo43945OeBJsJL
++UJ/6eSyNBm6PYztYVwp3c3vPBYErcpHG6tqWohLhcdNj4YL4npipWS1PkW
4qxi7empSEl0zTc4l6zbSiiLrdpcDJDEL20H7XlmW4mFeSMvDSdJ3J92eeHQ
6XbC8+VaOp2yJIqzTdrctOgiek8cYH2iJIkLq1+HmqK7iJMzV50U5CXx66rM
7+flXcQO9QFZW2lJbGE8uux6qJtobK34XLz9f32SiVrilB5CiTOhPIhOEgXI
FzK17/YSL3JqZcTXqbgqW2jkkdxLsFuwR+QvU3Hblb7zbdBL9L/0Mx6doaKU
o4Dn+c1eIlbdrl1viIp/g3Y4qt7tI2Y8FMY5K6lYcE50R3t0P2El5GL4svR/
uWBX+2xuP1EJ6VlqxVSsiogIN2rpJ1I5Ba9fKaKiTH7YcKPYAGH8amO95gMV
GVT2NQlkDxBZbVXbHj6k4o98sYW1/kHiqoaDkpAlFUOev5CV8x8hwh1Nzo5Z
ULGRxRfwzQjxNvKI37fTVDz542bUs4YRYrCTv8zGiIpp7VKMtN2jxFnvsnNv
j1GRt2+rxFLjKKGRsztARYaKLpYOOUfV/hLcO8ZqLRcl8FfVqsn4yQlC9kTL
vNycBN4eDCJ1+U8Q+h7FwgzTEriv2r1JJm+CCMSndq/+SuBofSJdr9gksXTh
5NJklwQ2u3N/LF6YJHrjM8X9SySQFk0ve//CFJHN6n4lNUYCryr2OJlpzxDo
ZxAaGCmBamFiXbsdZojaWZlXDmESWC9odpoWNENM9gx1ydyXwPyJF38XS2cI
mYLzBrleEjgTcjFn34lZIu2yzt4Sawns8Zbr/mY1R8RXiP0dkpXAIcI76FLe
ApGuvsZcLiOBrPou99m6FohPeW0Sb6UkcKQzy3eWaZGoT4mzuCIhgTuL3fSe
my8SW33YKxbIElj2SFrTcGWRCJZZyGBdo+C1viODCcbLhHfYL3vpSgoS7dxf
IlTWiLVxob6yUgp6PDimJ3NtjfA3dLjgUEzBhh71OtmMNSKIZ9MkrYiCFFrd
mCt5nYhNkNcQ/UjBNyVnn/TNrhPv0x4K88RRkJkmHXShbJOQY+6N/xhNQTbG
+5uD9HSQ47CXxzCCgqGtTzvMKXTwRfona1gQBTe02L6MWNJB6ceFOSZvCh58
fv1Vawcd9Hy1qFmypOB6yS3FMwP0YCv6Sj/hHAXLX0kxOTIzwPDtmZ+0MxTs
r3b3KpBigPGjYUUeRhR8e2xAn+rGAEtlRW/GNSm4szunS3yVAXgbxQN7pSjY
2VVgeHAHE4S2Vl2LHhBHtbo8KP7AAjPPKiY0usQx+hKNtq+FBc7blDlNN4sj
HB+J69tkgb1/f9iYVIrjb3KT9E4TVqhZ/WJMzhZHHWHDu/tWWIEs/lrh8W1x
XAkxHi8+uwWe2wdOJwmJY9U43wadGSewyAS4GZHE8XBTi0ZSECdcmbzzh45L
HLmHzu188oUTNG7e6rOhE8ePRh9upFK4oD/Eo05yRAzvDhjPi85ywa73F7Mz
PomhjmGencnbbZA1o3rt4ykx7LGjBl3K5QH6SMH3rbpieOvjBLmsiQdMpOeG
6TXF8PGnRssrSzwwa/3ugtl+MXwdqq0WeoQXDvwS0l0WFMNMz0l9lt+8UJSx
IHasXxTzZNS2hq+QgOtYvYVrhyiyWaopu0mQwao7My6+URQT7jMJP9UlwybZ
nn20VBSHOMav9ySQQTOgYT78nSgWzRW+236YD8ouZFU3e4ritm+Ktv8i+EFw
KYyV7oooOtVK8o184YfLDx01pR1F0S3Or5A2zA/slWIFtyxEsa3W8Um7ugCc
VI5IoxwRxV5leerpRQGo53H2cWYVxaxXA7OfbgpBd6nk7o0nIsjqw3XToVgE
SHT9RjoPRVB617RP+ooI6B5K9o4OF0GzBpv9hoqikPNOpIp6RwStWgYpo6mi
EBTNd0XHTgS71mc+GDwQA9lzrJ+i94ng7ObUnzoaBWwf/uxskxLBk6+JZwzm
FHhUfY9ZUkIE4yn3NN09KUCnTncmjySCTfFKBkyfKNAoubzctrQd35/26xM5
IAG+E3/VJYu34/21SKs72lTI3vXmsmvRdqw86Kdf6ESFYWvHmLy87Xj+QfuB
wxFUMKof6Nd5vR31NqYPcjRRQTK/875rxHYsNuM8RH9ZEir9f1flndmOwj3C
j78+3QFC5JwzuuPCyL5xf+ezI1KQZdjEzDwsjNGhZc1Rl6VA98FS7vceYTys
ezSoNlYKbmwc4VZpEEZh/xQJlVEpqB+tKpctFEZJF2fTn492Q/i3oUOkEGE0
DlNNUGCUgQ0HIZFuSWG0zMssKhWVhfgU1cpEUWH0V3XKCTaRhb2d1l5nBIRx
USTu35tgWThn/Kqxll0YC+Tui/HNykK+ilJE8bQQ/k6ly078vQ/cuQ02XoMQ
Ho8Uot0/KQ/9X/x7/zsvhCXxD/0DNRTBpuquwRszIVx1I219YKcIvZ0Bhd0G
QhhDEmRqDlGEns3AOD0NIXRssb19ol4ROrUe6IrvFEKc0tLMu6wEzXUxWZWT
grjIIDDCmb4fzAdiRelGBfG7xbWQ3ur90Dj3MJTWJ4jhERneLAv7oUHgkV1y
gyBOrNvPndCjQa1louCNAkFcVhlQrp2lQeWfVH+JAEE0Hgvddc5CGfRW0yZO
3xLEqE/+4S+DlaGc8+W5cE9B/CoeGWX4WRnK5DL2LzoI4ko8y40i8kEouf5u
tPqEIO6KUrMWbT4IBP0nIy8+QRxXclt86XIYcoV+UmpeC6A5v9Gr7yNqELd3
D8krVQCPy/9WuCh+BG6oxzBLPBPAB09LLC+fOQIH7S3/ekQJYEdZUU1B+REg
suZz+W8I4PXk64zXstShUmeXjtUxARyd1c72q9SA9+fCD7GqCaBnuhtT9R8N
iHCb2ZN1QABn64NWzLccBaOHBDeDjACO8c6liukdhebu0+0vuQXwaIxVb1TV
Uei/Huw20cWPuRFy7JadmlASMmH9qIUfOeqjdF5sasLLp6Ym6nX8yBZ+fZAq
eQwufxdXjinhR/rSecMl52MwyVlAR3vHj883l5P714/BStroQ18vfpxuMkjc
p6AFvPV6hRwkfqw3FRh/W6cDrQGxiY2c/Nifpp4ftq4DL5Q6fJ6z8OPtEBNN
kNYF6XhXFbkVPlyQH9oucU8XNM5GFZn08WEP+4dvfYf0wK27kXjykQ8HIyo4
/ubrg2KUaJLtGz5UueE3e/yPPiypO9zZk8aHR4K3aq4Ln4DAlEX1b4/4UFv8
3kTInROQaCf8vdePDwV+bv6gGJyE8r/WxVIn+ZDPvNlzecUAIp++TpvS4kMN
SS2re4qGYHpy+t4XdT7UGuQvvuFsCN2ZAcdPKPFhH7n48PMOQ5h3f/nzijAf
cg2v923+OAXUxb9leaNk7Aq+UevaYAR+jDeqj90noyjbxcy4QROQCXvmcv82
GR8XPntdxW4KrbzF7GU3yej74R+jiYIp7Kdy6+k7k9Eg5tP9U3dMYVzj7U+j
U2TsffI9jyJuBududxOWQmTsZKtvK7hiDmwszFZJvGRcPeGx5VCiOXyO2LPe
y0HG+NrhJVKpOfA891Kx2yBhdZfV7i6x01D+lbfAeYCEjGCUWt94Gg4sa2ff
zCQhi7BLxobJWRj0dzP68oqE9DSNgNDAsxDLFvdvJYmEOtvYFW9/PgsTAn2y
t2NJ+K50OSF5uwWkH7j1NvAmCR2+BqT+/WsBJM+PaTFHSahdsv/dpRfnYWpS
4NG7Jl4svt7S3GltDXReaYUXa3gx82eXwORTa+Cml+vhq+BF0+mrf663WoM8
SXu3fxEvftiqGnRD+iK4K3sWmqXx4typkP2Vry7C1J3a7nV3XjRel3pommkD
dFsuMOY686I4sXX1RI0NcMeOSF2248Vr2mrFwdM2IJ++4V5/hhfXvYNSqg7Y
gnv5XsaMI7z4k6GEFFdiC1PcD6SMOHlR6+gKZExcArpE8klmFl788dxiUYhs
B9ySye6Fmzy41fV7XethO5Cn5X/ZMcuDt3SuTRx5YAfuFkMnltt48HGjmx8h
bQ9TKUfdUzN4ULYhJ0TUxwGmFVcK5jR5cB+cHlGzdIK/sZeeUVV5UOXV6tS3
WCfon6m+Y0TjwV/vd3bllDtBfU6S9nspHqS7WBO6SXOGHEWtxkucPHiwcXmL
Jr8LeCpG/6tv4sY/x0vSbSddwTV2uZ6uhht1Pto8yt3jBnYztp/3lXOjslyq
aZiTG5jl0PxCC7mxQq+Us3HYDWiKHeyaSdy4U+s5dWLkCiwo7NqVfZkbT2x0
Jn0IcIfJmKgtPTbcGC3z9k7bS3cYnl4a5zzPjZcDn8ibVLhDc3ZV7mUDbvzS
wtgux3MN8hWuHaUocmPwNyOfrPRrMGXr9UVscRu+6h22utLhAfM26bs6RLah
VenbSr+I6/DBUrXixrZtKGfuOcr+9To4WDS68DJsQ6MtAVZro9eh1YgpW29k
KyZFkpa3ad+AQnU7lYLsrSg5Sf5HYr4J/qI7jOK1t2JHceZvhwQvOChUNCN/
aCt+kH738V2VF0yTzeKr92zFRlHrWDs6b7DlDGxn5NmKIoLLLw64eIPW6oCd
RwcXiuStH/LR9gH2tjTvU+7/879vfb9F9oXiRhWRMVsupLkKKAUZ+YJvbQMR
ZM6FtvfqZvkjfGGijJGJOMyFbzLbLGtZ/aD286XIvcxcaDPgaF/KeBvi4yTT
tiRyomDrktF/HP5AMUqrLi7mwKFpZYUFiwB4bsjso53PgcF0rPTMdwJA2MBR
quItB/JsCl61TQ8Asv6egN8xHEhL/jLBMRUAW47nKrdZc+B8boC+bNg9mFEu
Tp1cZUfxR2UrBnWBcPXATqNr/9hRybj38/PVQBjfH7w+28+ODaecN3R23Ydh
hRNnlyvYUfXdsutH3/vQsaeBi+kxO56+f2SoVzYISsQHvIT2s6NoMI0tMjUY
jopp7XomxY6dGzrTY/XBQIhkNIhtZ0c5zXeGOYwhUCDksm8HAzt6eKbv83UI
gUzS7MC+2i3o8dj6nrjCA3jEynjquOsWXKqvSw/sCAXHf9SdV9PZMCrd2ss8
PBI+PdUwGnjEhoM6pyT31kUCg67VrTMP2BDIGpYZ/FHwLPlJnfoVNkybcKHG
pkVBvTH3be6DbJgl6an6yTYaVD+t/w9BVtwEgfMm8TEQenE7wy6CFQUtc5r0
v8VAC+ch2cQsVmQOOkOXPhQDHvae9wLiWRETv1zwVY6FDP4xOVNrVhzokonr
64kFXu/WkLkZFmwpkhpzPh4HF3cu5F4eYvkfn4/9xzziILOO1NPZwoKfWO3o
u1PiQFfmFO1nEQvKNF24L0ofD34dP/vig1jQym74xe6f8TCqlntYWZgF8/u0
robZJQDBEDnufZQZfX4Y7jvI/hRqs69Tm/Yz401WS9IprafQf9HyrPxuZvQM
T+2Z8n8KzLC3ZHgrM+ZYGFa2Lz+Fk7eqnpp2MmFNqR7ZfeYZdMyynZC9yYTJ
p4Ib/m2+gPHUKf8QZyZU8Tyh5nA8CTaMWz8PWDLh1TMXZu48SAJqVgY18TgT
3k5UWatjTwZnV+0VFl4mXJbca/IvMRmWBu+96X3PiCROl/jWqhRgj3PpUUlm
xA+aTC6PZ1NA5JgpX8JDRhyyokYUbE8F9RTqXQMfRvTiYy4RdUuFIMvvZwt1
GPH3Rx6WJ+Q04GveYI3rZ8AGdq5arZvpoFjm7aAjyIDtEiUslQ8zgLxDVDiO
nQFpEWkhpr8zYMEff/Wu0aNOeY6q75bXUHiYlebTR49hbMKtOXdfg+aHOMbM
t/ToGcf1Ysz7DZjGf0zmVaPHAk2GvLNh7+DAjImZtRw9umtkHCivfQeCpxZY
30vQ46LM+WdL/O+hk03tqhYLPaZYPYt5+fI92PlWqnnV0CGdf5KPZ3UmeF4a
au+yoUPXb7pRJIksOI0hkTJmdLjHU0jBWT8LDoru1bypTYdqowznD3hmwVqz
xxvuPXR4pv3KEVpFFmyJp5sKGt2EFxL3tZa8skHm0gEZE65NqCapUTencmBS
xC9mbHoDuH5QI92ouZDTXLwU2LwBzKlkqqtZLhzWNy7LT9qAslgzM4nCXNBX
cLUTVdyAN7/Gg1PDP4HLZsqL0dPrsLW/L7bm1GdA+f++0auug8WIYbho6Gcg
2x7vFJZYhxrxFWmBn5+BKBkWMhhbAyYV17v8avnAG7onPvvOGjCqD68E0wqg
gJwX5vN6FWh3/LKc9AuBSzvo7cOIVTiu9KvvSXQh2N48U/HeYxVqP/pyJLUU
Amf7MkuP6io8+Rqxc//lr2CddCTgWN0K3G2/ZNjzsOh/f7fci3NlGbQ2J8fI
ggDnzz9J2NmzDBukRzZkN4CscOfPR0qWgdu9O1isGODcP84598hlMC/3VlY4
hJD5yfhqE3UZ/jP7l8T5D8FMvcP+xYkloLITLQw3f8Ab9/eB+fJLMH2g63zj
2x+wkeKXVsu3BG+nXFMNe37AayZKH0PvIryU316po18MqxV2Fxw9F+HU0Jt7
CbtLINVs0kT++QKkW7yKkt9SCv5hpsECgQvw0bHzQ+zxUrD6UfB1w3kBnnx3
qszyLwUh+Xs7fh1cAPM2Md29q6UQzSG44NQ4DzO5d6M9lsvg9o+jT9I45iHc
6WvJumglXFh+9St0Zg5g67/JaIdKOCzPyeDRNgcfH+4kk7MqYf55s7NGxhyc
blNKXNaqAldvF9UuzTmoqNUbzfKrhnPy8T38PrPw45fQ+2hKDRx0XCFtXJwF
phsLF4V8aoD/hbXukM4sHNvVQ9/WWAN1HDLZuXyzEKy2wL1FpxZ0R4gAo+wZ
0JNbXGRgq4MDL0Z3ho5Og9Ojn/sevasHcpPBuWs109BH60u5MlAPMxy5kWc/
T0Pog2geskgDZHr7Le4KnIYkzj+NjVENsMOct6JYfBo2g+ZNnt5tBF5OVdf1
01OgWVtfvxjTDNEvBJ+VqUyBKaVUKbq7GbYqzFfFUKbA3nhnstveFuB/f+HM
ycZ/EG5y8TqpugXYNI42P1+ZhIXB739at7cBk/0KTbFkEgJd5bQd/msD+tDc
+NKISTDvqU67Xt0GKw07zf9RJkHVaT9J7V47jDuyN2roTIArt8vAVaZOGA0v
VmrinoDHU3X1nE6dMJTt+9CpfRyyRbV5vGo6oXt10iTWbRwKuipoQyldUBvV
UDfwcAySvqsaWlv1wKf8ZzVBvX+Aa05EITm5D7I6zeW2v/0DBmKULLPBPsik
3xb18b8/UO/sPWgl3Q+vTtw1bGX5A58Mbr5/nN8Pj3vsf0nLjoJA85x79tAA
xDGJyxILI/CNXtxagjYIMdKt4SY4AuKk3/oHgwYh9D/9k7dMR+Bhrs1iqOwQ
+LLKVVV7D8PxOwlye2OHwWvvqIzNsWEg2U+0HpoahuvGKaHznMOQXVP49ZzR
CFx5StIXSx6C6TtRb/kFRuGi3FL51dJB8A7QK7DGP3DBLHs3U/QgbJv+XD0m
/xcsvJ1DHlsMwhfSDWux9L9gUtyp8318ANqXtedqYsfg2JnvpbykAaD1umpy
xE2ASXCq8bHeflCghQ0dJ03Cxfx7nf9l9oPteQHrO/GT4CugPdOo0w9r3s/n
LqT9g7yWStEE3z5w+UZvMDA7BSWs71+X6fXBJ7E4Xpaj01CvHKG0xN8Hc77s
QeLR0zCZcErPIrsXIn6InLqzfwYMs17/OVDdA2/uProg+XgWnLldNhMceoC7
4/dZqcX/ce0uy7dM1wONl7fJ/jo797+9y9H4SuuGnm2NY0475qEz2vO0SG0X
9HLoKiVGzsPy1AFXP+cuEGRUONKzOg+K2V8T1JM6YbKE02Bv7wIY8tzOTD7U
CU9ozGa3ziyCyzWNYvrGDrjC++WyW/0ipCv8nCxm6wD7qDmj3oYl4M/5raXr
0QYOz65sCrKvgiJvzPk3nG0gx88UFpq2Cqc8TK+xZ7RCu3DRmJLmGoQotj6r
7miBpJrO3MPR65Aem5gje6MFZjNuF0lrbMD3mQvlkdwtsIef+aXnwgas5PTN
Gmk1g2xjM5VQoUN+UvqWnJ4mELgYuH4rhQ6V/nMQJ/k0QRVT1XkpDnp0VRrT
b/rQCPEpViZyY/TYnTuXYiHYAAf/iE9eHWLEFVJ+fmFOPWhVb3s0eY0JBTy9
f203qIcHrEW7CpmY0Wj/xlLX3ToQ+1JxeOoIC7rG4VZ1kTrouShlZzTCgg/m
AnYkf64F9+TTcmMJrBjotC25pLkG7G/HxOiSt+A36biqII4aKH90597Vvi24
8EdwUVfjNzgkdbG/+MKOl52phr/eVEO1+xMhIpITU2QyvKO6q6Drd3dBeQQX
tv/d89KYVAXr5P1L5Gdb8aQLba3JtwLudbGJk29wI8co12B8Xjm8lAyPMuPj
wUq74SrzyTIYUmZ9vh148EEfkcsnVQZW61cNvD15Udcq4WmTdSnksSz5px0g
IWvH1Xvxj39CSL1KyRoLGUvP6LqY15XAe+/db0VGyHjcePlwk2YxKDRy8Jzt
5kfG33XU+Fs/oN/Bt4hvRQB/6L9lN//0HV7RTmYwyAnh3bKAGfIEQhiv8dPH
/sKocfx8e+NOhL++XFNrM9tx465joPQ3AurfNKzsCRNFv1uCZm/2fYPSxn/2
iqfEcc2zQlI6+StotZnOq6ZR0OeKz+xrnkK43nK4RPCbBC457inefa8A4j70
F0yuUPGGTWfs67nPsKcTi7ntduDcuQjb3Q550F7mJjxDvws9zI4ovm7JhXdS
n4XWe6VwyuAf/W69HBjVDHZo5pHBKzrJdRmFWWDQOXLd7N1ebL2bqnnq7AeI
fBPMkflLDps8mfoNVd6BGqnTarRBAescHe4air2GTv07529o7Mdf58ophvQv
wWf3E3t5e2WsMJBBg8EUeJ1ivk0lVQXD7gpCYuRzODegYW3dqIGBjp3rT8wS
oDFuCu/+p4W+BsmqT4RjoEaEUfysuwGOOpQvyH+/D3bzQwct9M5gln3yqFWi
B5jsdT5da++CIdZ53Ao1plDYeeyDo7C7xv8BWeOUnQ==
        "]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
B4K2qq0=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-10, 10}, {-219.18168183075846`, 257.6503126765125}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"exp", "(", "x", ")"}], "x"], "trancate2"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.664167845166484*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential Equations", "Section",
 CellChangeTimes->{{3.664167873559616*^9, 3.6641678793777733`*^9}}],

Cell[TextData[StyleBox["First Order ODE",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.66416869340162*^9, 3.6641686973417835`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6641678836493692`*^9, 3.664167892505074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diffeq", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "w"}], "*", "w", "*", 
    RowBox[{"x", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.664168595513234*^9, 3.6641686503515987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["w", "2"]}], " ", 
   RowBox[{"x", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6641686228807836`*^9, 3.664168651668109*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"diffeq", ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", "t", "}"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "w"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "w"}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6641686604923334`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Second Order ODE",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6641687015922384`*^9, 3.6641687050510993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deqn", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "3"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"Pi", "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "-", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6641687515302935`*^9, 3.66416880367817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Pi]", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], " ", 
    RowBox[{
     SuperscriptBox["y", 
      TagBox[
       RowBox[{"(", "3", ")"}],
       Derivative],
      MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "x"}], "+", 
   RowBox[{"y", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6641688072335744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"deqn", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"y", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Pi]", " ", 
      RowBox[{
       SuperscriptBox["y", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{
       SuperscriptBox["y", 
        TagBox[
         RowBox[{"(", "3", ")"}],
         Derivative],
        MultilineFunction->None], "[", "x", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "x"}], "+", 
     RowBox[{"y", "[", "x", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"y", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6641688184840117`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{681, 686},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3664188744-3324783"->{
  Cell[14303, 503, 716, 14, 62, "Print",
   CellTags->"Info3664188744-3324783"]},
 "Info3664188745-3324783"->{
  Cell[15194, 528, 714, 14, 62, "Print",
   CellTags->"Info3664188745-3324783"],
  Cell[15911, 544, 1028, 30, 53, "Print",
   CellTags->"Info3664188745-3324783"]},
 "Info3664188747-3324783"->{
  Cell[40504, 1412, 559, 13, 42, "Print",
   CellTags->"Info3664188747-3324783"],
  Cell[43723, 1525, 590, 13, 42, "Print",
   CellTags->"Info3664188747-3324783"]},
 "Info3664188748-3324783"->{
  Cell[46899, 1638, 803, 16, 42, "Print",
   CellTags->"Info3664188748-3324783"],
  Cell[49443, 1717, 659, 14, 42, "Print",
   CellTags->"Info3664188748-3324783"],
  Cell[51592, 1789, 1078, 20, 62, "Print",
   CellTags->"Info3664188748-3324783"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3664188744-3324783", 401781, 8550},
 {"Info3664188745-3324783", 401892, 8553},
 {"Info3664188747-3324783", 402085, 8558},
 {"Info3664188748-3324783", 402279, 8563}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 5, 101, "Title"],
Cell[743, 29, 168, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[936, 36, 102, 1, 70, "Section"],
Cell[1041, 39, 531, 13, 87, "Text"],
Cell[1575, 54, 348, 6, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1960, 65, 101, 1, 70, "Section"],
Cell[2064, 68, 440, 11, 49, "Text"],
Cell[2507, 81, 139, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[2671, 87, 117, 2, 31, "Input"],
Cell[2791, 91, 95, 1, 31, "Output"]
}, Open  ]],
Cell[2901, 95, 125, 1, 30, "Text"],
Cell[3029, 98, 135, 3, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3201, 106, 105, 1, 70, "Section"],
Cell[3309, 109, 159, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[3493, 115, 299, 8, 31, "Input"],
Cell[3795, 125, 164, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3996, 134, 300, 8, 31, "Input"],
Cell[4299, 144, 92, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4428, 150, 125, 2, 31, "Input"],
Cell[4556, 154, 112, 2, 46, "Output"]
}, Open  ]],
Cell[4683, 159, 182, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[4890, 165, 126, 2, 31, "Input"],
Cell[5019, 169, 112, 1, 31, "Output"]
}, Open  ]],
Cell[5146, 173, 169, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[5340, 179, 185, 4, 31, "Input"],
Cell[5528, 185, 180, 3, 31, "Output"]
}, Open  ]],
Cell[5723, 191, 110, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[5858, 196, 181, 4, 31, "Input"],
Cell[6042, 202, 157, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6236, 209, 364, 9, 72, "Input"],
Cell[6603, 220, 100, 1, 31, "Output"],
Cell[6706, 223, 100, 1, 31, "Output"],
Cell[6809, 226, 120, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6966, 233, 69, 1, 31, "Input"],
Cell[7038, 236, 108, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7183, 242, 89, 2, 31, "Input"],
Cell[7275, 246, 111, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7423, 252, 143, 3, 31, "Input"],
Cell[7569, 257, 130, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7736, 264, 180, 3, 31, "Input"],
Cell[7919, 269, 129, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8085, 276, 160, 3, 31, "Input"],
Cell[8248, 281, 162, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8447, 289, 123, 2, 31, "Input"],
Cell[8573, 293, 111, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8721, 299, 123, 2, 31, "Input"],
Cell[8847, 303, 108, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8992, 309, 156, 3, 31, "Input"],
Cell[9151, 314, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9284, 320, 142, 3, 31, "Input"],
Cell[9429, 325, 132, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9598, 333, 98, 1, 31, "Input"],
Cell[9699, 336, 100, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9836, 342, 125, 2, 31, "Input"],
Cell[9964, 346, 113, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10114, 352, 122, 2, 31, "Input"],
Cell[10239, 356, 123, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10399, 363, 124, 2, 31, "Input"],
Cell[10526, 367, 175, 4, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10738, 376, 124, 2, 31, "Input"],
Cell[10865, 380, 125, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11027, 387, 126, 2, 31, "Input"],
Cell[11156, 391, 123, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11316, 398, 125, 2, 31, "Input"],
Cell[11444, 402, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11577, 408, 127, 2, 31, "Input"],
Cell[11707, 412, 124, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11868, 419, 367, 10, 31, "Input"],
Cell[12238, 431, 214, 6, 47, "Output"]
}, Open  ]],
Cell[12467, 440, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[12615, 445, 432, 9, 31, "Input"],
Cell[13050, 456, 345, 10, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13432, 471, 335, 11, 56, "Input"],
Cell[13770, 484, 204, 4, 31, "Output"]
}, Open  ]],
Cell[13989, 491, 172, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[14186, 499, 114, 2, 31, "Input"],
Cell[14303, 503, 716, 14, 62, "Print",
 CellTags->"Info3664188744-3324783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15056, 522, 113, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[15194, 528, 714, 14, 62, "Print",
 CellTags->"Info3664188745-3324783"],
Cell[15911, 544, 1028, 30, 53, "Print",
 CellTags->"Info3664188745-3324783"]
}, Open  ]]
}, Open  ]],
Cell[16966, 578, 140, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[17131, 583, 186, 3, 31, "Input"],
Cell[17320, 588, 110, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17479, 595, 106, 1, 70, "Section"],
Cell[17588, 598, 196, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[17809, 605, 967, 28, 112, "Input"],
Cell[18779, 635, 93, 1, 31, "Output"],
Cell[18875, 638, 93, 1, 31, "Output"],
Cell[18971, 641, 92, 1, 31, "Output"],
Cell[19066, 644, 274, 8, 46, "Output"],
Cell[19343, 654, 314, 10, 46, "Output"]
}, Open  ]],
Cell[19672, 667, 108, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[19805, 672, 483, 16, 31, "Input"],
Cell[20291, 690, 217, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20545, 701, 485, 16, 31, "Input"],
Cell[21033, 719, 809, 27, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21879, 751, 489, 16, 31, "Input"],
Cell[22371, 769, 121, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22529, 776, 426, 14, 31, "Input"],
Cell[22958, 792, 734, 24, 61, "Output"]
}, Open  ]],
Cell[23707, 819, 116, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[23848, 824, 438, 13, 31, "Input"],
Cell[24289, 839, 151, 3, 46, "Output"]
}, Open  ]],
Cell[24455, 845, 601, 18, 31, "Text"],
Cell[CellGroupData[{
Cell[25081, 867, 304, 9, 49, "Input"],
Cell[25388, 878, 151, 3, 46, "Output"]
}, Open  ]],
Cell[25554, 884, 277, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[25856, 895, 462, 13, 31, "Input"],
Cell[26321, 910, 656, 21, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27014, 936, 122, 2, 31, "Input"],
Cell[27139, 940, 459, 11, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27647, 957, 107, 1, 70, "Section"],
Cell[27757, 960, 143, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[27925, 966, 208, 5, 31, "Input"],
Cell[28136, 973, 193, 5, 46, "Output"]
}, Open  ]],
Cell[28344, 981, 520, 17, 31, "Text"],
Cell[CellGroupData[{
Cell[28889, 1002, 173, 4, 39, "Input"],
Cell[29065, 1008, 194, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29296, 1018, 124, 2, 31, "Input"],
Cell[29423, 1022, 196, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29656, 1031, 127, 2, 31, "Input"],
Cell[29786, 1035, 189, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30012, 1045, 129, 2, 31, "Input"],
Cell[30144, 1049, 242, 5, 31, "Output"]
}, Open  ]],
Cell[30401, 1057, 123, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[30549, 1062, 129, 2, 31, "Input"],
Cell[30681, 1066, 194, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30912, 1076, 124, 2, 31, "Input"],
Cell[31039, 1080, 194, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31270, 1090, 251, 6, 31, "Input"],
Cell[31524, 1098, 1464, 44, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33025, 1147, 266, 7, 31, "Input"],
Cell[33294, 1156, 96, 1, 31, "Output"]
}, Open  ]],
Cell[33405, 1160, 120, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[33550, 1165, 264, 5, 31, "Input"],
Cell[33817, 1172, 450, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34304, 1189, 129, 2, 31, "Input"],
Cell[34436, 1193, 439, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34912, 1210, 132, 2, 31, "Input"],
Cell[35047, 1214, 569, 17, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35653, 1236, 127, 2, 31, "Input"],
Cell[35783, 1240, 123, 2, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35955, 1248, 134, 1, 70, "Section"],
Cell[36092, 1251, 139, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[36256, 1257, 197, 4, 52, "Input"],
Cell[36456, 1263, 96, 1, 31, "Output"],
Cell[36555, 1266, 174, 4, 31, "Output"]
}, Open  ]],
Cell[36744, 1273, 264, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[37033, 1286, 117, 2, 31, "Input"],
Cell[37153, 1290, 119, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37309, 1297, 240, 6, 31, "Input"],
Cell[37552, 1305, 162, 4, 31, "Output"]
}, Open  ]],
Cell[37729, 1312, 408, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[38162, 1324, 187, 5, 31, "Input"],
Cell[38352, 1331, 97, 1, 31, "Output"]
}, Open  ]],
Cell[38464, 1335, 191, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[38680, 1344, 96, 1, 31, "Input"],
Cell[38779, 1347, 125, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38941, 1354, 115, 2, 31, "Input"],
Cell[39059, 1358, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39192, 1364, 98, 1, 31, "Input"],
Cell[39293, 1367, 95, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39425, 1373, 96, 1, 31, "Input"],
Cell[39524, 1376, 97, 1, 31, "Output"]
}, Open  ]],
Cell[39636, 1380, 363, 11, 49, "Text"],
Cell[CellGroupData[{
Cell[40024, 1395, 198, 4, 31, "Input"],
Cell[40225, 1401, 124, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40386, 1408, 115, 2, 31, "Input"],
Cell[40504, 1412, 559, 13, 42, "Print",
 CellTags->"Info3664188747-3324783"]
}, Open  ]],
Cell[41078, 1428, 132, 2, 30, "Text"],
Cell[41213, 1432, 203, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[41441, 1441, 122, 2, 31, "Input"],
Cell[41566, 1445, 174, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41777, 1454, 129, 4, 31, "Input"],
Cell[41909, 1460, 112, 1, 31, "Output"]
}, Open  ]],
Cell[42036, 1464, 323, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[42384, 1477, 157, 3, 31, "Input"],
Cell[42544, 1482, 105, 2, 34, "Output"]
}, Open  ]],
Cell[42664, 1487, 196, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[42885, 1493, 254, 7, 31, "Input"],
Cell[43142, 1502, 164, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43343, 1511, 124, 2, 31, "Input"],
Cell[43470, 1515, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43601, 1521, 119, 2, 31, "Input"],
Cell[43723, 1525, 590, 13, 42, "Print",
 CellTags->"Info3664188747-3324783"]
}, Open  ]],
Cell[44328, 1541, 179, 3, 31, "Input"],
Cell[CellGroupData[{
Cell[44532, 1548, 222, 6, 31, "Input"],
Cell[44757, 1556, 175, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44969, 1565, 181, 4, 31, "Input"],
Cell[45153, 1571, 175, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45365, 1580, 148, 3, 31, "Input"],
Cell[45516, 1585, 230, 6, 49, "Output"]
}, Open  ]],
Cell[45761, 1594, 124, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[45910, 1600, 171, 4, 31, "Input"],
Cell[46084, 1606, 148, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46269, 1614, 184, 4, 31, "Input"],
Cell[46456, 1620, 148, 3, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46653, 1629, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[46783, 1634, 113, 2, 31, "Input"],
Cell[46899, 1638, 803, 16, 42, "Print",
 CellTags->"Info3664188748-3324783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47739, 1659, 325, 7, 72, "Input"],
Cell[CellGroupData[{
Cell[48089, 1670, 95, 1, 23, "Print"],
Cell[48187, 1673, 93, 1, 23, "Print"],
Cell[48283, 1676, 95, 1, 23, "Print"],
Cell[48381, 1679, 95, 1, 23, "Print"],
Cell[48479, 1682, 95, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48623, 1689, 340, 7, 72, "Input"],
Cell[CellGroupData[{
Cell[48988, 1700, 93, 1, 23, "Print"],
Cell[49084, 1703, 95, 1, 23, "Print"],
Cell[49182, 1706, 93, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49324, 1713, 116, 2, 31, "Input"],
Cell[49443, 1717, 659, 14, 42, "Print",
 CellTags->"Info3664188748-3324783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50139, 1736, 117, 2, 31, "Input"],
Cell[50259, 1740, 149, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50445, 1748, 324, 7, 92, "Input"],
Cell[CellGroupData[{
Cell[50794, 1759, 92, 1, 23, "Print"],
Cell[50889, 1762, 93, 1, 23, "Print"],
Cell[50985, 1765, 95, 1, 23, "Print"],
Cell[51083, 1768, 95, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51227, 1775, 115, 2, 31, "Input"],
Cell[51345, 1779, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51476, 1785, 113, 2, 31, "Input"],
Cell[51592, 1789, 1078, 20, 62, "Print",
 CellTags->"Info3664188748-3324783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52707, 1814, 339, 7, 92, "Input"],
Cell[53049, 1823, 104, 1, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53202, 1830, 106, 1, 70, "Section"],
Cell[53311, 1833, 183, 3, 30, "Text"],
Cell[53497, 1838, 243, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[53765, 1846, 277, 8, 31, "Input"],
Cell[54045, 1856, 525, 11, 24, "Message"],
Cell[54573, 1869, 259, 7, 33, "Output"]
}, Open  ]],
Cell[54847, 1879, 223, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[55095, 1889, 315, 9, 31, "Input"],
Cell[55413, 1900, 687, 23, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56137, 1928, 704, 24, 54, "Input"],
Cell[56844, 1954, 545, 19, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57426, 1978, 259, 7, 31, "Input"],
Cell[57688, 1987, 229, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57954, 1998, 126, 4, 31, "Input"],
Cell[58083, 2004, 685, 23, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58805, 2032, 171, 4, 31, "Input"],
Cell[58979, 2038, 251, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59267, 2050, 238, 7, 31, "Input"],
Cell[59508, 2059, 196, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59741, 2069, 239, 7, 31, "Input"],
Cell[59983, 2078, 219, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60239, 2088, 177, 4, 31, "Input"],
Cell[60419, 2094, 683, 23, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61139, 2122, 147, 3, 31, "Input"],
Cell[61289, 2127, 347, 11, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61673, 2143, 171, 4, 31, "Input"],
Cell[61847, 2149, 280, 9, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62164, 2163, 282, 7, 31, "Input"],
Cell[62449, 2172, 458, 10, 21, "Message"],
Cell[62910, 2184, 253, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63200, 2196, 579, 13, 31, "Input"],
Cell[63782, 2211, 461, 10, 31, "Output"]
}, Open  ]],
Cell[64258, 2224, 149, 2, 30, "Text"],
Cell[64410, 2228, 478, 15, 52, "Input"],
Cell[CellGroupData[{
Cell[64913, 2247, 249, 6, 31, "Input"],
Cell[65165, 2255, 492, 16, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65706, 2277, 101, 1, 70, "Section"],
Cell[65810, 2280, 140, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[65975, 2286, 272, 7, 31, "Input"],
Cell[66250, 2295, 14205, 246, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80492, 2546, 832, 19, 112, "Input"],
Cell[81327, 2567, 16946, 291, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98310, 2863, 365, 10, 31, "Input"],
Cell[98678, 2875, 18195, 311, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116910, 3191, 437, 12, 31, "Input"],
Cell[117350, 3205, 11110, 196, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128497, 3406, 381, 10, 31, "Input"],
Cell[128881, 3418, 18941, 321, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147859, 3744, 735, 20, 72, "Input"],
Cell[148597, 3766, 5020, 94, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153654, 3865, 612, 17, 72, "Input"],
Cell[154269, 3884, 138839, 2258, 166, 121800, 1977, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293157, 6148, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[293287, 6153, 288, 6, 31, "Input"],
Cell[293578, 6161, 172, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293787, 6169, 227, 6, 31, "Input"],
Cell[294017, 6177, 172, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294226, 6185, 242, 5, 31, "Input"],
Cell[294471, 6192, 1088, 28, 241, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295608, 6226, 95, 1, 70, "Section"],
Cell[295706, 6229, 140, 2, 30, "Text"],
Cell[295849, 6233, 139, 2, 31, "Input"],
Cell[295991, 6237, 250, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[296266, 6248, 174, 4, 31, "Input"],
Cell[296443, 6254, 339, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296819, 6270, 276, 7, 31, "Input"],
Cell[297098, 6279, 548, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297683, 6303, 138, 3, 31, "Input"],
Cell[297824, 6308, 342, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298203, 6324, 143, 3, 31, "Input"],
Cell[298349, 6329, 550, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298936, 6353, 199, 5, 31, "Input"],
Cell[299138, 6360, 255, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299430, 6372, 219, 6, 31, "Input"],
Cell[299652, 6380, 515, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300204, 6401, 265, 6, 31, "Input"],
Cell[300472, 6409, 94, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300603, 6415, 228, 6, 31, "Input"],
Cell[300834, 6423, 338, 11, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301209, 6439, 246, 6, 31, "Input"],
Cell[301458, 6447, 158, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301653, 6455, 265, 6, 31, "Input"],
Cell[301921, 6463, 268, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302226, 6473, 293, 8, 31, "Input"],
Cell[302522, 6483, 131, 2, 31, "Output"]
}, Open  ]],
Cell[302668, 6488, 138, 2, 30, "Text"],
Cell[302809, 6492, 162, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[302996, 6500, 210, 5, 46, "Input"],
Cell[303209, 6507, 183, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303429, 6517, 122, 2, 31, "Input"],
Cell[303554, 6521, 183, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303774, 6531, 127, 2, 31, "Input"],
Cell[303904, 6535, 183, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304124, 6545, 283, 7, 31, "Input"],
Cell[304410, 6554, 277, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304724, 6568, 147, 3, 31, "Input"],
Cell[304874, 6573, 362, 13, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305273, 6591, 128, 2, 31, "Input"],
Cell[305404, 6595, 126, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305567, 6604, 295, 8, 31, "Input"],
Cell[305865, 6614, 213, 8, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306115, 6627, 225, 9, 46, "Input"],
Cell[306343, 6638, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306468, 6644, 236, 6, 31, "Input"],
Cell[306707, 6652, 152, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306896, 6661, 321, 9, 31, "Input"],
Cell[307220, 6672, 237, 7, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307506, 6685, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[307636, 6690, 306, 8, 31, "Input"],
Cell[307945, 6700, 579, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308561, 6724, 166, 3, 31, "Input"],
Cell[308730, 6729, 257, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309024, 6742, 656, 17, 92, "Input"],
Cell[309683, 6761, 39007, 697, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348727, 7463, 314, 8, 31, "Input"],
Cell[349044, 7473, 1390, 46, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350471, 7524, 170, 3, 31, "Input"],
Cell[350644, 7529, 810, 26, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351491, 7560, 532, 15, 92, "Input"],
Cell[352026, 7577, 44750, 790, 374, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396825, 8373, 109, 1, 70, "Section"],
Cell[396937, 8376, 139, 2, 30, "Text"],
Cell[397079, 8380, 141, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[397245, 8386, 379, 11, 31, "Input"],
Cell[397627, 8399, 319, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397983, 8413, 196, 6, 31, "Input"],
Cell[398182, 8421, 442, 14, 31, "Output"]
}, Open  ]],
Cell[398639, 8438, 143, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[398807, 8444, 703, 22, 31, "Input"],
Cell[399513, 8468, 634, 21, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400184, 8494, 292, 9, 31, "Input"],
Cell[400479, 8505, 915, 29, 66, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
